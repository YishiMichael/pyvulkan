<namespace name="vk">
  <enum name="AccessFlagBits">
    <member name="eIndirectCommandRead" />
    <member name="eIndexRead" />
    <member name="eVertexAttributeRead" />
    <member name="eUniformRead" />
    <member name="eInputAttachmentRead" />
    <member name="eShaderRead" />
    <member name="eShaderWrite" />
    <member name="eColorAttachmentRead" />
    <member name="eColorAttachmentWrite" />
    <member name="eDepthStencilAttachmentRead" />
    <member name="eDepthStencilAttachmentWrite" />
    <member name="eTransferRead" />
    <member name="eTransferWrite" />
    <member name="eHostRead" />
    <member name="eHostWrite" />
    <member name="eMemoryRead" />
    <member name="eMemoryWrite" />
    <member name="eNone" />
    <member name="eTransformFeedbackWriteEXT" />
    <member name="eTransformFeedbackCounterReadEXT" />
    <member name="eTransformFeedbackCounterWriteEXT" />
    <member name="eConditionalRenderingReadEXT" />
    <member name="eColorAttachmentReadNoncoherentEXT" />
    <member name="eAccelerationStructureReadKHR" />
    <member name="eAccelerationStructureWriteKHR" />
    <member name="eShadingRateImageReadNV" />
    <member name="eAccelerationStructureReadNV" />
    <member name="eAccelerationStructureWriteNV" />
    <member name="eFragmentDensityMapReadEXT" />
    <member name="eFragmentShadingRateAttachmentReadKHR" />
    <member name="eCommandPreprocessReadNV" />
    <member name="eCommandPreprocessWriteNV" />
    <member name="eNoneKHR" />
  </enum>
  <enum name="AttachmentDescriptionFlagBits">
    <member name="eMayAlias" />
  </enum>
  <enum name="AttachmentLoadOp">
    <member name="eLoad" />
    <member name="eClear" />
    <member name="eDontCare" />
    <member name="eNoneEXT" />
  </enum>
  <enum name="AttachmentStoreOp">
    <member name="eStore" />
    <member name="eDontCare" />
    <member name="eNone" />
    <member name="eNoneKHR" />
    <member name="eNoneQCOM" />
    <member name="eNoneEXT" />
  </enum>
  <enum name="BlendFactor">
    <member name="eZero" />
    <member name="eOne" />
    <member name="eSrcColor" />
    <member name="eOneMinusSrcColor" />
    <member name="eDstColor" />
    <member name="eOneMinusDstColor" />
    <member name="eSrcAlpha" />
    <member name="eOneMinusSrcAlpha" />
    <member name="eDstAlpha" />
    <member name="eOneMinusDstAlpha" />
    <member name="eConstantColor" />
    <member name="eOneMinusConstantColor" />
    <member name="eConstantAlpha" />
    <member name="eOneMinusConstantAlpha" />
    <member name="eSrcAlphaSaturate" />
    <member name="eSrc1Color" />
    <member name="eOneMinusSrc1Color" />
    <member name="eSrc1Alpha" />
    <member name="eOneMinusSrc1Alpha" />
  </enum>
  <enum name="BlendOp">
    <member name="eAdd" />
    <member name="eSubtract" />
    <member name="eReverseSubtract" />
    <member name="eMin" />
    <member name="eMax" />
    <member name="eZeroEXT" />
    <member name="eSrcEXT" />
    <member name="eDstEXT" />
    <member name="eSrcOverEXT" />
    <member name="eDstOverEXT" />
    <member name="eSrcInEXT" />
    <member name="eDstInEXT" />
    <member name="eSrcOutEXT" />
    <member name="eDstOutEXT" />
    <member name="eSrcAtopEXT" />
    <member name="eDstAtopEXT" />
    <member name="eXorEXT" />
    <member name="eMultiplyEXT" />
    <member name="eScreenEXT" />
    <member name="eOverlayEXT" />
    <member name="eDarkenEXT" />
    <member name="eLightenEXT" />
    <member name="eColordodgeEXT" />
    <member name="eColorburnEXT" />
    <member name="eHardlightEXT" />
    <member name="eSoftlightEXT" />
    <member name="eDifferenceEXT" />
    <member name="eExclusionEXT" />
    <member name="eInvertEXT" />
    <member name="eInvertRgbEXT" />
    <member name="eLineardodgeEXT" />
    <member name="eLinearburnEXT" />
    <member name="eVividlightEXT" />
    <member name="eLinearlightEXT" />
    <member name="ePinlightEXT" />
    <member name="eHardmixEXT" />
    <member name="eHslHueEXT" />
    <member name="eHslSaturationEXT" />
    <member name="eHslColorEXT" />
    <member name="eHslLuminosityEXT" />
    <member name="ePlusEXT" />
    <member name="ePlusClampedEXT" />
    <member name="ePlusClampedAlphaEXT" />
    <member name="ePlusDarkerEXT" />
    <member name="eMinusEXT" />
    <member name="eMinusClampedEXT" />
    <member name="eContrastEXT" />
    <member name="eInvertOvgEXT" />
    <member name="eRedEXT" />
    <member name="eGreenEXT" />
    <member name="eBlueEXT" />
  </enum>
  <enum name="BorderColor">
    <member name="eFloatTransparentBlack" />
    <member name="eIntTransparentBlack" />
    <member name="eFloatOpaqueBlack" />
    <member name="eIntOpaqueBlack" />
    <member name="eFloatOpaqueWhite" />
    <member name="eIntOpaqueWhite" />
    <member name="eFloatCustomEXT" />
    <member name="eIntCustomEXT" />
  </enum>
  <enum name="BufferCreateFlagBits">
    <member name="eSparseBinding" />
    <member name="eSparseResidency" />
    <member name="eSparseAliased" />
    <member name="eProtected" />
    <member name="eDeviceAddressCaptureReplay" />
    <member name="eDeviceAddressCaptureReplayEXT" />
    <member name="eDeviceAddressCaptureReplayKHR" />
    <member name="eDescriptorBufferCaptureReplayEXT" />
    <member name="eVideoProfileIndependentKHR" />
  </enum>
  <enum name="BufferUsageFlagBits">
    <member name="eTransferSrc" />
    <member name="eTransferDst" />
    <member name="eUniformTexelBuffer" />
    <member name="eStorageTexelBuffer" />
    <member name="eUniformBuffer" />
    <member name="eStorageBuffer" />
    <member name="eIndexBuffer" />
    <member name="eVertexBuffer" />
    <member name="eIndirectBuffer" />
    <member name="eShaderDeviceAddress" />
    <member name="eVideoDecodeSrcKHR" />
    <member name="eVideoDecodeDstKHR" />
    <member name="eTransformFeedbackBufferEXT" />
    <member name="eTransformFeedbackCounterBufferEXT" />
    <member name="eConditionalRenderingEXT" />
    <member name="eAccelerationStructureBuildInputReadOnlyKHR" />
    <member name="eAccelerationStructureStorageKHR" />
    <member name="eShaderBindingTableKHR" />
    <member name="eRayTracingNV" />
    <member name="eShaderDeviceAddressEXT" />
    <member name="eShaderDeviceAddressKHR" />
    <member name="eVideoEncodeDstKHR" />
    <member name="eVideoEncodeSrcKHR" />
    <member name="eSamplerDescriptorBufferEXT" />
    <member name="eResourceDescriptorBufferEXT" />
    <member name="ePushDescriptorsDescriptorBufferEXT" />
    <member name="eMicromapBuildInputReadOnlyEXT" />
    <member name="eMicromapStorageEXT" />
  </enum>
  <enum name="BufferViewCreateFlagBits" />
  <enum name="ColorComponentFlagBits">
    <member name="eR" />
    <member name="eG" />
    <member name="eB" />
    <member name="eA" />
  </enum>
  <enum name="CommandBufferLevel">
    <member name="ePrimary" />
    <member name="eSecondary" />
  </enum>
  <enum name="CommandBufferResetFlagBits">
    <member name="eReleaseResources" />
  </enum>
  <enum name="CommandBufferUsageFlagBits">
    <member name="eOneTimeSubmit" />
    <member name="eRenderPassContinue" />
    <member name="eSimultaneousUse" />
  </enum>
  <enum name="CommandPoolCreateFlagBits">
    <member name="eTransient" />
    <member name="eResetCommandBuffer" />
    <member name="eProtected" />
  </enum>
  <enum name="CommandPoolResetFlagBits">
    <member name="eReleaseResources" />
  </enum>
  <enum name="CompareOp">
    <member name="eNever" />
    <member name="eLess" />
    <member name="eEqual" />
    <member name="eLessOrEqual" />
    <member name="eGreater" />
    <member name="eNotEqual" />
    <member name="eGreaterOrEqual" />
    <member name="eAlways" />
  </enum>
  <enum name="ComponentSwizzle">
    <member name="eIdentity" />
    <member name="eZero" />
    <member name="eOne" />
    <member name="eR" />
    <member name="eG" />
    <member name="eB" />
    <member name="eA" />
  </enum>
  <enum name="CullModeFlagBits">
    <member name="eNone" />
    <member name="eFront" />
    <member name="eBack" />
    <member name="eFrontAndBack" />
  </enum>
  <enum name="DependencyFlagBits">
    <member name="eByRegion" />
    <member name="eDeviceGroup" />
    <member name="eViewLocal" />
    <member name="eViewLocalKHR" />
    <member name="eDeviceGroupKHR" />
    <member name="eFeedbackLoopEXT" />
  </enum>
  <enum name="DescriptorPoolCreateFlagBits">
    <member name="eFreeDescriptorSet" />
    <member name="eUpdateAfterBind" />
    <member name="eUpdateAfterBindEXT" />
    <member name="eHostOnlyVALVE" />
    <member name="eHostOnlyEXT" />
    <member name="eAllowOverallocationSetsNV" />
    <member name="eAllowOverallocationPoolsNV" />
  </enum>
  <enum name="DescriptorPoolResetFlagBits" />
  <enum name="DescriptorSetLayoutCreateFlagBits">
    <member name="eUpdateAfterBindPool" />
    <member name="ePushDescriptorKHR" />
    <member name="eUpdateAfterBindPoolEXT" />
    <member name="eDescriptorBufferEXT" />
    <member name="eEmbeddedImmutableSamplersEXT" />
    <member name="eHostOnlyPoolVALVE" />
    <member name="eIndirectBindableNV" />
    <member name="eHostOnlyPoolEXT" />
    <member name="ePerStageNV" />
  </enum>
  <enum name="DescriptorType">
    <member name="eSampler" />
    <member name="eCombinedImageSampler" />
    <member name="eSampledImage" />
    <member name="eStorageImage" />
    <member name="eUniformTexelBuffer" />
    <member name="eStorageTexelBuffer" />
    <member name="eUniformBuffer" />
    <member name="eStorageBuffer" />
    <member name="eUniformBufferDynamic" />
    <member name="eStorageBufferDynamic" />
    <member name="eInputAttachment" />
    <member name="eInlineUniformBlock" />
    <member name="eInlineUniformBlockEXT" />
    <member name="eAccelerationStructureKHR" />
    <member name="eAccelerationStructureNV" />
    <member name="eMutableVALVE" />
    <member name="eSampleWeightImageQCOM" />
    <member name="eBlockMatchImageQCOM" />
    <member name="eMutableEXT" />
  </enum>
  <enum name="DeviceCreateFlagBits" />
  <enum name="DeviceQueueCreateFlagBits">
    <member name="eProtected" />
  </enum>
  <enum name="DynamicState">
    <member name="eViewport" />
    <member name="eScissor" />
    <member name="eLineWidth" />
    <member name="eDepthBias" />
    <member name="eBlendConstants" />
    <member name="eDepthBounds" />
    <member name="eStencilCompareMask" />
    <member name="eStencilWriteMask" />
    <member name="eStencilReference" />
    <member name="eCullMode" />
    <member name="eFrontFace" />
    <member name="ePrimitiveTopology" />
    <member name="eViewportWithCount" />
    <member name="eScissorWithCount" />
    <member name="eVertexInputBindingStride" />
    <member name="eDepthTestEnable" />
    <member name="eDepthWriteEnable" />
    <member name="eDepthCompareOp" />
    <member name="eDepthBoundsTestEnable" />
    <member name="eStencilTestEnable" />
    <member name="eStencilOp" />
    <member name="eRasterizerDiscardEnable" />
    <member name="eDepthBiasEnable" />
    <member name="ePrimitiveRestartEnable" />
    <member name="eViewportWScalingNV" />
    <member name="eDiscardRectangleEXT" />
    <member name="eDiscardRectangleEnableEXT" />
    <member name="eDiscardRectangleModeEXT" />
    <member name="eSampleLocationsEXT" />
    <member name="eRayTracingPipelineStackSizeKHR" />
    <member name="eViewportShadingRatePaletteNV" />
    <member name="eViewportCoarseSampleOrderNV" />
    <member name="eExclusiveScissorEnableNV" />
    <member name="eExclusiveScissorNV" />
    <member name="eFragmentShadingRateKHR" />
    <member name="eLineStippleEXT" />
    <member name="eCullModeEXT" />
    <member name="eFrontFaceEXT" />
    <member name="ePrimitiveTopologyEXT" />
    <member name="eViewportWithCountEXT" />
    <member name="eScissorWithCountEXT" />
    <member name="eVertexInputBindingStrideEXT" />
    <member name="eDepthTestEnableEXT" />
    <member name="eDepthWriteEnableEXT" />
    <member name="eDepthCompareOpEXT" />
    <member name="eDepthBoundsTestEnableEXT" />
    <member name="eStencilTestEnableEXT" />
    <member name="eStencilOpEXT" />
    <member name="eVertexInputEXT" />
    <member name="ePatchControlPointsEXT" />
    <member name="eRasterizerDiscardEnableEXT" />
    <member name="eDepthBiasEnableEXT" />
    <member name="eLogicOpEXT" />
    <member name="ePrimitiveRestartEnableEXT" />
    <member name="eColorWriteEnableEXT" />
    <member name="eTessellationDomainOriginEXT" />
    <member name="eDepthClampEnableEXT" />
    <member name="ePolygonModeEXT" />
    <member name="eRasterizationSamplesEXT" />
    <member name="eSampleMaskEXT" />
    <member name="eAlphaToCoverageEnableEXT" />
    <member name="eAlphaToOneEnableEXT" />
    <member name="eLogicOpEnableEXT" />
    <member name="eColorBlendEnableEXT" />
    <member name="eColorBlendEquationEXT" />
    <member name="eColorWriteMaskEXT" />
    <member name="eRasterizationStreamEXT" />
    <member name="eConservativeRasterizationModeEXT" />
    <member name="eExtraPrimitiveOverestimationSizeEXT" />
    <member name="eDepthClipEnableEXT" />
    <member name="eSampleLocationsEnableEXT" />
    <member name="eColorBlendAdvancedEXT" />
    <member name="eProvokingVertexModeEXT" />
    <member name="eLineRasterizationModeEXT" />
    <member name="eLineStippleEnableEXT" />
    <member name="eDepthClipNegativeOneToOneEXT" />
    <member name="eViewportWScalingEnableNV" />
    <member name="eViewportSwizzleNV" />
    <member name="eCoverageToColorEnableNV" />
    <member name="eCoverageToColorLocationNV" />
    <member name="eCoverageModulationModeNV" />
    <member name="eCoverageModulationTableEnableNV" />
    <member name="eCoverageModulationTableNV" />
    <member name="eShadingRateImageEnableNV" />
    <member name="eRepresentativeFragmentTestEnableNV" />
    <member name="eCoverageReductionModeNV" />
    <member name="eAttachmentFeedbackLoopEnableEXT" />
  </enum>
  <enum name="EventCreateFlagBits">
    <member name="eDeviceOnly" />
    <member name="eDeviceOnlyKHR" />
  </enum>
  <enum name="FenceCreateFlagBits">
    <member name="eSignaled" />
  </enum>
  <enum name="Filter">
    <member name="eNearest" />
    <member name="eLinear" />
    <member name="eCubicIMG" />
    <member name="eCubicEXT" />
  </enum>
  <enum name="Format">
    <member name="eUndefined" />
    <member name="eR4G4UnormPack8" />
    <member name="eR4G4B4A4UnormPack16" />
    <member name="eB4G4R4A4UnormPack16" />
    <member name="eR5G6B5UnormPack16" />
    <member name="eB5G6R5UnormPack16" />
    <member name="eR5G5B5A1UnormPack16" />
    <member name="eB5G5R5A1UnormPack16" />
    <member name="eA1R5G5B5UnormPack16" />
    <member name="eR8Unorm" />
    <member name="eR8Snorm" />
    <member name="eR8Uscaled" />
    <member name="eR8Sscaled" />
    <member name="eR8Uint" />
    <member name="eR8Sint" />
    <member name="eR8Srgb" />
    <member name="eR8G8Unorm" />
    <member name="eR8G8Snorm" />
    <member name="eR8G8Uscaled" />
    <member name="eR8G8Sscaled" />
    <member name="eR8G8Uint" />
    <member name="eR8G8Sint" />
    <member name="eR8G8Srgb" />
    <member name="eR8G8B8Unorm" />
    <member name="eR8G8B8Snorm" />
    <member name="eR8G8B8Uscaled" />
    <member name="eR8G8B8Sscaled" />
    <member name="eR8G8B8Uint" />
    <member name="eR8G8B8Sint" />
    <member name="eR8G8B8Srgb" />
    <member name="eB8G8R8Unorm" />
    <member name="eB8G8R8Snorm" />
    <member name="eB8G8R8Uscaled" />
    <member name="eB8G8R8Sscaled" />
    <member name="eB8G8R8Uint" />
    <member name="eB8G8R8Sint" />
    <member name="eB8G8R8Srgb" />
    <member name="eR8G8B8A8Unorm" />
    <member name="eR8G8B8A8Snorm" />
    <member name="eR8G8B8A8Uscaled" />
    <member name="eR8G8B8A8Sscaled" />
    <member name="eR8G8B8A8Uint" />
    <member name="eR8G8B8A8Sint" />
    <member name="eR8G8B8A8Srgb" />
    <member name="eB8G8R8A8Unorm" />
    <member name="eB8G8R8A8Snorm" />
    <member name="eB8G8R8A8Uscaled" />
    <member name="eB8G8R8A8Sscaled" />
    <member name="eB8G8R8A8Uint" />
    <member name="eB8G8R8A8Sint" />
    <member name="eB8G8R8A8Srgb" />
    <member name="eA8B8G8R8UnormPack32" />
    <member name="eA8B8G8R8SnormPack32" />
    <member name="eA8B8G8R8UscaledPack32" />
    <member name="eA8B8G8R8SscaledPack32" />
    <member name="eA8B8G8R8UintPack32" />
    <member name="eA8B8G8R8SintPack32" />
    <member name="eA8B8G8R8SrgbPack32" />
    <member name="eA2R10G10B10UnormPack32" />
    <member name="eA2R10G10B10SnormPack32" />
    <member name="eA2R10G10B10UscaledPack32" />
    <member name="eA2R10G10B10SscaledPack32" />
    <member name="eA2R10G10B10UintPack32" />
    <member name="eA2R10G10B10SintPack32" />
    <member name="eA2B10G10R10UnormPack32" />
    <member name="eA2B10G10R10SnormPack32" />
    <member name="eA2B10G10R10UscaledPack32" />
    <member name="eA2B10G10R10SscaledPack32" />
    <member name="eA2B10G10R10UintPack32" />
    <member name="eA2B10G10R10SintPack32" />
    <member name="eR16Unorm" />
    <member name="eR16Snorm" />
    <member name="eR16Uscaled" />
    <member name="eR16Sscaled" />
    <member name="eR16Uint" />
    <member name="eR16Sint" />
    <member name="eR16Sfloat" />
    <member name="eR16G16Unorm" />
    <member name="eR16G16Snorm" />
    <member name="eR16G16Uscaled" />
    <member name="eR16G16Sscaled" />
    <member name="eR16G16Uint" />
    <member name="eR16G16Sint" />
    <member name="eR16G16Sfloat" />
    <member name="eR16G16B16Unorm" />
    <member name="eR16G16B16Snorm" />
    <member name="eR16G16B16Uscaled" />
    <member name="eR16G16B16Sscaled" />
    <member name="eR16G16B16Uint" />
    <member name="eR16G16B16Sint" />
    <member name="eR16G16B16Sfloat" />
    <member name="eR16G16B16A16Unorm" />
    <member name="eR16G16B16A16Snorm" />
    <member name="eR16G16B16A16Uscaled" />
    <member name="eR16G16B16A16Sscaled" />
    <member name="eR16G16B16A16Uint" />
    <member name="eR16G16B16A16Sint" />
    <member name="eR16G16B16A16Sfloat" />
    <member name="eR32Uint" />
    <member name="eR32Sint" />
    <member name="eR32Sfloat" />
    <member name="eR32G32Uint" />
    <member name="eR32G32Sint" />
    <member name="eR32G32Sfloat" />
    <member name="eR32G32B32Uint" />
    <member name="eR32G32B32Sint" />
    <member name="eR32G32B32Sfloat" />
    <member name="eR32G32B32A32Uint" />
    <member name="eR32G32B32A32Sint" />
    <member name="eR32G32B32A32Sfloat" />
    <member name="eR64Uint" />
    <member name="eR64Sint" />
    <member name="eR64Sfloat" />
    <member name="eR64G64Uint" />
    <member name="eR64G64Sint" />
    <member name="eR64G64Sfloat" />
    <member name="eR64G64B64Uint" />
    <member name="eR64G64B64Sint" />
    <member name="eR64G64B64Sfloat" />
    <member name="eR64G64B64A64Uint" />
    <member name="eR64G64B64A64Sint" />
    <member name="eR64G64B64A64Sfloat" />
    <member name="eB10G11R11UfloatPack32" />
    <member name="eE5B9G9R9UfloatPack32" />
    <member name="eD16Unorm" />
    <member name="eX8D24UnormPack32" />
    <member name="eD32Sfloat" />
    <member name="eS8Uint" />
    <member name="eD16UnormS8Uint" />
    <member name="eD24UnormS8Uint" />
    <member name="eD32SfloatS8Uint" />
    <member name="eBc1RgbUnormBlock" />
    <member name="eBc1RgbSrgbBlock" />
    <member name="eBc1RgbaUnormBlock" />
    <member name="eBc1RgbaSrgbBlock" />
    <member name="eBc2UnormBlock" />
    <member name="eBc2SrgbBlock" />
    <member name="eBc3UnormBlock" />
    <member name="eBc3SrgbBlock" />
    <member name="eBc4UnormBlock" />
    <member name="eBc4SnormBlock" />
    <member name="eBc5UnormBlock" />
    <member name="eBc5SnormBlock" />
    <member name="eBc6HUfloatBlock" />
    <member name="eBc6HSfloatBlock" />
    <member name="eBc7UnormBlock" />
    <member name="eBc7SrgbBlock" />
    <member name="eEtc2R8G8B8UnormBlock" />
    <member name="eEtc2R8G8B8SrgbBlock" />
    <member name="eEtc2R8G8B8A1UnormBlock" />
    <member name="eEtc2R8G8B8A1SrgbBlock" />
    <member name="eEtc2R8G8B8A8UnormBlock" />
    <member name="eEtc2R8G8B8A8SrgbBlock" />
    <member name="eEacR11UnormBlock" />
    <member name="eEacR11SnormBlock" />
    <member name="eEacR11G11UnormBlock" />
    <member name="eEacR11G11SnormBlock" />
    <member name="eAstc4x4UnormBlock" />
    <member name="eAstc4x4SrgbBlock" />
    <member name="eAstc5x4UnormBlock" />
    <member name="eAstc5x4SrgbBlock" />
    <member name="eAstc5x5UnormBlock" />
    <member name="eAstc5x5SrgbBlock" />
    <member name="eAstc6x5UnormBlock" />
    <member name="eAstc6x5SrgbBlock" />
    <member name="eAstc6x6UnormBlock" />
    <member name="eAstc6x6SrgbBlock" />
    <member name="eAstc8x5UnormBlock" />
    <member name="eAstc8x5SrgbBlock" />
    <member name="eAstc8x6UnormBlock" />
    <member name="eAstc8x6SrgbBlock" />
    <member name="eAstc8x8UnormBlock" />
    <member name="eAstc8x8SrgbBlock" />
    <member name="eAstc10x5UnormBlock" />
    <member name="eAstc10x5SrgbBlock" />
    <member name="eAstc10x6UnormBlock" />
    <member name="eAstc10x6SrgbBlock" />
    <member name="eAstc10x8UnormBlock" />
    <member name="eAstc10x8SrgbBlock" />
    <member name="eAstc10x10UnormBlock" />
    <member name="eAstc10x10SrgbBlock" />
    <member name="eAstc12x10UnormBlock" />
    <member name="eAstc12x10SrgbBlock" />
    <member name="eAstc12x12UnormBlock" />
    <member name="eAstc12x12SrgbBlock" />
    <member name="eG8B8G8R8422Unorm" />
    <member name="eB8G8R8G8422Unorm" />
    <member name="eG8B8R83Plane420Unorm" />
    <member name="eG8B8R82Plane420Unorm" />
    <member name="eG8B8R83Plane422Unorm" />
    <member name="eG8B8R82Plane422Unorm" />
    <member name="eG8B8R83Plane444Unorm" />
    <member name="eR10X6UnormPack16" />
    <member name="eR10X6G10X6Unorm2Pack16" />
    <member name="eR10X6G10X6B10X6A10X6Unorm4Pack16" />
    <member name="eG10X6B10X6G10X6R10X6422Unorm4Pack16" />
    <member name="eB10X6G10X6R10X6G10X6422Unorm4Pack16" />
    <member name="eG10X6B10X6R10X63Plane420Unorm3Pack16" />
    <member name="eG10X6B10X6R10X62Plane420Unorm3Pack16" />
    <member name="eG10X6B10X6R10X63Plane422Unorm3Pack16" />
    <member name="eG10X6B10X6R10X62Plane422Unorm3Pack16" />
    <member name="eG10X6B10X6R10X63Plane444Unorm3Pack16" />
    <member name="eR12X4UnormPack16" />
    <member name="eR12X4G12X4Unorm2Pack16" />
    <member name="eR12X4G12X4B12X4A12X4Unorm4Pack16" />
    <member name="eG12X4B12X4G12X4R12X4422Unorm4Pack16" />
    <member name="eB12X4G12X4R12X4G12X4422Unorm4Pack16" />
    <member name="eG12X4B12X4R12X43Plane420Unorm3Pack16" />
    <member name="eG12X4B12X4R12X42Plane420Unorm3Pack16" />
    <member name="eG12X4B12X4R12X43Plane422Unorm3Pack16" />
    <member name="eG12X4B12X4R12X42Plane422Unorm3Pack16" />
    <member name="eG12X4B12X4R12X43Plane444Unorm3Pack16" />
    <member name="eG16B16G16R16422Unorm" />
    <member name="eB16G16R16G16422Unorm" />
    <member name="eG16B16R163Plane420Unorm" />
    <member name="eG16B16R162Plane420Unorm" />
    <member name="eG16B16R163Plane422Unorm" />
    <member name="eG16B16R162Plane422Unorm" />
    <member name="eG16B16R163Plane444Unorm" />
    <member name="eG8B8R82Plane444Unorm" />
    <member name="eG10X6B10X6R10X62Plane444Unorm3Pack16" />
    <member name="eG12X4B12X4R12X42Plane444Unorm3Pack16" />
    <member name="eG16B16R162Plane444Unorm" />
    <member name="eA4R4G4B4UnormPack16" />
    <member name="eA4B4G4R4UnormPack16" />
    <member name="eAstc4x4SfloatBlock" />
    <member name="eAstc5x4SfloatBlock" />
    <member name="eAstc5x5SfloatBlock" />
    <member name="eAstc6x5SfloatBlock" />
    <member name="eAstc6x6SfloatBlock" />
    <member name="eAstc8x5SfloatBlock" />
    <member name="eAstc8x6SfloatBlock" />
    <member name="eAstc8x8SfloatBlock" />
    <member name="eAstc10x5SfloatBlock" />
    <member name="eAstc10x6SfloatBlock" />
    <member name="eAstc10x8SfloatBlock" />
    <member name="eAstc10x10SfloatBlock" />
    <member name="eAstc12x10SfloatBlock" />
    <member name="eAstc12x12SfloatBlock" />
    <member name="ePvrtc12BppUnormBlockIMG" />
    <member name="ePvrtc14BppUnormBlockIMG" />
    <member name="ePvrtc22BppUnormBlockIMG" />
    <member name="ePvrtc24BppUnormBlockIMG" />
    <member name="ePvrtc12BppSrgbBlockIMG" />
    <member name="ePvrtc14BppSrgbBlockIMG" />
    <member name="ePvrtc22BppSrgbBlockIMG" />
    <member name="ePvrtc24BppSrgbBlockIMG" />
    <member name="eAstc4x4SfloatBlockEXT" />
    <member name="eAstc5x4SfloatBlockEXT" />
    <member name="eAstc5x5SfloatBlockEXT" />
    <member name="eAstc6x5SfloatBlockEXT" />
    <member name="eAstc6x6SfloatBlockEXT" />
    <member name="eAstc8x5SfloatBlockEXT" />
    <member name="eAstc8x6SfloatBlockEXT" />
    <member name="eAstc8x8SfloatBlockEXT" />
    <member name="eAstc10x5SfloatBlockEXT" />
    <member name="eAstc10x6SfloatBlockEXT" />
    <member name="eAstc10x8SfloatBlockEXT" />
    <member name="eAstc10x10SfloatBlockEXT" />
    <member name="eAstc12x10SfloatBlockEXT" />
    <member name="eAstc12x12SfloatBlockEXT" />
    <member name="eG8B8G8R8422UnormKHR" />
    <member name="eB8G8R8G8422UnormKHR" />
    <member name="eG8B8R83Plane420UnormKHR" />
    <member name="eG8B8R82Plane420UnormKHR" />
    <member name="eG8B8R83Plane422UnormKHR" />
    <member name="eG8B8R82Plane422UnormKHR" />
    <member name="eG8B8R83Plane444UnormKHR" />
    <member name="eR10X6UnormPack16KHR" />
    <member name="eR10X6G10X6Unorm2Pack16KHR" />
    <member name="eR10X6G10X6B10X6A10X6Unorm4Pack16KHR" />
    <member name="eG10X6B10X6G10X6R10X6422Unorm4Pack16KHR" />
    <member name="eB10X6G10X6R10X6G10X6422Unorm4Pack16KHR" />
    <member name="eG10X6B10X6R10X63Plane420Unorm3Pack16KHR" />
    <member name="eG10X6B10X6R10X62Plane420Unorm3Pack16KHR" />
    <member name="eG10X6B10X6R10X63Plane422Unorm3Pack16KHR" />
    <member name="eG10X6B10X6R10X62Plane422Unorm3Pack16KHR" />
    <member name="eG10X6B10X6R10X63Plane444Unorm3Pack16KHR" />
    <member name="eR12X4UnormPack16KHR" />
    <member name="eR12X4G12X4Unorm2Pack16KHR" />
    <member name="eR12X4G12X4B12X4A12X4Unorm4Pack16KHR" />
    <member name="eG12X4B12X4G12X4R12X4422Unorm4Pack16KHR" />
    <member name="eB12X4G12X4R12X4G12X4422Unorm4Pack16KHR" />
    <member name="eG12X4B12X4R12X43Plane420Unorm3Pack16KHR" />
    <member name="eG12X4B12X4R12X42Plane420Unorm3Pack16KHR" />
    <member name="eG12X4B12X4R12X43Plane422Unorm3Pack16KHR" />
    <member name="eG12X4B12X4R12X42Plane422Unorm3Pack16KHR" />
    <member name="eG12X4B12X4R12X43Plane444Unorm3Pack16KHR" />
    <member name="eG16B16G16R16422UnormKHR" />
    <member name="eB16G16R16G16422UnormKHR" />
    <member name="eG16B16R163Plane420UnormKHR" />
    <member name="eG16B16R162Plane420UnormKHR" />
    <member name="eG16B16R163Plane422UnormKHR" />
    <member name="eG16B16R162Plane422UnormKHR" />
    <member name="eG16B16R163Plane444UnormKHR" />
    <member name="eG8B8R82Plane444UnormEXT" />
    <member name="eG10X6B10X6R10X62Plane444Unorm3Pack16EXT" />
    <member name="eG12X4B12X4R12X42Plane444Unorm3Pack16EXT" />
    <member name="eG16B16R162Plane444UnormEXT" />
    <member name="eA4R4G4B4UnormPack16EXT" />
    <member name="eA4B4G4R4UnormPack16EXT" />
    <member name="eR16G16S105NV" />
    <member name="eA1B5G5R5UnormPack16KHR" />
    <member name="eA8UnormKHR" />
  </enum>
  <enum name="FormatFeatureFlagBits">
    <member name="eSampledImage" />
    <member name="eStorageImage" />
    <member name="eStorageImageAtomic" />
    <member name="eUniformTexelBuffer" />
    <member name="eStorageTexelBuffer" />
    <member name="eStorageTexelBufferAtomic" />
    <member name="eVertexBuffer" />
    <member name="eColorAttachment" />
    <member name="eColorAttachmentBlend" />
    <member name="eDepthStencilAttachment" />
    <member name="eBlitSrc" />
    <member name="eBlitDst" />
    <member name="eSampledImageFilterLinear" />
    <member name="eTransferSrc" />
    <member name="eTransferDst" />
    <member name="eMidpointChromaSamples" />
    <member name="eSampledImageYcbcrConversionLinearFilter" />
    <member name="eSampledImageYcbcrConversionSeparateReconstructionFilter" />
    <member name="eSampledImageYcbcrConversionChromaReconstructionExplicit" />
    <member name="eSampledImageYcbcrConversionChromaReconstructionExplicitForceable" />
    <member name="eDisjoint" />
    <member name="eCositedChromaSamples" />
    <member name="eSampledImageFilterMinmax" />
    <member name="eSampledImageFilterCubicIMG" />
    <member name="eVideoDecodeOutputKHR" />
    <member name="eVideoDecodeDpbKHR" />
    <member name="eTransferSrcKHR" />
    <member name="eTransferDstKHR" />
    <member name="eSampledImageFilterMinmaxEXT" />
    <member name="eAccelerationStructureVertexBufferKHR" />
    <member name="eMidpointChromaSamplesKHR" />
    <member name="eSampledImageYcbcrConversionLinearFilterKHR" />
    <member name="eSampledImageYcbcrConversionSeparateReconstructionFilterKHR" />
    <member name="eSampledImageYcbcrConversionChromaReconstructionExplicitKHR" />
    <member name="eSampledImageYcbcrConversionChromaReconstructionExplicitForceableKHR" />
    <member name="eDisjointKHR" />
    <member name="eCositedChromaSamplesKHR" />
    <member name="eSampledImageFilterCubicEXT" />
    <member name="eFragmentDensityMapEXT" />
    <member name="eFragmentShadingRateAttachmentKHR" />
    <member name="eVideoEncodeInputKHR" />
    <member name="eVideoEncodeDpbKHR" />
  </enum>
  <enum name="FramebufferCreateFlagBits">
    <member name="eImageless" />
    <member name="eImagelessKHR" />
  </enum>
  <enum name="FrontFace">
    <member name="eCounterClockwise" />
    <member name="eClockwise" />
  </enum>
  <enum name="ImageAspectFlagBits">
    <member name="eColor" />
    <member name="eDepth" />
    <member name="eStencil" />
    <member name="eMetadata" />
    <member name="ePlane0" />
    <member name="ePlane1" />
    <member name="ePlane2" />
    <member name="eNone" />
    <member name="ePlane0KHR" />
    <member name="ePlane1KHR" />
    <member name="ePlane2KHR" />
    <member name="eMemoryPlane0EXT" />
    <member name="eMemoryPlane1EXT" />
    <member name="eMemoryPlane2EXT" />
    <member name="eMemoryPlane3EXT" />
    <member name="eNoneKHR" />
  </enum>
  <enum name="ImageCreateFlagBits">
    <member name="eSparseBinding" />
    <member name="eSparseResidency" />
    <member name="eSparseAliased" />
    <member name="eMutableFormat" />
    <member name="eCubeCompatible" />
    <member name="eAlias" />
    <member name="eSplitInstanceBindRegions" />
    <member name="e2DArrayCompatible" />
    <member name="eBlockTexelViewCompatible" />
    <member name="eExtendedUsage" />
    <member name="eProtected" />
    <member name="eDisjoint" />
    <member name="eCornerSampledNV" />
    <member name="eSplitInstanceBindRegionsKHR" />
    <member name="e2DArrayCompatibleKHR" />
    <member name="eBlockTexelViewCompatibleKHR" />
    <member name="eExtendedUsageKHR" />
    <member name="eSampleLocationsCompatibleDepthEXT" />
    <member name="eDisjointKHR" />
    <member name="eAliasKHR" />
    <member name="eSubsampledEXT" />
    <member name="eDescriptorBufferCaptureReplayEXT" />
    <member name="eMultisampledRenderToSingleSampledEXT" />
    <member name="e2DViewCompatibleEXT" />
    <member name="eFragmentDensityMapOffsetQCOM" />
    <member name="eVideoProfileIndependentKHR" />
  </enum>
  <enum name="ImageLayout">
    <member name="eUndefined" />
    <member name="eGeneral" />
    <member name="eColorAttachmentOptimal" />
    <member name="eDepthStencilAttachmentOptimal" />
    <member name="eDepthStencilReadOnlyOptimal" />
    <member name="eShaderReadOnlyOptimal" />
    <member name="eTransferSrcOptimal" />
    <member name="eTransferDstOptimal" />
    <member name="ePreinitialized" />
    <member name="eDepthReadOnlyStencilAttachmentOptimal" />
    <member name="eDepthAttachmentStencilReadOnlyOptimal" />
    <member name="eDepthAttachmentOptimal" />
    <member name="eDepthReadOnlyOptimal" />
    <member name="eStencilAttachmentOptimal" />
    <member name="eStencilReadOnlyOptimal" />
    <member name="eReadOnlyOptimal" />
    <member name="eAttachmentOptimal" />
    <member name="ePresentSrcKHR" />
    <member name="eVideoDecodeDstKHR" />
    <member name="eVideoDecodeSrcKHR" />
    <member name="eVideoDecodeDpbKHR" />
    <member name="eSharedPresentKHR" />
    <member name="eDepthReadOnlyStencilAttachmentOptimalKHR" />
    <member name="eDepthAttachmentStencilReadOnlyOptimalKHR" />
    <member name="eShadingRateOptimalNV" />
    <member name="eFragmentDensityMapOptimalEXT" />
    <member name="eFragmentShadingRateAttachmentOptimalKHR" />
    <member name="eDepthAttachmentOptimalKHR" />
    <member name="eDepthReadOnlyOptimalKHR" />
    <member name="eStencilAttachmentOptimalKHR" />
    <member name="eStencilReadOnlyOptimalKHR" />
    <member name="eVideoEncodeDstKHR" />
    <member name="eVideoEncodeSrcKHR" />
    <member name="eVideoEncodeDpbKHR" />
    <member name="eReadOnlyOptimalKHR" />
    <member name="eAttachmentOptimalKHR" />
    <member name="eAttachmentFeedbackLoopOptimalEXT" />
  </enum>
  <enum name="ImageTiling">
    <member name="eOptimal" />
    <member name="eLinear" />
    <member name="eDrmFormatModifierEXT" />
  </enum>
  <enum name="ImageType">
    <member name="e1D" />
    <member name="e2D" />
    <member name="e3D" />
  </enum>
  <enum name="ImageUsageFlagBits">
    <member name="eTransferSrc" />
    <member name="eTransferDst" />
    <member name="eSampled" />
    <member name="eStorage" />
    <member name="eColorAttachment" />
    <member name="eDepthStencilAttachment" />
    <member name="eTransientAttachment" />
    <member name="eInputAttachment" />
    <member name="eVideoDecodeDstKHR" />
    <member name="eVideoDecodeSrcKHR" />
    <member name="eVideoDecodeDpbKHR" />
    <member name="eShadingRateImageNV" />
    <member name="eFragmentDensityMapEXT" />
    <member name="eFragmentShadingRateAttachmentKHR" />
    <member name="eHostTransferEXT" />
    <member name="eVideoEncodeDstKHR" />
    <member name="eVideoEncodeSrcKHR" />
    <member name="eVideoEncodeDpbKHR" />
    <member name="eAttachmentFeedbackLoopEXT" />
    <member name="eInvocationMaskHUAWEI" />
    <member name="eSampleWeightQCOM" />
    <member name="eSampleBlockMatchQCOM" />
  </enum>
  <enum name="ImageViewCreateFlagBits">
    <member name="eFragmentDensityMapDynamicEXT" />
    <member name="eDescriptorBufferCaptureReplayEXT" />
    <member name="eFragmentDensityMapDeferredEXT" />
  </enum>
  <enum name="ImageViewType">
    <member name="e1D" />
    <member name="e2D" />
    <member name="e3D" />
    <member name="eCube" />
    <member name="e1DArray" />
    <member name="e2DArray" />
    <member name="eCubeArray" />
  </enum>
  <enum name="IndexType">
    <member name="eUint16" />
    <member name="eUint32" />
    <member name="eNoneKHR" />
    <member name="eNoneNV" />
    <member name="eUint8EXT" />
  </enum>
  <enum name="InstanceCreateFlagBits">
    <member name="eEnumeratePortabilityKHR" />
  </enum>
  <enum name="InternalAllocationType">
    <member name="eExecutable" />
  </enum>
  <enum name="LogicOp">
    <member name="eClear" />
    <member name="eAnd" />
    <member name="eAndReverse" />
    <member name="eCopy" />
    <member name="eAndInverted" />
    <member name="eNoOp" />
    <member name="eXor" />
    <member name="eOr" />
    <member name="eNor" />
    <member name="eEquivalent" />
    <member name="eInvert" />
    <member name="eOrReverse" />
    <member name="eCopyInverted" />
    <member name="eOrInverted" />
    <member name="eNand" />
    <member name="eSet" />
  </enum>
  <enum name="MemoryHeapFlagBits">
    <member name="eDeviceLocal" />
    <member name="eMultiInstance" />
    <member name="eMultiInstanceKHR" />
  </enum>
  <enum name="MemoryMapFlagBits" />
  <enum name="MemoryPropertyFlagBits">
    <member name="eDeviceLocal" />
    <member name="eHostVisible" />
    <member name="eHostCoherent" />
    <member name="eHostCached" />
    <member name="eLazilyAllocated" />
    <member name="eProtected" />
    <member name="eDeviceCoherentAMD" />
    <member name="eDeviceUncachedAMD" />
    <member name="eRdmaCapableNV" />
  </enum>
  <enum name="ObjectType">
    <member name="eUnknown" />
    <member name="eInstance" />
    <member name="ePhysicalDevice" />
    <member name="eDevice" />
    <member name="eQueue" />
    <member name="eSemaphore" />
    <member name="eCommandBuffer" />
    <member name="eFence" />
    <member name="eDeviceMemory" />
    <member name="eBuffer" />
    <member name="eImage" />
    <member name="eEvent" />
    <member name="eQueryPool" />
    <member name="eBufferView" />
    <member name="eImageView" />
    <member name="eShaderModule" />
    <member name="ePipelineCache" />
    <member name="ePipelineLayout" />
    <member name="eRenderPass" />
    <member name="ePipeline" />
    <member name="eDescriptorSetLayout" />
    <member name="eSampler" />
    <member name="eDescriptorPool" />
    <member name="eDescriptorSet" />
    <member name="eFramebuffer" />
    <member name="eCommandPool" />
    <member name="eSamplerYcbcrConversion" />
    <member name="eDescriptorUpdateTemplate" />
    <member name="ePrivateDataSlot" />
    <member name="eSurfaceKHR" />
    <member name="eSwapchainKHR" />
    <member name="eDisplayKHR" />
    <member name="eDisplayModeKHR" />
    <member name="eDebugReportCallbackEXT" />
    <member name="eVideoSessionKHR" />
    <member name="eVideoSessionParametersKHR" />
    <member name="eCuModuleNVX" />
    <member name="eCuFunctionNVX" />
    <member name="eDescriptorUpdateTemplateKHR" />
    <member name="eDebugUtilsMessengerEXT" />
    <member name="eAccelerationStructureKHR" />
    <member name="eSamplerYcbcrConversionKHR" />
    <member name="eValidationCacheEXT" />
    <member name="eAccelerationStructureNV" />
    <member name="ePerformanceConfigurationINTEL" />
    <member name="eDeferredOperationKHR" />
    <member name="eIndirectCommandsLayoutNV" />
    <member name="ePrivateDataSlotEXT" />
    <member name="eMicromapEXT" />
    <member name="eOpticalFlowSessionNV" />
    <member name="eShaderEXT" />
  </enum>
  <enum name="PhysicalDeviceType">
    <member name="eOther" />
    <member name="eIntegratedGpu" />
    <member name="eDiscreteGpu" />
    <member name="eVirtualGpu" />
    <member name="eCpu" />
  </enum>
  <enum name="PipelineBindPoint">
    <member name="eGraphics" />
    <member name="eCompute" />
    <member name="eRayTracingKHR" />
    <member name="eRayTracingNV" />
    <member name="eSubpassShadingHUAWEI" />
  </enum>
  <enum name="PipelineCacheCreateFlagBits">
    <member name="eExternallySynchronized" />
    <member name="eExternallySynchronizedEXT" />
  </enum>
  <enum name="PipelineCacheHeaderVersion">
    <member name="eOne" />
  </enum>
  <enum name="PipelineColorBlendStateCreateFlagBits">
    <member name="eRasterizationOrderAttachmentAccessARM" />
    <member name="eRasterizationOrderAttachmentAccessEXT" />
  </enum>
  <enum name="PipelineCreateFlagBits">
    <member name="eDisableOptimization" />
    <member name="eAllowDerivatives" />
    <member name="eDerivative" />
    <member name="eViewIndexFromDeviceIndex" />
    <member name="eDispatchBase" />
    <member name="eFailOnPipelineCompileRequired" />
    <member name="eEarlyReturnOnFailure" />
    <member name="eRenderingFragmentShadingRateAttachmentKHR" />
    <member name="eVkPipelineRasterizationStateCreateFragmentShadingRateAttachmentKHR" />
    <member name="eRenderingFragmentDensityMapAttachmentEXT" />
    <member name="eVkPipelineRasterizationStateCreateFragmentDensityMapAttachmentEXT" />
    <member name="eViewIndexFromDeviceIndexKHR" />
    <member name="eDispatchBaseKHR" />
    <member name="eRayTracingNoNullAnyHitShadersKHR" />
    <member name="eRayTracingNoNullClosestHitShadersKHR" />
    <member name="eRayTracingNoNullMissShadersKHR" />
    <member name="eRayTracingNoNullIntersectionShadersKHR" />
    <member name="eRayTracingSkipTrianglesKHR" />
    <member name="eRayTracingSkipAabbsKHR" />
    <member name="eRayTracingShaderGroupHandleCaptureReplayKHR" />
    <member name="eDeferCompileNV" />
    <member name="eCaptureStatisticsKHR" />
    <member name="eCaptureInternalRepresentationsKHR" />
    <member name="eIndirectBindableNV" />
    <member name="eLibraryKHR" />
    <member name="eFailOnPipelineCompileRequiredEXT" />
    <member name="eEarlyReturnOnFailureEXT" />
    <member name="eDescriptorBufferEXT" />
    <member name="eRetainLinkTimeOptimizationInfoEXT" />
    <member name="eLinkTimeOptimizationEXT" />
    <member name="eRayTracingAllowMotionNV" />
    <member name="eColorAttachmentFeedbackLoopEXT" />
    <member name="eDepthStencilAttachmentFeedbackLoopEXT" />
    <member name="eRayTracingOpacityMicromapEXT" />
    <member name="eNoProtectedAccessEXT" />
    <member name="eProtectedAccessOnlyEXT" />
  </enum>
  <enum name="PipelineDepthStencilStateCreateFlagBits">
    <member name="eRasterizationOrderAttachmentDepthAccessARM" />
    <member name="eRasterizationOrderAttachmentStencilAccessARM" />
    <member name="eRasterizationOrderAttachmentDepthAccessEXT" />
    <member name="eRasterizationOrderAttachmentStencilAccessEXT" />
  </enum>
  <enum name="PipelineDynamicStateCreateFlagBits" />
  <enum name="PipelineInputAssemblyStateCreateFlagBits" />
  <enum name="PipelineLayoutCreateFlagBits">
    <member name="eIndependentSetsEXT" />
  </enum>
  <enum name="PipelineMultisampleStateCreateFlagBits" />
  <enum name="PipelineRasterizationStateCreateFlagBits" />
  <enum name="PipelineShaderStageCreateFlagBits">
    <member name="eAllowVaryingSubgroupSize" />
    <member name="eRequireFullSubgroups" />
    <member name="eAllowVaryingSubgroupSizeEXT" />
    <member name="eRequireFullSubgroupsEXT" />
  </enum>
  <enum name="PipelineStageFlagBits">
    <member name="eTopOfPipe" />
    <member name="eDrawIndirect" />
    <member name="eVertexInput" />
    <member name="eVertexShader" />
    <member name="eTessellationControlShader" />
    <member name="eTessellationEvaluationShader" />
    <member name="eGeometryShader" />
    <member name="eFragmentShader" />
    <member name="eEarlyFragmentTests" />
    <member name="eLateFragmentTests" />
    <member name="eColorAttachmentOutput" />
    <member name="eComputeShader" />
    <member name="eTransfer" />
    <member name="eBottomOfPipe" />
    <member name="eHost" />
    <member name="eAllGraphics" />
    <member name="eAllCommands" />
    <member name="eNone" />
    <member name="eTransformFeedbackEXT" />
    <member name="eConditionalRenderingEXT" />
    <member name="eAccelerationStructureBuildKHR" />
    <member name="eRayTracingShaderKHR" />
    <member name="eShadingRateImageNV" />
    <member name="eRayTracingShaderNV" />
    <member name="eAccelerationStructureBuildNV" />
    <member name="eTaskShaderNV" />
    <member name="eMeshShaderNV" />
    <member name="eFragmentDensityProcessEXT" />
    <member name="eFragmentShadingRateAttachmentKHR" />
    <member name="eCommandPreprocessNV" />
    <member name="eNoneKHR" />
    <member name="eTaskShaderEXT" />
    <member name="eMeshShaderEXT" />
  </enum>
  <enum name="PipelineTessellationStateCreateFlagBits" />
  <enum name="PipelineVertexInputStateCreateFlagBits" />
  <enum name="PipelineViewportStateCreateFlagBits" />
  <enum name="PolygonMode">
    <member name="eFill" />
    <member name="eLine" />
    <member name="ePoint" />
    <member name="eFillRectangleNV" />
  </enum>
  <enum name="PrimitiveTopology">
    <member name="ePointList" />
    <member name="eLineList" />
    <member name="eLineStrip" />
    <member name="eTriangleList" />
    <member name="eTriangleStrip" />
    <member name="eTriangleFan" />
    <member name="eLineListWithAdjacency" />
    <member name="eLineStripWithAdjacency" />
    <member name="eTriangleListWithAdjacency" />
    <member name="eTriangleStripWithAdjacency" />
    <member name="ePatchList" />
  </enum>
  <enum name="QueryControlFlagBits">
    <member name="ePrecise" />
  </enum>
  <enum name="QueryPipelineStatisticFlagBits">
    <member name="eInputAssemblyVertices" />
    <member name="eInputAssemblyPrimitives" />
    <member name="eVertexShaderInvocations" />
    <member name="eGeometryShaderInvocations" />
    <member name="eGeometryShaderPrimitives" />
    <member name="eClippingInvocations" />
    <member name="eClippingPrimitives" />
    <member name="eFragmentShaderInvocations" />
    <member name="eTessellationControlShaderPatches" />
    <member name="eTessellationEvaluationShaderInvocations" />
    <member name="eComputeShaderInvocations" />
    <member name="eTaskShaderInvocationsEXT" />
    <member name="eMeshShaderInvocationsEXT" />
    <member name="eClusterCullingShaderInvocationsHUAWEI" />
  </enum>
  <enum name="QueryPoolCreateFlagBits" />
  <enum name="QueryResultFlagBits">
    <member name="e64" />
    <member name="eWait" />
    <member name="eWithAvailability" />
    <member name="ePartial" />
    <member name="eWithStatusKHR" />
  </enum>
  <enum name="QueryType">
    <member name="eOcclusion" />
    <member name="ePipelineStatistics" />
    <member name="eTimestamp" />
    <member name="eResultStatusOnlyKHR" />
    <member name="eTransformFeedbackStreamEXT" />
    <member name="ePerformanceQueryKHR" />
    <member name="eAccelerationStructureCompactedSizeKHR" />
    <member name="eAccelerationStructureSerializationSizeKHR" />
    <member name="eAccelerationStructureCompactedSizeNV" />
    <member name="ePerformanceQueryINTEL" />
    <member name="eVideoEncodeFeedbackKHR" />
    <member name="eMeshPrimitivesGeneratedEXT" />
    <member name="ePrimitivesGeneratedEXT" />
    <member name="eAccelerationStructureSerializationBottomLevelPointersKHR" />
    <member name="eAccelerationStructureSizeKHR" />
    <member name="eMicromapSerializationSizeEXT" />
    <member name="eMicromapCompactedSizeEXT" />
  </enum>
  <enum name="QueueFlagBits">
    <member name="eGraphics" />
    <member name="eCompute" />
    <member name="eTransfer" />
    <member name="eSparseBinding" />
    <member name="eProtected" />
    <member name="eVideoDecodeKHR" />
    <member name="eVideoEncodeKHR" />
    <member name="eOpticalFlowNV" />
  </enum>
  <enum name="RenderPassCreateFlagBits">
    <member name="eTransformQCOM" />
  </enum>
  <enum name="Result">
    <member name="eSuccess" />
    <member name="eNotReady" />
    <member name="eTimeout" />
    <member name="eEventSet" />
    <member name="eEventReset" />
    <member name="eIncomplete" />
    <member name="eErrorOutOfHostMemory" />
    <member name="eErrorOutOfDeviceMemory" />
    <member name="eErrorInitializationFailed" />
    <member name="eErrorDeviceLost" />
    <member name="eErrorMemoryMapFailed" />
    <member name="eErrorLayerNotPresent" />
    <member name="eErrorExtensionNotPresent" />
    <member name="eErrorFeatureNotPresent" />
    <member name="eErrorIncompatibleDriver" />
    <member name="eErrorTooManyObjects" />
    <member name="eErrorFormatNotSupported" />
    <member name="eErrorFragmentedPool" />
    <member name="eErrorUnknown" />
    <member name="eErrorOutOfPoolMemory" />
    <member name="eErrorInvalidExternalHandle" />
    <member name="eErrorFragmentation" />
    <member name="eErrorInvalidOpaqueCaptureAddress" />
    <member name="ePipelineCompileRequired" />
    <member name="eErrorSurfaceLostKHR" />
    <member name="eErrorNativeWindowInUseKHR" />
    <member name="eSuboptimalKHR" />
    <member name="eErrorOutOfDateKHR" />
    <member name="eErrorIncompatibleDisplayKHR" />
    <member name="eErrorValidationFailedEXT" />
    <member name="eErrorInvalidShaderNV" />
    <member name="eErrorImageUsageNotSupportedKHR" />
    <member name="eErrorVideoPictureLayoutNotSupportedKHR" />
    <member name="eErrorVideoProfileOperationNotSupportedKHR" />
    <member name="eErrorVideoProfileFormatNotSupportedKHR" />
    <member name="eErrorVideoProfileCodecNotSupportedKHR" />
    <member name="eErrorVideoStdVersionNotSupportedKHR" />
    <member name="eErrorOutOfPoolMemoryKHR" />
    <member name="eErrorInvalidExternalHandleKHR" />
    <member name="eErrorInvalidDrmFormatModifierPlaneLayoutEXT" />
    <member name="eErrorFragmentationEXT" />
    <member name="eErrorNotPermittedEXT" />
    <member name="eErrorNotPermittedKHR" />
    <member name="eErrorInvalidDeviceAddressEXT" />
    <member name="eErrorInvalidOpaqueCaptureAddressKHR" />
    <member name="eThreadIdleKHR" />
    <member name="eThreadDoneKHR" />
    <member name="eOperationDeferredKHR" />
    <member name="eOperationNotDeferredKHR" />
    <member name="ePipelineCompileRequiredEXT" />
    <member name="eErrorPipelineCompileRequiredEXT" />
    <member name="eErrorInvalidVideoStdParametersKHR" />
    <member name="eErrorCompressionExhaustedEXT" />
    <member name="eErrorIncompatibleShaderBinaryEXT" />
  </enum>
  <enum name="SampleCountFlagBits">
    <member name="e1" />
    <member name="e2" />
    <member name="e4" />
    <member name="e8" />
    <member name="e16" />
    <member name="e32" />
    <member name="e64" />
  </enum>
  <enum name="SamplerAddressMode">
    <member name="eRepeat" />
    <member name="eMirroredRepeat" />
    <member name="eClampToEdge" />
    <member name="eClampToBorder" />
    <member name="eMirrorClampToEdge" />
    <member name="eMirrorClampToEdgeKHR" />
  </enum>
  <enum name="SamplerCreateFlagBits">
    <member name="eSubsampledEXT" />
    <member name="eSubsampledCoarseReconstructionEXT" />
    <member name="eDescriptorBufferCaptureReplayEXT" />
    <member name="eNonSeamlessCubeMapEXT" />
    <member name="eImageProcessingQCOM" />
  </enum>
  <enum name="SamplerMipmapMode">
    <member name="eNearest" />
    <member name="eLinear" />
  </enum>
  <enum name="SemaphoreCreateFlagBits" />
  <enum name="ShaderModuleCreateFlagBits" />
  <enum name="ShaderStageFlagBits">
    <member name="eVertex" />
    <member name="eTessellationControl" />
    <member name="eTessellationEvaluation" />
    <member name="eGeometry" />
    <member name="eFragment" />
    <member name="eCompute" />
    <member name="eAllGraphics" />
    <member name="eAll" />
    <member name="eRaygenKHR" />
    <member name="eAnyHitKHR" />
    <member name="eClosestHitKHR" />
    <member name="eMissKHR" />
    <member name="eIntersectionKHR" />
    <member name="eCallableKHR" />
    <member name="eRaygenNV" />
    <member name="eAnyHitNV" />
    <member name="eClosestHitNV" />
    <member name="eMissNV" />
    <member name="eIntersectionNV" />
    <member name="eCallableNV" />
    <member name="eTaskNV" />
    <member name="eMeshNV" />
    <member name="eTaskEXT" />
    <member name="eMeshEXT" />
    <member name="eSubpassShadingHUAWEI" />
    <member name="eClusterCullingHUAWEI" />
  </enum>
  <enum name="SharingMode">
    <member name="eExclusive" />
    <member name="eConcurrent" />
  </enum>
  <enum name="SparseImageFormatFlagBits">
    <member name="eSingleMiptail" />
    <member name="eAlignedMipSize" />
    <member name="eNonstandardBlockSize" />
  </enum>
  <enum name="SparseMemoryBindFlagBits">
    <member name="eMetadata" />
  </enum>
  <enum name="StencilFaceFlagBits">
    <member name="eFront" />
    <member name="eBack" />
    <member name="eFrontAndBack" />
    <member name="eVkStencilFrontAndBack" />
  </enum>
  <enum name="StencilOp">
    <member name="eKeep" />
    <member name="eZero" />
    <member name="eReplace" />
    <member name="eIncrementAndClamp" />
    <member name="eDecrementAndClamp" />
    <member name="eInvert" />
    <member name="eIncrementAndWrap" />
    <member name="eDecrementAndWrap" />
  </enum>
  <enum name="StructureType">
    <member name="eApplicationInfo" />
    <member name="eInstanceCreateInfo" />
    <member name="eDeviceQueueCreateInfo" />
    <member name="eDeviceCreateInfo" />
    <member name="eSubmitInfo" />
    <member name="eMemoryAllocateInfo" />
    <member name="eMappedMemoryRange" />
    <member name="eBindSparseInfo" />
    <member name="eFenceCreateInfo" />
    <member name="eSemaphoreCreateInfo" />
    <member name="eEventCreateInfo" />
    <member name="eQueryPoolCreateInfo" />
    <member name="eBufferCreateInfo" />
    <member name="eBufferViewCreateInfo" />
    <member name="eImageCreateInfo" />
    <member name="eImageViewCreateInfo" />
    <member name="eShaderModuleCreateInfo" />
    <member name="ePipelineCacheCreateInfo" />
    <member name="ePipelineShaderStageCreateInfo" />
    <member name="ePipelineVertexInputStateCreateInfo" />
    <member name="ePipelineInputAssemblyStateCreateInfo" />
    <member name="ePipelineTessellationStateCreateInfo" />
    <member name="ePipelineViewportStateCreateInfo" />
    <member name="ePipelineRasterizationStateCreateInfo" />
    <member name="ePipelineMultisampleStateCreateInfo" />
    <member name="ePipelineDepthStencilStateCreateInfo" />
    <member name="ePipelineColorBlendStateCreateInfo" />
    <member name="ePipelineDynamicStateCreateInfo" />
    <member name="eGraphicsPipelineCreateInfo" />
    <member name="eComputePipelineCreateInfo" />
    <member name="ePipelineLayoutCreateInfo" />
    <member name="eSamplerCreateInfo" />
    <member name="eDescriptorSetLayoutCreateInfo" />
    <member name="eDescriptorPoolCreateInfo" />
    <member name="eDescriptorSetAllocateInfo" />
    <member name="eWriteDescriptorSet" />
    <member name="eCopyDescriptorSet" />
    <member name="eFramebufferCreateInfo" />
    <member name="eRenderPassCreateInfo" />
    <member name="eCommandPoolCreateInfo" />
    <member name="eCommandBufferAllocateInfo" />
    <member name="eCommandBufferInheritanceInfo" />
    <member name="eCommandBufferBeginInfo" />
    <member name="eRenderPassBeginInfo" />
    <member name="eBufferMemoryBarrier" />
    <member name="eImageMemoryBarrier" />
    <member name="eMemoryBarrier" />
    <member name="eLoaderInstanceCreateInfo" />
    <member name="eLoaderDeviceCreateInfo" />
    <member name="ePhysicalDeviceSubgroupProperties" />
    <member name="eBindBufferMemoryInfo" />
    <member name="eBindImageMemoryInfo" />
    <member name="ePhysicalDevice16BitStorageFeatures" />
    <member name="eMemoryDedicatedRequirements" />
    <member name="eMemoryDedicatedAllocateInfo" />
    <member name="eMemoryAllocateFlagsInfo" />
    <member name="eDeviceGroupRenderPassBeginInfo" />
    <member name="eDeviceGroupCommandBufferBeginInfo" />
    <member name="eDeviceGroupSubmitInfo" />
    <member name="eDeviceGroupBindSparseInfo" />
    <member name="eBindBufferMemoryDeviceGroupInfo" />
    <member name="eBindImageMemoryDeviceGroupInfo" />
    <member name="ePhysicalDeviceGroupProperties" />
    <member name="eDeviceGroupDeviceCreateInfo" />
    <member name="eBufferMemoryRequirementsInfo2" />
    <member name="eImageMemoryRequirementsInfo2" />
    <member name="eImageSparseMemoryRequirementsInfo2" />
    <member name="eMemoryRequirements2" />
    <member name="eSparseImageMemoryRequirements2" />
    <member name="ePhysicalDeviceFeatures2" />
    <member name="ePhysicalDeviceProperties2" />
    <member name="eFormatProperties2" />
    <member name="eImageFormatProperties2" />
    <member name="ePhysicalDeviceImageFormatInfo2" />
    <member name="eQueueFamilyProperties2" />
    <member name="ePhysicalDeviceMemoryProperties2" />
    <member name="eSparseImageFormatProperties2" />
    <member name="ePhysicalDeviceSparseImageFormatInfo2" />
    <member name="ePhysicalDevicePointClippingProperties" />
    <member name="eRenderPassInputAttachmentAspectCreateInfo" />
    <member name="eImageViewUsageCreateInfo" />
    <member name="ePipelineTessellationDomainOriginStateCreateInfo" />
    <member name="eRenderPassMultiviewCreateInfo" />
    <member name="ePhysicalDeviceMultiviewFeatures" />
    <member name="ePhysicalDeviceMultiviewProperties" />
    <member name="ePhysicalDeviceVariablePointersFeatures" />
    <member name="ePhysicalDeviceVariablePointerFeatures" />
    <member name="eProtectedSubmitInfo" />
    <member name="ePhysicalDeviceProtectedMemoryFeatures" />
    <member name="ePhysicalDeviceProtectedMemoryProperties" />
    <member name="eDeviceQueueInfo2" />
    <member name="eSamplerYcbcrConversionCreateInfo" />
    <member name="eSamplerYcbcrConversionInfo" />
    <member name="eBindImagePlaneMemoryInfo" />
    <member name="eImagePlaneMemoryRequirementsInfo" />
    <member name="ePhysicalDeviceSamplerYcbcrConversionFeatures" />
    <member name="eSamplerYcbcrConversionImageFormatProperties" />
    <member name="eDescriptorUpdateTemplateCreateInfo" />
    <member name="ePhysicalDeviceExternalImageFormatInfo" />
    <member name="eExternalImageFormatProperties" />
    <member name="ePhysicalDeviceExternalBufferInfo" />
    <member name="eExternalBufferProperties" />
    <member name="ePhysicalDeviceIdProperties" />
    <member name="eExternalMemoryBufferCreateInfo" />
    <member name="eExternalMemoryImageCreateInfo" />
    <member name="eExportMemoryAllocateInfo" />
    <member name="ePhysicalDeviceExternalFenceInfo" />
    <member name="eExternalFenceProperties" />
    <member name="eExportFenceCreateInfo" />
    <member name="eExportSemaphoreCreateInfo" />
    <member name="ePhysicalDeviceExternalSemaphoreInfo" />
    <member name="eExternalSemaphoreProperties" />
    <member name="ePhysicalDeviceMaintenance3Properties" />
    <member name="eDescriptorSetLayoutSupport" />
    <member name="ePhysicalDeviceShaderDrawParametersFeatures" />
    <member name="ePhysicalDeviceShaderDrawParameterFeatures" />
    <member name="ePhysicalDeviceVulkan11Features" />
    <member name="ePhysicalDeviceVulkan11Properties" />
    <member name="ePhysicalDeviceVulkan12Features" />
    <member name="ePhysicalDeviceVulkan12Properties" />
    <member name="eImageFormatListCreateInfo" />
    <member name="eAttachmentDescription2" />
    <member name="eAttachmentReference2" />
    <member name="eSubpassDescription2" />
    <member name="eSubpassDependency2" />
    <member name="eRenderPassCreateInfo2" />
    <member name="eSubpassBeginInfo" />
    <member name="eSubpassEndInfo" />
    <member name="ePhysicalDevice8BitStorageFeatures" />
    <member name="ePhysicalDeviceDriverProperties" />
    <member name="ePhysicalDeviceShaderAtomicInt64Features" />
    <member name="ePhysicalDeviceShaderFloat16Int8Features" />
    <member name="ePhysicalDeviceFloatControlsProperties" />
    <member name="eDescriptorSetLayoutBindingFlagsCreateInfo" />
    <member name="ePhysicalDeviceDescriptorIndexingFeatures" />
    <member name="ePhysicalDeviceDescriptorIndexingProperties" />
    <member name="eDescriptorSetVariableDescriptorCountAllocateInfo" />
    <member name="eDescriptorSetVariableDescriptorCountLayoutSupport" />
    <member name="ePhysicalDeviceDepthStencilResolveProperties" />
    <member name="eSubpassDescriptionDepthStencilResolve" />
    <member name="ePhysicalDeviceScalarBlockLayoutFeatures" />
    <member name="eImageStencilUsageCreateInfo" />
    <member name="ePhysicalDeviceSamplerFilterMinmaxProperties" />
    <member name="eSamplerReductionModeCreateInfo" />
    <member name="ePhysicalDeviceVulkanMemoryModelFeatures" />
    <member name="ePhysicalDeviceImagelessFramebufferFeatures" />
    <member name="eFramebufferAttachmentsCreateInfo" />
    <member name="eFramebufferAttachmentImageInfo" />
    <member name="eRenderPassAttachmentBeginInfo" />
    <member name="ePhysicalDeviceUniformBufferStandardLayoutFeatures" />
    <member name="ePhysicalDeviceShaderSubgroupExtendedTypesFeatures" />
    <member name="ePhysicalDeviceSeparateDepthStencilLayoutsFeatures" />
    <member name="eAttachmentReferenceStencilLayout" />
    <member name="eAttachmentDescriptionStencilLayout" />
    <member name="ePhysicalDeviceHostQueryResetFeatures" />
    <member name="ePhysicalDeviceTimelineSemaphoreFeatures" />
    <member name="ePhysicalDeviceTimelineSemaphoreProperties" />
    <member name="eSemaphoreTypeCreateInfo" />
    <member name="eTimelineSemaphoreSubmitInfo" />
    <member name="eSemaphoreWaitInfo" />
    <member name="eSemaphoreSignalInfo" />
    <member name="ePhysicalDeviceBufferDeviceAddressFeatures" />
    <member name="eBufferDeviceAddressInfo" />
    <member name="eBufferOpaqueCaptureAddressCreateInfo" />
    <member name="eMemoryOpaqueCaptureAddressAllocateInfo" />
    <member name="eDeviceMemoryOpaqueCaptureAddressInfo" />
    <member name="ePhysicalDeviceVulkan13Features" />
    <member name="ePhysicalDeviceVulkan13Properties" />
    <member name="ePipelineCreationFeedbackCreateInfo" />
    <member name="ePhysicalDeviceShaderTerminateInvocationFeatures" />
    <member name="ePhysicalDeviceToolProperties" />
    <member name="ePhysicalDeviceShaderDemoteToHelperInvocationFeatures" />
    <member name="ePhysicalDevicePrivateDataFeatures" />
    <member name="eDevicePrivateDataCreateInfo" />
    <member name="ePrivateDataSlotCreateInfo" />
    <member name="ePhysicalDevicePipelineCreationCacheControlFeatures" />
    <member name="eMemoryBarrier2" />
    <member name="eBufferMemoryBarrier2" />
    <member name="eImageMemoryBarrier2" />
    <member name="eDependencyInfo" />
    <member name="eSubmitInfo2" />
    <member name="eSemaphoreSubmitInfo" />
    <member name="eCommandBufferSubmitInfo" />
    <member name="ePhysicalDeviceSynchronization2Features" />
    <member name="ePhysicalDeviceZeroInitializeWorkgroupMemoryFeatures" />
    <member name="ePhysicalDeviceImageRobustnessFeatures" />
    <member name="eCopyBufferInfo2" />
    <member name="eCopyImageInfo2" />
    <member name="eCopyBufferToImageInfo2" />
    <member name="eCopyImageToBufferInfo2" />
    <member name="eBlitImageInfo2" />
    <member name="eResolveImageInfo2" />
    <member name="eBufferCopy2" />
    <member name="eImageCopy2" />
    <member name="eImageBlit2" />
    <member name="eBufferImageCopy2" />
    <member name="eImageResolve2" />
    <member name="ePhysicalDeviceSubgroupSizeControlProperties" />
    <member name="ePipelineShaderStageRequiredSubgroupSizeCreateInfo" />
    <member name="ePhysicalDeviceSubgroupSizeControlFeatures" />
    <member name="ePhysicalDeviceInlineUniformBlockFeatures" />
    <member name="ePhysicalDeviceInlineUniformBlockProperties" />
    <member name="eWriteDescriptorSetInlineUniformBlock" />
    <member name="eDescriptorPoolInlineUniformBlockCreateInfo" />
    <member name="ePhysicalDeviceTextureCompressionAstcHdrFeatures" />
    <member name="eRenderingInfo" />
    <member name="eRenderingAttachmentInfo" />
    <member name="ePipelineRenderingCreateInfo" />
    <member name="ePhysicalDeviceDynamicRenderingFeatures" />
    <member name="eCommandBufferInheritanceRenderingInfo" />
    <member name="ePhysicalDeviceShaderIntegerDotProductFeatures" />
    <member name="ePhysicalDeviceShaderIntegerDotProductProperties" />
    <member name="ePhysicalDeviceTexelBufferAlignmentProperties" />
    <member name="eFormatProperties3" />
    <member name="ePhysicalDeviceMaintenance4Features" />
    <member name="ePhysicalDeviceMaintenance4Properties" />
    <member name="eDeviceBufferMemoryRequirements" />
    <member name="eDeviceImageMemoryRequirements" />
    <member name="eSwapchainCreateInfoKHR" />
    <member name="ePresentInfoKHR" />
    <member name="eDeviceGroupPresentCapabilitiesKHR" />
    <member name="eImageSwapchainCreateInfoKHR" />
    <member name="eBindImageMemorySwapchainInfoKHR" />
    <member name="eAcquireNextImageInfoKHR" />
    <member name="eDeviceGroupPresentInfoKHR" />
    <member name="eDeviceGroupSwapchainCreateInfoKHR" />
    <member name="eDisplayModeCreateInfoKHR" />
    <member name="eDisplaySurfaceCreateInfoKHR" />
    <member name="eDisplayPresentInfoKHR" />
    <member name="eDebugReportCallbackCreateInfoEXT" />
    <member name="eDebugReportCreateInfoEXT" />
    <member name="ePipelineRasterizationStateRasterizationOrderAMD" />
    <member name="eDebugMarkerObjectNameInfoEXT" />
    <member name="eDebugMarkerObjectTagInfoEXT" />
    <member name="eDebugMarkerMarkerInfoEXT" />
    <member name="eVideoProfileInfoKHR" />
    <member name="eVideoCapabilitiesKHR" />
    <member name="eVideoPictureResourceInfoKHR" />
    <member name="eVideoSessionMemoryRequirementsKHR" />
    <member name="eBindVideoSessionMemoryInfoKHR" />
    <member name="eVideoSessionCreateInfoKHR" />
    <member name="eVideoSessionParametersCreateInfoKHR" />
    <member name="eVideoSessionParametersUpdateInfoKHR" />
    <member name="eVideoBeginCodingInfoKHR" />
    <member name="eVideoEndCodingInfoKHR" />
    <member name="eVideoCodingControlInfoKHR" />
    <member name="eVideoReferenceSlotInfoKHR" />
    <member name="eQueueFamilyVideoPropertiesKHR" />
    <member name="eVideoProfileListInfoKHR" />
    <member name="ePhysicalDeviceVideoFormatInfoKHR" />
    <member name="eVideoFormatPropertiesKHR" />
    <member name="eQueueFamilyQueryResultStatusPropertiesKHR" />
    <member name="eVideoDecodeInfoKHR" />
    <member name="eVideoDecodeCapabilitiesKHR" />
    <member name="eVideoDecodeUsageInfoKHR" />
    <member name="eDedicatedAllocationImageCreateInfoNV" />
    <member name="eDedicatedAllocationBufferCreateInfoNV" />
    <member name="eDedicatedAllocationMemoryAllocateInfoNV" />
    <member name="ePhysicalDeviceTransformFeedbackFeaturesEXT" />
    <member name="ePhysicalDeviceTransformFeedbackPropertiesEXT" />
    <member name="ePipelineRasterizationStateStreamCreateInfoEXT" />
    <member name="eCuModuleCreateInfoNVX" />
    <member name="eCuFunctionCreateInfoNVX" />
    <member name="eCuLaunchInfoNVX" />
    <member name="eImageViewHandleInfoNVX" />
    <member name="eImageViewAddressPropertiesNVX" />
    <member name="eVideoEncodeH264CapabilitiesKHR" />
    <member name="eVideoEncodeH264SessionParametersCreateInfoKHR" />
    <member name="eVideoEncodeH264SessionParametersAddInfoKHR" />
    <member name="eVideoEncodeH264PictureInfoKHR" />
    <member name="eVideoEncodeH264DpbSlotInfoKHR" />
    <member name="eVideoEncodeH264NaluSliceInfoKHR" />
    <member name="eVideoEncodeH264GopRemainingFrameInfoKHR" />
    <member name="eVideoEncodeH264ProfileInfoKHR" />
    <member name="eVideoEncodeH264RateControlInfoKHR" />
    <member name="eVideoEncodeH264RateControlLayerInfoKHR" />
    <member name="eVideoEncodeH264SessionCreateInfoKHR" />
    <member name="eVideoEncodeH264QualityLevelPropertiesKHR" />
    <member name="eVideoEncodeH264SessionParametersGetInfoKHR" />
    <member name="eVideoEncodeH264SessionParametersFeedbackInfoKHR" />
    <member name="eVideoEncodeH265CapabilitiesKHR" />
    <member name="eVideoEncodeH265SessionParametersCreateInfoKHR" />
    <member name="eVideoEncodeH265SessionParametersAddInfoKHR" />
    <member name="eVideoEncodeH265PictureInfoKHR" />
    <member name="eVideoEncodeH265DpbSlotInfoKHR" />
    <member name="eVideoEncodeH265NaluSliceSegmentInfoKHR" />
    <member name="eVideoEncodeH265GopRemainingFrameInfoKHR" />
    <member name="eVideoEncodeH265ProfileInfoKHR" />
    <member name="eVideoEncodeH265RateControlInfoKHR" />
    <member name="eVideoEncodeH265RateControlLayerInfoKHR" />
    <member name="eVideoEncodeH265SessionCreateInfoKHR" />
    <member name="eVideoEncodeH265QualityLevelPropertiesKHR" />
    <member name="eVideoEncodeH265SessionParametersGetInfoKHR" />
    <member name="eVideoEncodeH265SessionParametersFeedbackInfoKHR" />
    <member name="eVideoDecodeH264CapabilitiesKHR" />
    <member name="eVideoDecodeH264PictureInfoKHR" />
    <member name="eVideoDecodeH264ProfileInfoKHR" />
    <member name="eVideoDecodeH264SessionParametersCreateInfoKHR" />
    <member name="eVideoDecodeH264SessionParametersAddInfoKHR" />
    <member name="eVideoDecodeH264DpbSlotInfoKHR" />
    <member name="eTextureLodGatherFormatPropertiesAMD" />
    <member name="eRenderingInfoKHR" />
    <member name="eRenderingAttachmentInfoKHR" />
    <member name="ePipelineRenderingCreateInfoKHR" />
    <member name="ePhysicalDeviceDynamicRenderingFeaturesKHR" />
    <member name="eCommandBufferInheritanceRenderingInfoKHR" />
    <member name="eRenderingFragmentShadingRateAttachmentInfoKHR" />
    <member name="eRenderingFragmentDensityMapAttachmentInfoEXT" />
    <member name="eAttachmentSampleCountInfoAMD" />
    <member name="eAttachmentSampleCountInfoNV" />
    <member name="eMultiviewPerViewAttributesInfoNVX" />
    <member name="ePhysicalDeviceCornerSampledImageFeaturesNV" />
    <member name="eRenderPassMultiviewCreateInfoKHR" />
    <member name="ePhysicalDeviceMultiviewFeaturesKHR" />
    <member name="ePhysicalDeviceMultiviewPropertiesKHR" />
    <member name="eExternalMemoryImageCreateInfoNV" />
    <member name="eExportMemoryAllocateInfoNV" />
    <member name="ePhysicalDeviceFeatures2KHR" />
    <member name="ePhysicalDeviceProperties2KHR" />
    <member name="eFormatProperties2KHR" />
    <member name="eImageFormatProperties2KHR" />
    <member name="ePhysicalDeviceImageFormatInfo2KHR" />
    <member name="eQueueFamilyProperties2KHR" />
    <member name="ePhysicalDeviceMemoryProperties2KHR" />
    <member name="eSparseImageFormatProperties2KHR" />
    <member name="ePhysicalDeviceSparseImageFormatInfo2KHR" />
    <member name="eMemoryAllocateFlagsInfoKHR" />
    <member name="eDeviceGroupRenderPassBeginInfoKHR" />
    <member name="eDeviceGroupCommandBufferBeginInfoKHR" />
    <member name="eDeviceGroupSubmitInfoKHR" />
    <member name="eDeviceGroupBindSparseInfoKHR" />
    <member name="eBindBufferMemoryDeviceGroupInfoKHR" />
    <member name="eBindImageMemoryDeviceGroupInfoKHR" />
    <member name="eValidationFlagsEXT" />
    <member name="ePhysicalDeviceTextureCompressionAstcHdrFeaturesEXT" />
    <member name="eImageViewAstcDecodeModeEXT" />
    <member name="ePhysicalDeviceAstcDecodeFeaturesEXT" />
    <member name="ePipelineRobustnessCreateInfoEXT" />
    <member name="ePhysicalDevicePipelineRobustnessFeaturesEXT" />
    <member name="ePhysicalDevicePipelineRobustnessPropertiesEXT" />
    <member name="ePhysicalDeviceGroupPropertiesKHR" />
    <member name="eDeviceGroupDeviceCreateInfoKHR" />
    <member name="ePhysicalDeviceExternalImageFormatInfoKHR" />
    <member name="eExternalImageFormatPropertiesKHR" />
    <member name="ePhysicalDeviceExternalBufferInfoKHR" />
    <member name="eExternalBufferPropertiesKHR" />
    <member name="ePhysicalDeviceIdPropertiesKHR" />
    <member name="eExternalMemoryBufferCreateInfoKHR" />
    <member name="eExternalMemoryImageCreateInfoKHR" />
    <member name="eExportMemoryAllocateInfoKHR" />
    <member name="eImportMemoryFdInfoKHR" />
    <member name="eMemoryFdPropertiesKHR" />
    <member name="eMemoryGetFdInfoKHR" />
    <member name="ePhysicalDeviceExternalSemaphoreInfoKHR" />
    <member name="eExternalSemaphorePropertiesKHR" />
    <member name="eExportSemaphoreCreateInfoKHR" />
    <member name="eImportSemaphoreFdInfoKHR" />
    <member name="eSemaphoreGetFdInfoKHR" />
    <member name="ePhysicalDevicePushDescriptorPropertiesKHR" />
    <member name="eCommandBufferInheritanceConditionalRenderingInfoEXT" />
    <member name="ePhysicalDeviceConditionalRenderingFeaturesEXT" />
    <member name="eConditionalRenderingBeginInfoEXT" />
    <member name="ePhysicalDeviceShaderFloat16Int8FeaturesKHR" />
    <member name="ePhysicalDeviceFloat16Int8FeaturesKHR" />
    <member name="ePhysicalDevice16BitStorageFeaturesKHR" />
    <member name="ePresentRegionsKHR" />
    <member name="eDescriptorUpdateTemplateCreateInfoKHR" />
    <member name="ePipelineViewportWScalingStateCreateInfoNV" />
    <member name="eSurfaceCapabilities2EXT" />
    <member name="eDisplayPowerInfoEXT" />
    <member name="eDeviceEventInfoEXT" />
    <member name="eDisplayEventInfoEXT" />
    <member name="eSwapchainCounterCreateInfoEXT" />
    <member name="ePresentTimesInfoGOOGLE" />
    <member name="ePhysicalDeviceMultiviewPerViewAttributesPropertiesNVX" />
    <member name="ePipelineViewportSwizzleStateCreateInfoNV" />
    <member name="ePhysicalDeviceDiscardRectanglePropertiesEXT" />
    <member name="ePipelineDiscardRectangleStateCreateInfoEXT" />
    <member name="ePhysicalDeviceConservativeRasterizationPropertiesEXT" />
    <member name="ePipelineRasterizationConservativeStateCreateInfoEXT" />
    <member name="ePhysicalDeviceDepthClipEnableFeaturesEXT" />
    <member name="ePipelineRasterizationDepthClipStateCreateInfoEXT" />
    <member name="eHdrMetadataEXT" />
    <member name="ePhysicalDeviceImagelessFramebufferFeaturesKHR" />
    <member name="eFramebufferAttachmentsCreateInfoKHR" />
    <member name="eFramebufferAttachmentImageInfoKHR" />
    <member name="eRenderPassAttachmentBeginInfoKHR" />
    <member name="eAttachmentDescription2KHR" />
    <member name="eAttachmentReference2KHR" />
    <member name="eSubpassDescription2KHR" />
    <member name="eSubpassDependency2KHR" />
    <member name="eRenderPassCreateInfo2KHR" />
    <member name="eSubpassBeginInfoKHR" />
    <member name="eSubpassEndInfoKHR" />
    <member name="ePhysicalDeviceRelaxedLineRasterizationFeaturesIMG" />
    <member name="eSharedPresentSurfaceCapabilitiesKHR" />
    <member name="ePhysicalDeviceExternalFenceInfoKHR" />
    <member name="eExternalFencePropertiesKHR" />
    <member name="eExportFenceCreateInfoKHR" />
    <member name="eImportFenceFdInfoKHR" />
    <member name="eFenceGetFdInfoKHR" />
    <member name="ePhysicalDevicePerformanceQueryFeaturesKHR" />
    <member name="ePhysicalDevicePerformanceQueryPropertiesKHR" />
    <member name="eQueryPoolPerformanceCreateInfoKHR" />
    <member name="ePerformanceQuerySubmitInfoKHR" />
    <member name="eAcquireProfilingLockInfoKHR" />
    <member name="ePerformanceCounterKHR" />
    <member name="ePerformanceCounterDescriptionKHR" />
    <member name="ePhysicalDevicePointClippingPropertiesKHR" />
    <member name="eRenderPassInputAttachmentAspectCreateInfoKHR" />
    <member name="eImageViewUsageCreateInfoKHR" />
    <member name="ePipelineTessellationDomainOriginStateCreateInfoKHR" />
    <member name="ePhysicalDeviceSurfaceInfo2KHR" />
    <member name="eSurfaceCapabilities2KHR" />
    <member name="eSurfaceFormat2KHR" />
    <member name="ePhysicalDeviceVariablePointersFeaturesKHR" />
    <member name="ePhysicalDeviceVariablePointerFeaturesKHR" />
    <member name="eDisplayProperties2KHR" />
    <member name="eDisplayPlaneProperties2KHR" />
    <member name="eDisplayModeProperties2KHR" />
    <member name="eDisplayPlaneInfo2KHR" />
    <member name="eDisplayPlaneCapabilities2KHR" />
    <member name="eMemoryDedicatedRequirementsKHR" />
    <member name="eMemoryDedicatedAllocateInfoKHR" />
    <member name="eDebugUtilsObjectNameInfoEXT" />
    <member name="eDebugUtilsObjectTagInfoEXT" />
    <member name="eDebugUtilsLabelEXT" />
    <member name="eDebugUtilsMessengerCallbackDataEXT" />
    <member name="eDebugUtilsMessengerCreateInfoEXT" />
    <member name="ePhysicalDeviceSamplerFilterMinmaxPropertiesEXT" />
    <member name="eSamplerReductionModeCreateInfoEXT" />
    <member name="ePhysicalDeviceInlineUniformBlockFeaturesEXT" />
    <member name="ePhysicalDeviceInlineUniformBlockPropertiesEXT" />
    <member name="eWriteDescriptorSetInlineUniformBlockEXT" />
    <member name="eDescriptorPoolInlineUniformBlockCreateInfoEXT" />
    <member name="eSampleLocationsInfoEXT" />
    <member name="eRenderPassSampleLocationsBeginInfoEXT" />
    <member name="ePipelineSampleLocationsStateCreateInfoEXT" />
    <member name="ePhysicalDeviceSampleLocationsPropertiesEXT" />
    <member name="eMultisamplePropertiesEXT" />
    <member name="eBufferMemoryRequirementsInfo2KHR" />
    <member name="eImageMemoryRequirementsInfo2KHR" />
    <member name="eImageSparseMemoryRequirementsInfo2KHR" />
    <member name="eMemoryRequirements2KHR" />
    <member name="eSparseImageMemoryRequirements2KHR" />
    <member name="eImageFormatListCreateInfoKHR" />
    <member name="ePhysicalDeviceBlendOperationAdvancedFeaturesEXT" />
    <member name="ePhysicalDeviceBlendOperationAdvancedPropertiesEXT" />
    <member name="ePipelineColorBlendAdvancedStateCreateInfoEXT" />
    <member name="ePipelineCoverageToColorStateCreateInfoNV" />
    <member name="eWriteDescriptorSetAccelerationStructureKHR" />
    <member name="eAccelerationStructureBuildGeometryInfoKHR" />
    <member name="eAccelerationStructureDeviceAddressInfoKHR" />
    <member name="eAccelerationStructureGeometryAabbsDataKHR" />
    <member name="eAccelerationStructureGeometryInstancesDataKHR" />
    <member name="eAccelerationStructureGeometryTrianglesDataKHR" />
    <member name="eAccelerationStructureGeometryKHR" />
    <member name="eAccelerationStructureVersionInfoKHR" />
    <member name="eCopyAccelerationStructureInfoKHR" />
    <member name="eCopyAccelerationStructureToMemoryInfoKHR" />
    <member name="eCopyMemoryToAccelerationStructureInfoKHR" />
    <member name="ePhysicalDeviceAccelerationStructureFeaturesKHR" />
    <member name="ePhysicalDeviceAccelerationStructurePropertiesKHR" />
    <member name="eAccelerationStructureCreateInfoKHR" />
    <member name="eAccelerationStructureBuildSizesInfoKHR" />
    <member name="ePhysicalDeviceRayTracingPipelineFeaturesKHR" />
    <member name="ePhysicalDeviceRayTracingPipelinePropertiesKHR" />
    <member name="eRayTracingPipelineCreateInfoKHR" />
    <member name="eRayTracingShaderGroupCreateInfoKHR" />
    <member name="eRayTracingPipelineInterfaceCreateInfoKHR" />
    <member name="ePhysicalDeviceRayQueryFeaturesKHR" />
    <member name="ePipelineCoverageModulationStateCreateInfoNV" />
    <member name="ePhysicalDeviceShaderSmBuiltinsFeaturesNV" />
    <member name="ePhysicalDeviceShaderSmBuiltinsPropertiesNV" />
    <member name="eSamplerYcbcrConversionCreateInfoKHR" />
    <member name="eSamplerYcbcrConversionInfoKHR" />
    <member name="eBindImagePlaneMemoryInfoKHR" />
    <member name="eImagePlaneMemoryRequirementsInfoKHR" />
    <member name="ePhysicalDeviceSamplerYcbcrConversionFeaturesKHR" />
    <member name="eSamplerYcbcrConversionImageFormatPropertiesKHR" />
    <member name="eBindBufferMemoryInfoKHR" />
    <member name="eBindImageMemoryInfoKHR" />
    <member name="eDrmFormatModifierPropertiesListEXT" />
    <member name="ePhysicalDeviceImageDrmFormatModifierInfoEXT" />
    <member name="eImageDrmFormatModifierListCreateInfoEXT" />
    <member name="eImageDrmFormatModifierExplicitCreateInfoEXT" />
    <member name="eImageDrmFormatModifierPropertiesEXT" />
    <member name="eDrmFormatModifierPropertiesList2EXT" />
    <member name="eValidationCacheCreateInfoEXT" />
    <member name="eShaderModuleValidationCacheCreateInfoEXT" />
    <member name="eDescriptorSetLayoutBindingFlagsCreateInfoEXT" />
    <member name="ePhysicalDeviceDescriptorIndexingFeaturesEXT" />
    <member name="ePhysicalDeviceDescriptorIndexingPropertiesEXT" />
    <member name="eDescriptorSetVariableDescriptorCountAllocateInfoEXT" />
    <member name="eDescriptorSetVariableDescriptorCountLayoutSupportEXT" />
    <member name="ePipelineViewportShadingRateImageStateCreateInfoNV" />
    <member name="ePhysicalDeviceShadingRateImageFeaturesNV" />
    <member name="ePhysicalDeviceShadingRateImagePropertiesNV" />
    <member name="ePipelineViewportCoarseSampleOrderStateCreateInfoNV" />
    <member name="eRayTracingPipelineCreateInfoNV" />
    <member name="eAccelerationStructureCreateInfoNV" />
    <member name="eGeometryNV" />
    <member name="eGeometryTrianglesNV" />
    <member name="eGeometryAabbNV" />
    <member name="eBindAccelerationStructureMemoryInfoNV" />
    <member name="eWriteDescriptorSetAccelerationStructureNV" />
    <member name="eAccelerationStructureMemoryRequirementsInfoNV" />
    <member name="ePhysicalDeviceRayTracingPropertiesNV" />
    <member name="eRayTracingShaderGroupCreateInfoNV" />
    <member name="eAccelerationStructureInfoNV" />
    <member name="ePhysicalDeviceRepresentativeFragmentTestFeaturesNV" />
    <member name="ePipelineRepresentativeFragmentTestStateCreateInfoNV" />
    <member name="ePhysicalDeviceMaintenance3PropertiesKHR" />
    <member name="eDescriptorSetLayoutSupportKHR" />
    <member name="ePhysicalDeviceImageViewImageFormatInfoEXT" />
    <member name="eFilterCubicImageViewImageFormatPropertiesEXT" />
    <member name="eDeviceQueueGlobalPriorityCreateInfoEXT" />
    <member name="ePhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR" />
    <member name="ePhysicalDevice8BitStorageFeaturesKHR" />
    <member name="eImportMemoryHostPointerInfoEXT" />
    <member name="eMemoryHostPointerPropertiesEXT" />
    <member name="ePhysicalDeviceExternalMemoryHostPropertiesEXT" />
    <member name="ePhysicalDeviceShaderAtomicInt64FeaturesKHR" />
    <member name="ePhysicalDeviceShaderClockFeaturesKHR" />
    <member name="ePipelineCompilerControlCreateInfoAMD" />
    <member name="eCalibratedTimestampInfoEXT" />
    <member name="ePhysicalDeviceShaderCorePropertiesAMD" />
    <member name="eVideoDecodeH265CapabilitiesKHR" />
    <member name="eVideoDecodeH265SessionParametersCreateInfoKHR" />
    <member name="eVideoDecodeH265SessionParametersAddInfoKHR" />
    <member name="eVideoDecodeH265ProfileInfoKHR" />
    <member name="eVideoDecodeH265PictureInfoKHR" />
    <member name="eVideoDecodeH265DpbSlotInfoKHR" />
    <member name="eDeviceQueueGlobalPriorityCreateInfoKHR" />
    <member name="ePhysicalDeviceGlobalPriorityQueryFeaturesKHR" />
    <member name="eQueueFamilyGlobalPriorityPropertiesKHR" />
    <member name="eDeviceMemoryOverallocationCreateInfoAMD" />
    <member name="ePhysicalDeviceVertexAttributeDivisorPropertiesEXT" />
    <member name="ePipelineVertexInputDivisorStateCreateInfoEXT" />
    <member name="ePhysicalDeviceVertexAttributeDivisorFeaturesEXT" />
    <member name="ePipelineCreationFeedbackCreateInfoEXT" />
    <member name="ePhysicalDeviceDriverPropertiesKHR" />
    <member name="ePhysicalDeviceFloatControlsPropertiesKHR" />
    <member name="ePhysicalDeviceDepthStencilResolvePropertiesKHR" />
    <member name="eSubpassDescriptionDepthStencilResolveKHR" />
    <member name="ePhysicalDeviceComputeShaderDerivativesFeaturesNV" />
    <member name="ePhysicalDeviceMeshShaderFeaturesNV" />
    <member name="ePhysicalDeviceMeshShaderPropertiesNV" />
    <member name="ePhysicalDeviceFragmentShaderBarycentricFeaturesNV" />
    <member name="ePhysicalDeviceShaderImageFootprintFeaturesNV" />
    <member name="ePipelineViewportExclusiveScissorStateCreateInfoNV" />
    <member name="ePhysicalDeviceExclusiveScissorFeaturesNV" />
    <member name="eCheckpointDataNV" />
    <member name="eQueueFamilyCheckpointPropertiesNV" />
    <member name="ePhysicalDeviceTimelineSemaphoreFeaturesKHR" />
    <member name="ePhysicalDeviceTimelineSemaphorePropertiesKHR" />
    <member name="eSemaphoreTypeCreateInfoKHR" />
    <member name="eTimelineSemaphoreSubmitInfoKHR" />
    <member name="eSemaphoreWaitInfoKHR" />
    <member name="eSemaphoreSignalInfoKHR" />
    <member name="ePhysicalDeviceShaderIntegerFunctions2FeaturesINTEL" />
    <member name="eQueryPoolPerformanceQueryCreateInfoINTEL" />
    <member name="eQueryPoolCreateInfoINTEL" />
    <member name="eInitializePerformanceApiInfoINTEL" />
    <member name="ePerformanceMarkerInfoINTEL" />
    <member name="ePerformanceStreamMarkerInfoINTEL" />
    <member name="ePerformanceOverrideInfoINTEL" />
    <member name="ePerformanceConfigurationAcquireInfoINTEL" />
    <member name="ePhysicalDeviceVulkanMemoryModelFeaturesKHR" />
    <member name="ePhysicalDevicePciBusInfoPropertiesEXT" />
    <member name="eDisplayNativeHdrSurfaceCapabilitiesAMD" />
    <member name="eSwapchainDisplayNativeHdrCreateInfoAMD" />
    <member name="ePhysicalDeviceShaderTerminateInvocationFeaturesKHR" />
    <member name="ePhysicalDeviceFragmentDensityMapFeaturesEXT" />
    <member name="ePhysicalDeviceFragmentDensityMapPropertiesEXT" />
    <member name="eRenderPassFragmentDensityMapCreateInfoEXT" />
    <member name="ePhysicalDeviceScalarBlockLayoutFeaturesEXT" />
    <member name="ePhysicalDeviceSubgroupSizeControlPropertiesEXT" />
    <member name="ePipelineShaderStageRequiredSubgroupSizeCreateInfoEXT" />
    <member name="ePhysicalDeviceSubgroupSizeControlFeaturesEXT" />
    <member name="eFragmentShadingRateAttachmentInfoKHR" />
    <member name="ePipelineFragmentShadingRateStateCreateInfoKHR" />
    <member name="ePhysicalDeviceFragmentShadingRatePropertiesKHR" />
    <member name="ePhysicalDeviceFragmentShadingRateFeaturesKHR" />
    <member name="ePhysicalDeviceFragmentShadingRateKHR" />
    <member name="ePhysicalDeviceShaderCoreProperties2AMD" />
    <member name="ePhysicalDeviceCoherentMemoryFeaturesAMD" />
    <member name="ePhysicalDeviceShaderImageAtomicInt64FeaturesEXT" />
    <member name="ePhysicalDeviceMemoryBudgetPropertiesEXT" />
    <member name="ePhysicalDeviceMemoryPriorityFeaturesEXT" />
    <member name="eMemoryPriorityAllocateInfoEXT" />
    <member name="eSurfaceProtectedCapabilitiesKHR" />
    <member name="ePhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV" />
    <member name="ePhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR" />
    <member name="eAttachmentReferenceStencilLayoutKHR" />
    <member name="eAttachmentDescriptionStencilLayoutKHR" />
    <member name="ePhysicalDeviceBufferDeviceAddressFeaturesEXT" />
    <member name="ePhysicalDeviceBufferAddressFeaturesEXT" />
    <member name="eBufferDeviceAddressInfoEXT" />
    <member name="eBufferDeviceAddressCreateInfoEXT" />
    <member name="ePhysicalDeviceToolPropertiesEXT" />
    <member name="eImageStencilUsageCreateInfoEXT" />
    <member name="eValidationFeaturesEXT" />
    <member name="ePhysicalDevicePresentWaitFeaturesKHR" />
    <member name="ePhysicalDeviceCooperativeMatrixFeaturesNV" />
    <member name="eCooperativeMatrixPropertiesNV" />
    <member name="ePhysicalDeviceCooperativeMatrixPropertiesNV" />
    <member name="ePhysicalDeviceCoverageReductionModeFeaturesNV" />
    <member name="ePipelineCoverageReductionStateCreateInfoNV" />
    <member name="eFramebufferMixedSamplesCombinationNV" />
    <member name="ePhysicalDeviceFragmentShaderInterlockFeaturesEXT" />
    <member name="ePhysicalDeviceYcbcrImageArraysFeaturesEXT" />
    <member name="ePhysicalDeviceUniformBufferStandardLayoutFeaturesKHR" />
    <member name="ePhysicalDeviceProvokingVertexFeaturesEXT" />
    <member name="ePipelineRasterizationProvokingVertexStateCreateInfoEXT" />
    <member name="ePhysicalDeviceProvokingVertexPropertiesEXT" />
    <member name="eHeadlessSurfaceCreateInfoEXT" />
    <member name="ePhysicalDeviceBufferDeviceAddressFeaturesKHR" />
    <member name="eBufferDeviceAddressInfoKHR" />
    <member name="eBufferOpaqueCaptureAddressCreateInfoKHR" />
    <member name="eMemoryOpaqueCaptureAddressAllocateInfoKHR" />
    <member name="eDeviceMemoryOpaqueCaptureAddressInfoKHR" />
    <member name="ePhysicalDeviceLineRasterizationFeaturesEXT" />
    <member name="ePipelineRasterizationLineStateCreateInfoEXT" />
    <member name="ePhysicalDeviceLineRasterizationPropertiesEXT" />
    <member name="ePhysicalDeviceShaderAtomicFloatFeaturesEXT" />
    <member name="ePhysicalDeviceHostQueryResetFeaturesEXT" />
    <member name="ePhysicalDeviceIndexTypeUint8FeaturesEXT" />
    <member name="ePhysicalDeviceExtendedDynamicStateFeaturesEXT" />
    <member name="ePhysicalDevicePipelineExecutablePropertiesFeaturesKHR" />
    <member name="ePipelineInfoKHR" />
    <member name="ePipelineExecutablePropertiesKHR" />
    <member name="ePipelineExecutableInfoKHR" />
    <member name="ePipelineExecutableStatisticKHR" />
    <member name="ePipelineExecutableInternalRepresentationKHR" />
    <member name="ePhysicalDeviceHostImageCopyFeaturesEXT" />
    <member name="ePhysicalDeviceHostImageCopyPropertiesEXT" />
    <member name="eMemoryToImageCopyEXT" />
    <member name="eImageToMemoryCopyEXT" />
    <member name="eCopyImageToMemoryInfoEXT" />
    <member name="eCopyMemoryToImageInfoEXT" />
    <member name="eHostImageLayoutTransitionInfoEXT" />
    <member name="eCopyImageToImageInfoEXT" />
    <member name="eSubresourceHostMemcpySizeEXT" />
    <member name="eHostImageCopyDevicePerformanceQueryEXT" />
    <member name="eMemoryMapInfoKHR" />
    <member name="eMemoryUnmapInfoKHR" />
    <member name="ePhysicalDeviceShaderAtomicFloat2FeaturesEXT" />
    <member name="eSurfacePresentModeEXT" />
    <member name="eSurfacePresentScalingCapabilitiesEXT" />
    <member name="eSurfacePresentModeCompatibilityEXT" />
    <member name="ePhysicalDeviceSwapchainMaintenance1FeaturesEXT" />
    <member name="eSwapchainPresentFenceInfoEXT" />
    <member name="eSwapchainPresentModesCreateInfoEXT" />
    <member name="eSwapchainPresentModeInfoEXT" />
    <member name="eSwapchainPresentScalingCreateInfoEXT" />
    <member name="eReleaseSwapchainImagesInfoEXT" />
    <member name="ePhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT" />
    <member name="ePhysicalDeviceDeviceGeneratedCommandsPropertiesNV" />
    <member name="eGraphicsShaderGroupCreateInfoNV" />
    <member name="eGraphicsPipelineShaderGroupsCreateInfoNV" />
    <member name="eIndirectCommandsLayoutTokenNV" />
    <member name="eIndirectCommandsLayoutCreateInfoNV" />
    <member name="eGeneratedCommandsInfoNV" />
    <member name="eGeneratedCommandsMemoryRequirementsInfoNV" />
    <member name="ePhysicalDeviceDeviceGeneratedCommandsFeaturesNV" />
    <member name="ePhysicalDeviceInheritedViewportScissorFeaturesNV" />
    <member name="eCommandBufferInheritanceViewportScissorInfoNV" />
    <member name="ePhysicalDeviceShaderIntegerDotProductFeaturesKHR" />
    <member name="ePhysicalDeviceShaderIntegerDotProductPropertiesKHR" />
    <member name="ePhysicalDeviceTexelBufferAlignmentFeaturesEXT" />
    <member name="ePhysicalDeviceTexelBufferAlignmentPropertiesEXT" />
    <member name="eCommandBufferInheritanceRenderPassTransformInfoQCOM" />
    <member name="eRenderPassTransformBeginInfoQCOM" />
    <member name="ePhysicalDeviceDepthBiasControlFeaturesEXT" />
    <member name="eDepthBiasInfoEXT" />
    <member name="eDepthBiasRepresentationInfoEXT" />
    <member name="ePhysicalDeviceDeviceMemoryReportFeaturesEXT" />
    <member name="eDeviceDeviceMemoryReportCreateInfoEXT" />
    <member name="eDeviceMemoryReportCallbackDataEXT" />
    <member name="ePhysicalDeviceRobustness2FeaturesEXT" />
    <member name="ePhysicalDeviceRobustness2PropertiesEXT" />
    <member name="eSamplerCustomBorderColorCreateInfoEXT" />
    <member name="ePhysicalDeviceCustomBorderColorPropertiesEXT" />
    <member name="ePhysicalDeviceCustomBorderColorFeaturesEXT" />
    <member name="ePipelineLibraryCreateInfoKHR" />
    <member name="ePhysicalDevicePresentBarrierFeaturesNV" />
    <member name="eSurfaceCapabilitiesPresentBarrierNV" />
    <member name="eSwapchainPresentBarrierCreateInfoNV" />
    <member name="ePresentIdKHR" />
    <member name="ePhysicalDevicePresentIdFeaturesKHR" />
    <member name="ePhysicalDevicePrivateDataFeaturesEXT" />
    <member name="eDevicePrivateDataCreateInfoEXT" />
    <member name="ePrivateDataSlotCreateInfoEXT" />
    <member name="ePhysicalDevicePipelineCreationCacheControlFeaturesEXT" />
    <member name="eVideoEncodeInfoKHR" />
    <member name="eVideoEncodeRateControlInfoKHR" />
    <member name="eVideoEncodeRateControlLayerInfoKHR" />
    <member name="eVideoEncodeCapabilitiesKHR" />
    <member name="eVideoEncodeUsageInfoKHR" />
    <member name="eQueryPoolVideoEncodeFeedbackCreateInfoKHR" />
    <member name="ePhysicalDeviceVideoEncodeQualityLevelInfoKHR" />
    <member name="eVideoEncodeQualityLevelPropertiesKHR" />
    <member name="eVideoEncodeQualityLevelInfoKHR" />
    <member name="eVideoEncodeSessionParametersGetInfoKHR" />
    <member name="eVideoEncodeSessionParametersFeedbackInfoKHR" />
    <member name="ePhysicalDeviceDiagnosticsConfigFeaturesNV" />
    <member name="eDeviceDiagnosticsConfigCreateInfoNV" />
    <member name="eQueryLowLatencySupportNV" />
    <member name="eMemoryBarrier2KHR" />
    <member name="eBufferMemoryBarrier2KHR" />
    <member name="eImageMemoryBarrier2KHR" />
    <member name="eDependencyInfoKHR" />
    <member name="eSubmitInfo2KHR" />
    <member name="eSemaphoreSubmitInfoKHR" />
    <member name="eCommandBufferSubmitInfoKHR" />
    <member name="ePhysicalDeviceSynchronization2FeaturesKHR" />
    <member name="eQueueFamilyCheckpointProperties2NV" />
    <member name="eCheckpointData2NV" />
    <member name="ePhysicalDeviceDescriptorBufferPropertiesEXT" />
    <member name="ePhysicalDeviceDescriptorBufferDensityMapPropertiesEXT" />
    <member name="ePhysicalDeviceDescriptorBufferFeaturesEXT" />
    <member name="eDescriptorAddressInfoEXT" />
    <member name="eDescriptorGetInfoEXT" />
    <member name="eBufferCaptureDescriptorDataInfoEXT" />
    <member name="eImageCaptureDescriptorDataInfoEXT" />
    <member name="eImageViewCaptureDescriptorDataInfoEXT" />
    <member name="eSamplerCaptureDescriptorDataInfoEXT" />
    <member name="eOpaqueCaptureDescriptorDataCreateInfoEXT" />
    <member name="eDescriptorBufferBindingInfoEXT" />
    <member name="eDescriptorBufferBindingPushDescriptorBufferHandleEXT" />
    <member name="eAccelerationStructureCaptureDescriptorDataInfoEXT" />
    <member name="ePhysicalDeviceGraphicsPipelineLibraryFeaturesEXT" />
    <member name="ePhysicalDeviceGraphicsPipelineLibraryPropertiesEXT" />
    <member name="eGraphicsPipelineLibraryCreateInfoEXT" />
    <member name="ePhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD" />
    <member name="ePhysicalDeviceFragmentShaderBarycentricFeaturesKHR" />
    <member name="ePhysicalDeviceFragmentShaderBarycentricPropertiesKHR" />
    <member name="ePhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR" />
    <member name="ePhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR" />
    <member name="ePhysicalDeviceFragmentShadingRateEnumsPropertiesNV" />
    <member name="ePhysicalDeviceFragmentShadingRateEnumsFeaturesNV" />
    <member name="ePipelineFragmentShadingRateEnumStateCreateInfoNV" />
    <member name="eAccelerationStructureGeometryMotionTrianglesDataNV" />
    <member name="ePhysicalDeviceRayTracingMotionBlurFeaturesNV" />
    <member name="eAccelerationStructureMotionInfoNV" />
    <member name="ePhysicalDeviceMeshShaderFeaturesEXT" />
    <member name="ePhysicalDeviceMeshShaderPropertiesEXT" />
    <member name="ePhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT" />
    <member name="ePhysicalDeviceFragmentDensityMap2FeaturesEXT" />
    <member name="ePhysicalDeviceFragmentDensityMap2PropertiesEXT" />
    <member name="eCopyCommandTransformInfoQCOM" />
    <member name="ePhysicalDeviceImageRobustnessFeaturesEXT" />
    <member name="ePhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR" />
    <member name="eCopyBufferInfo2KHR" />
    <member name="eCopyImageInfo2KHR" />
    <member name="eCopyBufferToImageInfo2KHR" />
    <member name="eCopyImageToBufferInfo2KHR" />
    <member name="eBlitImageInfo2KHR" />
    <member name="eResolveImageInfo2KHR" />
    <member name="eBufferCopy2KHR" />
    <member name="eImageCopy2KHR" />
    <member name="eImageBlit2KHR" />
    <member name="eBufferImageCopy2KHR" />
    <member name="eImageResolve2KHR" />
    <member name="ePhysicalDeviceImageCompressionControlFeaturesEXT" />
    <member name="eImageCompressionControlEXT" />
    <member name="eSubresourceLayout2EXT" />
    <member name="eImageSubresource2EXT" />
    <member name="eImageCompressionPropertiesEXT" />
    <member name="ePhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT" />
    <member name="ePhysicalDevice4444FormatsFeaturesEXT" />
    <member name="ePhysicalDeviceFaultFeaturesEXT" />
    <member name="eDeviceFaultCountsEXT" />
    <member name="eDeviceFaultInfoEXT" />
    <member name="ePhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM" />
    <member name="ePhysicalDeviceRgba10X6FormatsFeaturesEXT" />
    <member name="ePhysicalDeviceMutableDescriptorTypeFeaturesVALVE" />
    <member name="eMutableDescriptorTypeCreateInfoVALVE" />
    <member name="ePhysicalDeviceVertexInputDynamicStateFeaturesEXT" />
    <member name="eVertexInputBindingDescription2EXT" />
    <member name="eVertexInputAttributeDescription2EXT" />
    <member name="ePhysicalDeviceDrmPropertiesEXT" />
    <member name="ePhysicalDeviceAddressBindingReportFeaturesEXT" />
    <member name="eDeviceAddressBindingCallbackDataEXT" />
    <member name="ePhysicalDeviceDepthClipControlFeaturesEXT" />
    <member name="ePipelineViewportDepthClipControlCreateInfoEXT" />
    <member name="ePhysicalDevicePrimitiveTopologyListRestartFeaturesEXT" />
    <member name="eFormatProperties3KHR" />
    <member name="eSubpassShadingPipelineCreateInfoHUAWEI" />
    <member name="ePhysicalDeviceSubpassShadingFeaturesHUAWEI" />
    <member name="ePhysicalDeviceSubpassShadingPropertiesHUAWEI" />
    <member name="ePhysicalDeviceInvocationMaskFeaturesHUAWEI" />
    <member name="eMemoryGetRemoteAddressInfoNV" />
    <member name="ePhysicalDeviceExternalMemoryRdmaFeaturesNV" />
    <member name="ePipelinePropertiesIdentifierEXT" />
    <member name="ePhysicalDevicePipelinePropertiesFeaturesEXT" />
    <member name="ePipelineInfoEXT" />
    <member name="ePhysicalDeviceFrameBoundaryFeaturesEXT" />
    <member name="eFrameBoundaryEXT" />
    <member name="ePhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT" />
    <member name="eSubpassResolvePerformanceQueryEXT" />
    <member name="eMultisampledRenderToSingleSampledInfoEXT" />
    <member name="ePhysicalDeviceExtendedDynamicState2FeaturesEXT" />
    <member name="ePhysicalDeviceColorWriteEnableFeaturesEXT" />
    <member name="ePipelineColorWriteCreateInfoEXT" />
    <member name="ePhysicalDevicePrimitivesGeneratedQueryFeaturesEXT" />
    <member name="ePhysicalDeviceRayTracingMaintenance1FeaturesKHR" />
    <member name="ePhysicalDeviceGlobalPriorityQueryFeaturesEXT" />
    <member name="eQueueFamilyGlobalPriorityPropertiesEXT" />
    <member name="ePhysicalDeviceImageViewMinLodFeaturesEXT" />
    <member name="eImageViewMinLodCreateInfoEXT" />
    <member name="ePhysicalDeviceMultiDrawFeaturesEXT" />
    <member name="ePhysicalDeviceMultiDrawPropertiesEXT" />
    <member name="ePhysicalDeviceImage2DViewOf3DFeaturesEXT" />
    <member name="ePhysicalDeviceShaderTileImageFeaturesEXT" />
    <member name="ePhysicalDeviceShaderTileImagePropertiesEXT" />
    <member name="eMicromapBuildInfoEXT" />
    <member name="eMicromapVersionInfoEXT" />
    <member name="eCopyMicromapInfoEXT" />
    <member name="eCopyMicromapToMemoryInfoEXT" />
    <member name="eCopyMemoryToMicromapInfoEXT" />
    <member name="ePhysicalDeviceOpacityMicromapFeaturesEXT" />
    <member name="ePhysicalDeviceOpacityMicromapPropertiesEXT" />
    <member name="eMicromapCreateInfoEXT" />
    <member name="eMicromapBuildSizesInfoEXT" />
    <member name="eAccelerationStructureTrianglesOpacityMicromapEXT" />
    <member name="ePhysicalDeviceClusterCullingShaderFeaturesHUAWEI" />
    <member name="ePhysicalDeviceClusterCullingShaderPropertiesHUAWEI" />
    <member name="ePhysicalDeviceClusterCullingShaderVrsFeaturesHUAWEI" />
    <member name="ePhysicalDeviceBorderColorSwizzleFeaturesEXT" />
    <member name="eSamplerBorderColorComponentMappingCreateInfoEXT" />
    <member name="ePhysicalDevicePageableDeviceLocalMemoryFeaturesEXT" />
    <member name="ePhysicalDeviceMaintenance4FeaturesKHR" />
    <member name="ePhysicalDeviceMaintenance4PropertiesKHR" />
    <member name="eDeviceBufferMemoryRequirementsKHR" />
    <member name="eDeviceImageMemoryRequirementsKHR" />
    <member name="ePhysicalDeviceShaderCorePropertiesARM" />
    <member name="eDeviceQueueShaderCoreControlCreateInfoARM" />
    <member name="ePhysicalDeviceSchedulingControlsFeaturesARM" />
    <member name="ePhysicalDeviceSchedulingControlsPropertiesARM" />
    <member name="ePhysicalDeviceImageSlicedViewOf3DFeaturesEXT" />
    <member name="eImageViewSlicedCreateInfoEXT" />
    <member name="ePhysicalDeviceDescriptorSetHostMappingFeaturesVALVE" />
    <member name="eDescriptorSetBindingReferenceVALVE" />
    <member name="eDescriptorSetLayoutHostMappingInfoVALVE" />
    <member name="ePhysicalDeviceDepthClampZeroOneFeaturesEXT" />
    <member name="ePhysicalDeviceNonSeamlessCubeMapFeaturesEXT" />
    <member name="ePhysicalDeviceRenderPassStripedFeaturesARM" />
    <member name="ePhysicalDeviceRenderPassStripedPropertiesARM" />
    <member name="eRenderPassStripeBeginInfoARM" />
    <member name="eRenderPassStripeInfoARM" />
    <member name="eRenderPassStripeSubmitInfoARM" />
    <member name="ePhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM" />
    <member name="ePhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM" />
    <member name="eSubpassFragmentDensityMapOffsetEndInfoQCOM" />
    <member name="ePhysicalDeviceCopyMemoryIndirectFeaturesNV" />
    <member name="ePhysicalDeviceCopyMemoryIndirectPropertiesNV" />
    <member name="ePhysicalDeviceMemoryDecompressionFeaturesNV" />
    <member name="ePhysicalDeviceMemoryDecompressionPropertiesNV" />
    <member name="ePhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV" />
    <member name="eComputePipelineIndirectBufferInfoNV" />
    <member name="ePipelineIndirectDeviceAddressInfoNV" />
    <member name="ePhysicalDeviceLinearColorAttachmentFeaturesNV" />
    <member name="ePhysicalDeviceImageCompressionControlSwapchainFeaturesEXT" />
    <member name="ePhysicalDeviceImageProcessingFeaturesQCOM" />
    <member name="ePhysicalDeviceImageProcessingPropertiesQCOM" />
    <member name="eImageViewSampleWeightCreateInfoQCOM" />
    <member name="ePhysicalDeviceNestedCommandBufferFeaturesEXT" />
    <member name="ePhysicalDeviceNestedCommandBufferPropertiesEXT" />
    <member name="eExternalMemoryAcquireUnmodifiedEXT" />
    <member name="ePhysicalDeviceExtendedDynamicState3FeaturesEXT" />
    <member name="ePhysicalDeviceExtendedDynamicState3PropertiesEXT" />
    <member name="ePhysicalDeviceSubpassMergeFeedbackFeaturesEXT" />
    <member name="eRenderPassCreationControlEXT" />
    <member name="eRenderPassCreationFeedbackCreateInfoEXT" />
    <member name="eRenderPassSubpassFeedbackCreateInfoEXT" />
    <member name="eDirectDriverLoadingInfoLUNARG" />
    <member name="eDirectDriverLoadingListLUNARG" />
    <member name="ePhysicalDeviceShaderModuleIdentifierFeaturesEXT" />
    <member name="ePhysicalDeviceShaderModuleIdentifierPropertiesEXT" />
    <member name="ePipelineShaderStageModuleIdentifierCreateInfoEXT" />
    <member name="eShaderModuleIdentifierEXT" />
    <member name="ePhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT" />
    <member name="ePhysicalDeviceOpticalFlowFeaturesNV" />
    <member name="ePhysicalDeviceOpticalFlowPropertiesNV" />
    <member name="eOpticalFlowImageFormatInfoNV" />
    <member name="eOpticalFlowImageFormatPropertiesNV" />
    <member name="eOpticalFlowSessionCreateInfoNV" />
    <member name="eOpticalFlowExecuteInfoNV" />
    <member name="eOpticalFlowSessionCreatePrivateDataInfoNV" />
    <member name="ePhysicalDeviceLegacyDitheringFeaturesEXT" />
    <member name="ePhysicalDevicePipelineProtectedAccessFeaturesEXT" />
    <member name="ePhysicalDeviceMaintenance5FeaturesKHR" />
    <member name="ePhysicalDeviceMaintenance5PropertiesKHR" />
    <member name="eRenderingAreaInfoKHR" />
    <member name="eDeviceImageSubresourceInfoKHR" />
    <member name="eSubresourceLayout2KHR" />
    <member name="eImageSubresource2KHR" />
    <member name="ePipelineCreateFlags2CreateInfoKHR" />
    <member name="eBufferUsageFlags2CreateInfoKHR" />
    <member name="ePhysicalDeviceRayTracingPositionFetchFeaturesKHR" />
    <member name="ePhysicalDeviceShaderObjectFeaturesEXT" />
    <member name="ePhysicalDeviceShaderObjectPropertiesEXT" />
    <member name="eShaderCreateInfoEXT" />
    <member name="eShaderRequiredSubgroupSizeCreateInfoEXT" />
    <member name="ePhysicalDeviceTilePropertiesFeaturesQCOM" />
    <member name="eTilePropertiesQCOM" />
    <member name="ePhysicalDeviceAmigoProfilingFeaturesSEC" />
    <member name="eAmigoProfilingSubmitInfoSEC" />
    <member name="ePhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM" />
    <member name="ePhysicalDeviceRayTracingInvocationReorderFeaturesNV" />
    <member name="ePhysicalDeviceRayTracingInvocationReorderPropertiesNV" />
    <member name="ePhysicalDeviceExtendedSparseAddressSpaceFeaturesNV" />
    <member name="ePhysicalDeviceExtendedSparseAddressSpacePropertiesNV" />
    <member name="ePhysicalDeviceMutableDescriptorTypeFeaturesEXT" />
    <member name="eMutableDescriptorTypeCreateInfoEXT" />
    <member name="eLayerSettingsCreateInfoEXT" />
    <member name="ePhysicalDeviceShaderCoreBuiltinsFeaturesARM" />
    <member name="ePhysicalDeviceShaderCoreBuiltinsPropertiesARM" />
    <member name="ePhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT" />
    <member name="ePhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT" />
    <member name="eLatencySleepModeInfoNV" />
    <member name="eLatencySleepInfoNV" />
    <member name="eSetLatencyMarkerInfoNV" />
    <member name="eGetLatencyMarkerInfoNV" />
    <member name="eLatencyTimingsFrameReportNV" />
    <member name="eLatencySubmissionPresentIdNV" />
    <member name="eOutOfBandQueueTypeInfoNV" />
    <member name="eSwapchainLatencyCreateInfoNV" />
    <member name="eLatencySurfaceCapabilitiesNV" />
    <member name="ePhysicalDeviceCooperativeMatrixFeaturesKHR" />
    <member name="eCooperativeMatrixPropertiesKHR" />
    <member name="ePhysicalDeviceCooperativeMatrixPropertiesKHR" />
    <member name="ePhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM" />
    <member name="eMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM" />
    <member name="ePhysicalDeviceVideoMaintenance1FeaturesKHR" />
    <member name="eVideoInlineQueryInfoKHR" />
    <member name="ePhysicalDevicePerStageDescriptorSetFeaturesNV" />
    <member name="ePhysicalDeviceImageProcessing2FeaturesQCOM" />
    <member name="ePhysicalDeviceImageProcessing2PropertiesQCOM" />
    <member name="eSamplerBlockMatchWindowCreateInfoQCOM" />
    <member name="eSamplerCubicWeightsCreateInfoQCOM" />
    <member name="ePhysicalDeviceCubicWeightsFeaturesQCOM" />
    <member name="eBlitImageCubicWeightsInfoQCOM" />
    <member name="ePhysicalDeviceYcbcrDegammaFeaturesQCOM" />
    <member name="eSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM" />
    <member name="ePhysicalDeviceCubicClampFeaturesQCOM" />
    <member name="ePhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT" />
    <member name="ePhysicalDeviceVertexAttributeDivisorPropertiesKHR" />
    <member name="ePipelineVertexInputDivisorStateCreateInfoKHR" />
    <member name="ePhysicalDeviceVertexAttributeDivisorFeaturesKHR" />
    <member name="ePhysicalDeviceLayeredDriverPropertiesMSFT" />
    <member name="eCalibratedTimestampInfoKHR" />
    <member name="ePhysicalDeviceMaintenance6FeaturesKHR" />
    <member name="ePhysicalDeviceMaintenance6PropertiesKHR" />
    <member name="eBindMemoryStatusKHR" />
    <member name="eBindDescriptorSetsInfoKHR" />
    <member name="ePushConstantsInfoKHR" />
    <member name="ePushDescriptorSetInfoKHR" />
    <member name="ePushDescriptorSetWithTemplateInfoKHR" />
    <member name="eSetDescriptorBufferOffsetsInfoEXT" />
    <member name="eBindDescriptorBufferEmbeddedSamplersInfoEXT" />
    <member name="ePhysicalDeviceDescriptorPoolOverallocationFeaturesNV" />
  </enum>
  <enum name="SubpassContents">
    <member name="eInline" />
    <member name="eSecondaryCommandBuffers" />
    <member name="eInlineAndSecondaryCommandBuffersEXT" />
  </enum>
  <enum name="SubpassDescriptionFlagBits">
    <member name="ePerViewAttributesNVX" />
    <member name="ePerViewPositionXOnlyNVX" />
    <member name="eFragmentRegionQCOM" />
    <member name="eShaderResolveQCOM" />
    <member name="eRasterizationOrderAttachmentColorAccessARM" />
    <member name="eRasterizationOrderAttachmentDepthAccessARM" />
    <member name="eRasterizationOrderAttachmentStencilAccessARM" />
    <member name="eRasterizationOrderAttachmentColorAccessEXT" />
    <member name="eRasterizationOrderAttachmentDepthAccessEXT" />
    <member name="eRasterizationOrderAttachmentStencilAccessEXT" />
    <member name="eEnableLegacyDitheringEXT" />
  </enum>
  <enum name="SystemAllocationScope">
    <member name="eCommand" />
    <member name="eObject" />
    <member name="eCache" />
    <member name="eDevice" />
    <member name="eInstance" />
  </enum>
  <enum name="VendorId">
    <member name="eVIV" />
    <member name="eVSI" />
    <member name="eKazan" />
    <member name="eCodeplay" />
    <member name="eMESA" />
    <member name="ePocl" />
    <member name="eMobileye" />
  </enum>
  <enum name="VertexInputRate">
    <member name="eVertex" />
    <member name="eInstance" />
  </enum>
  <enum name="ChromaLocation">
    <member name="eCositedEven" />
    <member name="eMidpoint" />
  </enum>
  <enum name="CommandPoolTrimFlagBits" />
  <enum name="DescriptorUpdateTemplateCreateFlagBits" />
  <enum name="DescriptorUpdateTemplateType">
    <member name="eDescriptorSet" />
    <member name="ePushDescriptorsKHR" />
  </enum>
  <enum name="ExternalFenceFeatureFlagBits">
    <member name="eExportable" />
    <member name="eImportable" />
  </enum>
  <enum name="ExternalFenceHandleTypeFlagBits">
    <member name="eOpaqueFd" />
    <member name="eOpaqueWin32" />
    <member name="eOpaqueWin32Kmt" />
    <member name="eSyncFd" />
  </enum>
  <enum name="ExternalMemoryFeatureFlagBits">
    <member name="eDedicatedOnly" />
    <member name="eExportable" />
    <member name="eImportable" />
  </enum>
  <enum name="ExternalMemoryHandleTypeFlagBits">
    <member name="eOpaqueFd" />
    <member name="eOpaqueWin32" />
    <member name="eOpaqueWin32Kmt" />
    <member name="eD3D11Texture" />
    <member name="eD3D11TextureKmt" />
    <member name="eD3D12Heap" />
    <member name="eD3D12Resource" />
    <member name="eDmaBufEXT" />
    <member name="eHostAllocationEXT" />
    <member name="eHostMappedForeignMemoryEXT" />
    <member name="eRdmaAddressNV" />
  </enum>
  <enum name="ExternalSemaphoreFeatureFlagBits">
    <member name="eExportable" />
    <member name="eImportable" />
  </enum>
  <enum name="ExternalSemaphoreHandleTypeFlagBits">
    <member name="eOpaqueFd" />
    <member name="eOpaqueWin32" />
    <member name="eOpaqueWin32Kmt" />
    <member name="eD3D12Fence" />
    <member name="eD3D11Fence" />
    <member name="eSyncFd" />
  </enum>
  <enum name="FenceImportFlagBits">
    <member name="eTemporary" />
  </enum>
  <enum name="MemoryAllocateFlagBits">
    <member name="eDeviceMask" />
    <member name="eDeviceAddress" />
    <member name="eDeviceAddressCaptureReplay" />
  </enum>
  <enum name="PeerMemoryFeatureFlagBits">
    <member name="eCopySrc" />
    <member name="eCopyDst" />
    <member name="eGenericSrc" />
    <member name="eGenericDst" />
  </enum>
  <enum name="PointClippingBehavior">
    <member name="eAllClipPlanes" />
    <member name="eUserClipPlanesOnly" />
  </enum>
  <enum name="SamplerYcbcrModelConversion">
    <member name="eRgbIdentity" />
    <member name="eYcbcrIdentity" />
    <member name="eYcbcr709" />
    <member name="eYcbcr601" />
    <member name="eYcbcr2020" />
  </enum>
  <enum name="SamplerYcbcrRange">
    <member name="eItuFull" />
    <member name="eItuNarrow" />
  </enum>
  <enum name="SemaphoreImportFlagBits">
    <member name="eTemporary" />
  </enum>
  <enum name="SubgroupFeatureFlagBits">
    <member name="eBasic" />
    <member name="eVote" />
    <member name="eArithmetic" />
    <member name="eBallot" />
    <member name="eShuffle" />
    <member name="eShuffleRelative" />
    <member name="eClustered" />
    <member name="eQuad" />
    <member name="ePartitionedNV" />
  </enum>
  <enum name="TessellationDomainOrigin">
    <member name="eUpperLeft" />
    <member name="eLowerLeft" />
  </enum>
  <enum name="DescriptorBindingFlagBits">
    <member name="eUpdateAfterBind" />
    <member name="eUpdateUnusedWhilePending" />
    <member name="ePartiallyBound" />
    <member name="eVariableDescriptorCount" />
  </enum>
  <enum name="DriverId">
    <member name="eAmdProprietary" />
    <member name="eAmdOpenSource" />
    <member name="eMesaRadv" />
    <member name="eNvidiaProprietary" />
    <member name="eIntelProprietaryWindows" />
    <member name="eIntelOpenSourceMESA" />
    <member name="eImaginationProprietary" />
    <member name="eQualcommProprietary" />
    <member name="eArmProprietary" />
    <member name="eGoogleSwiftshader" />
    <member name="eGgpProprietary" />
    <member name="eBroadcomProprietary" />
    <member name="eMesaLlvmpipe" />
    <member name="eMoltenvk" />
    <member name="eCoreaviProprietary" />
    <member name="eJuiceProprietary" />
    <member name="eVerisiliconProprietary" />
    <member name="eMesaTurnip" />
    <member name="eMesaV3Dv" />
    <member name="eMesaPanvk" />
    <member name="eSamsungProprietary" />
    <member name="eMesaVenus" />
    <member name="eMesaDozen" />
    <member name="eMesaNvk" />
    <member name="eImaginationOpenSourceMESA" />
    <member name="eMesaAgxv" />
  </enum>
  <enum name="ResolveModeFlagBits">
    <member name="eNone" />
    <member name="eSampleZero" />
    <member name="eAverage" />
    <member name="eMin" />
    <member name="eMax" />
  </enum>
  <enum name="SamplerReductionMode">
    <member name="eWeightedAverage" />
    <member name="eMin" />
    <member name="eMax" />
    <member name="eWeightedAverageRangeclampQCOM" />
  </enum>
  <enum name="SemaphoreType">
    <member name="eBinary" />
    <member name="eTimeline" />
  </enum>
  <enum name="SemaphoreWaitFlagBits">
    <member name="eAny" />
  </enum>
  <enum name="ShaderFloatControlsIndependence">
    <member name="e32BitOnly" />
    <member name="eAll" />
    <member name="eNone" />
  </enum>
  <enum name="AccessFlagBits2">
    <member name="eNone" />
    <member name="eIndirectCommandRead" />
    <member name="eIndexRead" />
    <member name="eVertexAttributeRead" />
    <member name="eUniformRead" />
    <member name="eInputAttachmentRead" />
    <member name="eShaderRead" />
    <member name="eShaderWrite" />
    <member name="eColorAttachmentRead" />
    <member name="eColorAttachmentWrite" />
    <member name="eDepthStencilAttachmentRead" />
    <member name="eDepthStencilAttachmentWrite" />
    <member name="eTransferRead" />
    <member name="eTransferWrite" />
    <member name="eHostRead" />
    <member name="eHostWrite" />
    <member name="eMemoryRead" />
    <member name="eMemoryWrite" />
    <member name="eShaderSampledRead" />
    <member name="eShaderStorageRead" />
    <member name="eShaderStorageWrite" />
    <member name="eVideoDecodeReadKHR" />
    <member name="eVideoDecodeWriteKHR" />
    <member name="eVideoEncodeReadKHR" />
    <member name="eVideoEncodeWriteKHR" />
    <member name="eTransformFeedbackWriteEXT" />
    <member name="eTransformFeedbackCounterReadEXT" />
    <member name="eTransformFeedbackCounterWriteEXT" />
    <member name="eConditionalRenderingReadEXT" />
    <member name="eCommandPreprocessReadNV" />
    <member name="eCommandPreprocessWriteNV" />
    <member name="eFragmentShadingRateAttachmentReadKHR" />
    <member name="eShadingRateImageReadNV" />
    <member name="eAccelerationStructureReadKHR" />
    <member name="eAccelerationStructureWriteKHR" />
    <member name="eAccelerationStructureReadNV" />
    <member name="eAccelerationStructureWriteNV" />
    <member name="eFragmentDensityMapReadEXT" />
    <member name="eColorAttachmentReadNoncoherentEXT" />
    <member name="eDescriptorBufferReadEXT" />
    <member name="eInvocationMaskReadHUAWEI" />
    <member name="eShaderBindingTableReadKHR" />
    <member name="eMicromapReadEXT" />
    <member name="eMicromapWriteEXT" />
    <member name="eOpticalFlowReadNV" />
    <member name="eOpticalFlowWriteNV" />
  </enum>
  <enum name="FormatFeatureFlagBits2">
    <member name="eSampledImage" />
    <member name="eStorageImage" />
    <member name="eStorageImageAtomic" />
    <member name="eUniformTexelBuffer" />
    <member name="eStorageTexelBuffer" />
    <member name="eStorageTexelBufferAtomic" />
    <member name="eVertexBuffer" />
    <member name="eColorAttachment" />
    <member name="eColorAttachmentBlend" />
    <member name="eDepthStencilAttachment" />
    <member name="eBlitSrc" />
    <member name="eBlitDst" />
    <member name="eSampledImageFilterLinear" />
    <member name="eSampledImageFilterCubic" />
    <member name="eSampledImageFilterCubicEXT" />
    <member name="eTransferSrc" />
    <member name="eTransferDst" />
    <member name="eSampledImageFilterMinmax" />
    <member name="eMidpointChromaSamples" />
    <member name="eSampledImageYcbcrConversionLinearFilter" />
    <member name="eSampledImageYcbcrConversionSeparateReconstructionFilter" />
    <member name="eSampledImageYcbcrConversionChromaReconstructionExplicit" />
    <member name="eSampledImageYcbcrConversionChromaReconstructionExplicitForceable" />
    <member name="eDisjoint" />
    <member name="eCositedChromaSamples" />
    <member name="eStorageReadWithoutFormat" />
    <member name="eStorageWriteWithoutFormat" />
    <member name="eSampledImageDepthComparison" />
    <member name="eVideoDecodeOutputKHR" />
    <member name="eVideoDecodeDpbKHR" />
    <member name="eAccelerationStructureVertexBufferKHR" />
    <member name="eFragmentDensityMapEXT" />
    <member name="eFragmentShadingRateAttachmentKHR" />
    <member name="eHostImageTransferEXT" />
    <member name="eVideoEncodeInputKHR" />
    <member name="eVideoEncodeDpbKHR" />
    <member name="eLinearColorAttachmentNV" />
    <member name="eWeightImageQCOM" />
    <member name="eWeightSampledImageQCOM" />
    <member name="eBlockMatchingQCOM" />
    <member name="eBoxFilterSampledQCOM" />
    <member name="eOpticalFlowImageNV" />
    <member name="eOpticalFlowVectorNV" />
    <member name="eOpticalFlowCostNV" />
  </enum>
  <enum name="PipelineCreationFeedbackFlagBits">
    <member name="eValid" />
    <member name="eApplicationPipelineCacheHit" />
    <member name="eBasePipelineAcceleration" />
  </enum>
  <enum name="PipelineStageFlagBits2">
    <member name="eNone" />
    <member name="eTopOfPipe" />
    <member name="eDrawIndirect" />
    <member name="eVertexInput" />
    <member name="eVertexShader" />
    <member name="eTessellationControlShader" />
    <member name="eTessellationEvaluationShader" />
    <member name="eGeometryShader" />
    <member name="eFragmentShader" />
    <member name="eEarlyFragmentTests" />
    <member name="eLateFragmentTests" />
    <member name="eColorAttachmentOutput" />
    <member name="eComputeShader" />
    <member name="eAllTransfer" />
    <member name="eTransfer" />
    <member name="eBottomOfPipe" />
    <member name="eHost" />
    <member name="eAllGraphics" />
    <member name="eAllCommands" />
    <member name="eCopy" />
    <member name="eResolve" />
    <member name="eBlit" />
    <member name="eClear" />
    <member name="eIndexInput" />
    <member name="eVertexAttributeInput" />
    <member name="ePreRasterizationShaders" />
    <member name="eVideoDecodeKHR" />
    <member name="eVideoEncodeKHR" />
    <member name="eTransformFeedbackEXT" />
    <member name="eConditionalRenderingEXT" />
    <member name="eCommandPreprocessNV" />
    <member name="eFragmentShadingRateAttachmentKHR" />
    <member name="eShadingRateImageNV" />
    <member name="eAccelerationStructureBuildKHR" />
    <member name="eRayTracingShaderKHR" />
    <member name="eRayTracingShaderNV" />
    <member name="eAccelerationStructureBuildNV" />
    <member name="eFragmentDensityProcessEXT" />
    <member name="eTaskShaderNV" />
    <member name="eMeshShaderNV" />
    <member name="eTaskShaderEXT" />
    <member name="eMeshShaderEXT" />
    <member name="eSubpassShaderHUAWEI" />
    <member name="eSubpassShadingHUAWEI" />
    <member name="eInvocationMaskHUAWEI" />
    <member name="eAccelerationStructureCopyKHR" />
    <member name="eMicromapBuildEXT" />
    <member name="eClusterCullingShaderHUAWEI" />
    <member name="eOpticalFlowNV" />
  </enum>
  <enum name="PrivateDataSlotCreateFlagBits" />
  <enum name="RenderingFlagBits">
    <member name="eContentsSecondaryCommandBuffers" />
    <member name="eSuspending" />
    <member name="eResuming" />
    <member name="eContentsInlineEXT" />
    <member name="eEnableLegacyDitheringEXT" />
  </enum>
  <enum name="SubmitFlagBits">
    <member name="eProtected" />
  </enum>
  <enum name="ToolPurposeFlagBits">
    <member name="eValidation" />
    <member name="eProfiling" />
    <member name="eTracing" />
    <member name="eAdditionalFeatures" />
    <member name="eModifyingFeatures" />
    <member name="eDebugReportingEXT" />
    <member name="eDebugMarkersEXT" />
  </enum>
  <enum name="ColorSpaceKHR">
    <member name="eSrgbNonlinear" />
    <member name="eVkColorspaceSrgbNonlinear" />
    <member name="eDisplayP3NonlinearEXT" />
    <member name="eExtendedSrgbLinearEXT" />
    <member name="eDisplayP3LinearEXT" />
    <member name="eDciP3NonlinearEXT" />
    <member name="eBt709LinearEXT" />
    <member name="eBt709NonlinearEXT" />
    <member name="eBt2020LinearEXT" />
    <member name="eHdr10St2084EXT" />
    <member name="eDolbyvisionEXT" />
    <member name="eHdr10HlgEXT" />
    <member name="eAdobergbLinearEXT" />
    <member name="eAdobergbNonlinearEXT" />
    <member name="ePassThroughEXT" />
    <member name="eExtendedSrgbNonlinearEXT" />
    <member name="eDciP3LinearEXT" />
    <member name="eDisplayNativeAMD" />
  </enum>
  <enum name="CompositeAlphaFlagBitsKHR">
    <member name="eOpaque" />
    <member name="ePreMultiplied" />
    <member name="ePostMultiplied" />
    <member name="eInherit" />
  </enum>
  <enum name="PresentModeKHR">
    <member name="eImmediate" />
    <member name="eMailbox" />
    <member name="eFifo" />
    <member name="eFifoRelaxed" />
    <member name="eSharedDemandRefresh" />
    <member name="eSharedContinuousRefresh" />
  </enum>
  <enum name="SurfaceTransformFlagBitsKHR">
    <member name="eIdentity" />
    <member name="eRotate90" />
    <member name="eRotate180" />
    <member name="eRotate270" />
    <member name="eHorizontalMirror" />
    <member name="eHorizontalMirrorRotate90" />
    <member name="eHorizontalMirrorRotate180" />
    <member name="eHorizontalMirrorRotate270" />
    <member name="eInherit" />
  </enum>
  <enum name="DeviceGroupPresentModeFlagBitsKHR">
    <member name="eLocal" />
    <member name="eRemote" />
    <member name="eSum" />
    <member name="eLocalMultiDevice" />
  </enum>
  <enum name="SwapchainCreateFlagBitsKHR">
    <member name="eSplitInstanceBindRegions" />
    <member name="eProtected" />
    <member name="eMutableFormat" />
    <member name="eDeferredMemoryAllocationEXT" />
  </enum>
  <enum name="DisplayModeCreateFlagBitsKHR" />
  <enum name="DisplayPlaneAlphaFlagBitsKHR">
    <member name="eOpaque" />
    <member name="eGlobal" />
    <member name="ePerPixel" />
    <member name="ePerPixelPremultiplied" />
  </enum>
  <enum name="DisplaySurfaceCreateFlagBitsKHR" />
  <enum name="DebugReportFlagBitsEXT">
    <member name="eInformation" />
    <member name="eWarning" />
    <member name="ePerformanceWarning" />
    <member name="eError" />
    <member name="eDebug" />
  </enum>
  <enum name="DebugReportObjectTypeEXT">
    <member name="eUnknown" />
    <member name="eInstance" />
    <member name="ePhysicalDevice" />
    <member name="eDevice" />
    <member name="eQueue" />
    <member name="eSemaphore" />
    <member name="eCommandBuffer" />
    <member name="eFence" />
    <member name="eDeviceMemory" />
    <member name="eBuffer" />
    <member name="eImage" />
    <member name="eEvent" />
    <member name="eQueryPool" />
    <member name="eBufferView" />
    <member name="eImageView" />
    <member name="eShaderModule" />
    <member name="ePipelineCache" />
    <member name="ePipelineLayout" />
    <member name="eRenderPass" />
    <member name="ePipeline" />
    <member name="eDescriptorSetLayout" />
    <member name="eSampler" />
    <member name="eDescriptorPool" />
    <member name="eDescriptorSet" />
    <member name="eFramebuffer" />
    <member name="eCommandPool" />
    <member name="eSurfaceKHR" />
    <member name="eSwapchainKHR" />
    <member name="eDebugReportCallbackEXT" />
    <member name="eDebugReport" />
    <member name="eDisplayKHR" />
    <member name="eDisplayModeKHR" />
    <member name="eValidationCacheEXT" />
    <member name="eValidationCache" />
    <member name="eSamplerYcbcrConversion" />
    <member name="eDescriptorUpdateTemplate" />
    <member name="eCuModuleNVX" />
    <member name="eCuFunctionNVX" />
    <member name="eDescriptorUpdateTemplateKHR" />
    <member name="eAccelerationStructureKHR" />
    <member name="eSamplerYcbcrConversionKHR" />
    <member name="eAccelerationStructureNV" />
  </enum>
  <enum name="RasterizationOrderAMD">
    <member name="eStrict" />
    <member name="eRelaxed" />
  </enum>
  <enum name="QueryResultStatusKHR">
    <member name="eError" />
    <member name="eNotReady" />
    <member name="eComplete" />
    <member name="eInsufficientBitstreamBufferRange" />
  </enum>
  <enum name="VideoBeginCodingFlagBitsKHR" />
  <enum name="VideoCapabilityFlagBitsKHR">
    <member name="eProtectedContent" />
    <member name="eSeparateReferenceImages" />
  </enum>
  <enum name="VideoChromaSubsamplingFlagBitsKHR">
    <member name="eInvalid" />
    <member name="eMonochrome" />
    <member name="e420" />
    <member name="e422" />
    <member name="e444" />
  </enum>
  <enum name="VideoCodecOperationFlagBitsKHR">
    <member name="eNone" />
    <member name="eEncodeH264" />
    <member name="eEncodeH265" />
    <member name="eDecodeH264" />
    <member name="eDecodeH265" />
  </enum>
  <enum name="VideoCodingControlFlagBitsKHR">
    <member name="eReset" />
    <member name="eEncodeRateControl" />
    <member name="eEncodeQualityLevel" />
  </enum>
  <enum name="VideoComponentBitDepthFlagBitsKHR">
    <member name="eInvalid" />
    <member name="e8" />
    <member name="e10" />
    <member name="e12" />
  </enum>
  <enum name="VideoEndCodingFlagBitsKHR" />
  <enum name="VideoSessionCreateFlagBitsKHR">
    <member name="eProtectedContent" />
    <member name="eAllowEncodeParameterOptimizations" />
    <member name="eInlineQueries" />
  </enum>
  <enum name="VideoSessionParametersCreateFlagBitsKHR" />
  <enum name="VideoDecodeCapabilityFlagBitsKHR">
    <member name="eDpbAndOutputCoincide" />
    <member name="eDpbAndOutputDistinct" />
  </enum>
  <enum name="VideoDecodeFlagBitsKHR" />
  <enum name="VideoDecodeUsageFlagBitsKHR">
    <member name="eDefault" />
    <member name="eTranscoding" />
    <member name="eOffline" />
    <member name="eStreaming" />
  </enum>
  <enum name="PipelineRasterizationStateStreamCreateFlagBitsEXT" />
  <enum name="VideoEncodeH264CapabilityFlagBitsKHR">
    <member name="eHrdCompliance" />
    <member name="ePredictionWeightTableGenerated" />
    <member name="eRowUnalignedSlice" />
    <member name="eDifferentSliceType" />
    <member name="eBFrameInL0List" />
    <member name="eBFrameInL1List" />
    <member name="ePerPictureTypeMinMaxQp" />
    <member name="ePerSliceConstantQp" />
    <member name="eGeneratePrefixNalu" />
  </enum>
  <enum name="VideoEncodeH264RateControlFlagBitsKHR">
    <member name="eAttemptHrdCompliance" />
    <member name="eRegularGop" />
    <member name="eReferencePatternFlat" />
    <member name="eReferencePatternDyadic" />
    <member name="eTemporalLayerPatternDyadic" />
  </enum>
  <enum name="VideoEncodeH264StdFlagBitsKHR">
    <member name="eSeparateColorPlaneFlagSet" />
    <member name="eQpprimeYZeroTransformBypassFlagSet" />
    <member name="eScalingMatrixPresentFlagSet" />
    <member name="eChromaQpIndexOffset" />
    <member name="eSecondChromaQpIndexOffset" />
    <member name="ePicInitQpMinus26" />
    <member name="eWeightedPredFlagSet" />
    <member name="eWeightedBipredIdcExplicit" />
    <member name="eWeightedBipredIdcImplicit" />
    <member name="eTransform8X8ModeFlagSet" />
    <member name="eDirectSpatialMvPredFlagUnset" />
    <member name="eEntropyCodingModeFlagUnset" />
    <member name="eEntropyCodingModeFlagSet" />
    <member name="eDirect8X8InferenceFlagUnset" />
    <member name="eConstrainedIntraPredFlagSet" />
    <member name="eDeblockingFilterDisabled" />
    <member name="eDeblockingFilterEnabled" />
    <member name="eDeblockingFilterPartial" />
    <member name="eSliceQpDelta" />
    <member name="eDifferentSliceQpDelta" />
  </enum>
  <enum name="VideoEncodeH265CapabilityFlagBitsKHR">
    <member name="eHrdCompliance" />
    <member name="ePredictionWeightTableGenerated" />
    <member name="eRowUnalignedSliceSegment" />
    <member name="eDifferentSliceSegmentType" />
    <member name="eBFrameInL0List" />
    <member name="eBFrameInL1List" />
    <member name="ePerPictureTypeMinMaxQp" />
    <member name="ePerSliceSegmentConstantQp" />
    <member name="eMultipleTilesPerSliceSegment" />
    <member name="eMultipleSliceSegmentsPerTile" />
  </enum>
  <enum name="VideoEncodeH265CtbSizeFlagBitsKHR">
    <member name="e16" />
    <member name="e32" />
    <member name="e64" />
  </enum>
  <enum name="VideoEncodeH265RateControlFlagBitsKHR">
    <member name="eAttemptHrdCompliance" />
    <member name="eRegularGop" />
    <member name="eReferencePatternFlat" />
    <member name="eReferencePatternDyadic" />
    <member name="eTemporalSubLayerPatternDyadic" />
  </enum>
  <enum name="VideoEncodeH265StdFlagBitsKHR">
    <member name="eSeparateColorPlaneFlagSet" />
    <member name="eSampleAdaptiveOffsetEnabledFlagSet" />
    <member name="eScalingListDataPresentFlagSet" />
    <member name="ePcmEnabledFlagSet" />
    <member name="eSpsTemporalMvpEnabledFlagSet" />
    <member name="eInitQpMinus26" />
    <member name="eWeightedPredFlagSet" />
    <member name="eWeightedBipredFlagSet" />
    <member name="eLog2ParallelMergeLevelMinus2" />
    <member name="eSignDataHidingEnabledFlagSet" />
    <member name="eTransformSkipEnabledFlagSet" />
    <member name="eTransformSkipEnabledFlagUnset" />
    <member name="ePpsSliceChromaQpOffsetsPresentFlagSet" />
    <member name="eTransquantBypassEnabledFlagSet" />
    <member name="eConstrainedIntraPredFlagSet" />
    <member name="eEntropyCodingSyncEnabledFlagSet" />
    <member name="eDeblockingFilterOverrideEnabledFlagSet" />
    <member name="eDependentSliceSegmentsEnabledFlagSet" />
    <member name="eDependentSliceSegmentFlagSet" />
    <member name="eSliceQpDelta" />
    <member name="eDifferentSliceQpDelta" />
  </enum>
  <enum name="VideoEncodeH265TransformBlockSizeFlagBitsKHR">
    <member name="e4" />
    <member name="e8" />
    <member name="e16" />
    <member name="e32" />
  </enum>
  <enum name="VideoDecodeH264PictureLayoutFlagBitsKHR">
    <member name="eProgressive" />
    <member name="eInterlacedInterleavedLines" />
    <member name="eInterlacedSeparatePlanes" />
  </enum>
  <enum name="ShaderInfoTypeAMD">
    <member name="eStatistics" />
    <member name="eBinary" />
    <member name="eDisassembly" />
  </enum>
  <enum name="ExternalMemoryFeatureFlagBitsNV">
    <member name="eDedicatedOnly" />
    <member name="eExportable" />
    <member name="eImportable" />
  </enum>
  <enum name="ExternalMemoryHandleTypeFlagBitsNV">
    <member name="eOpaqueWin32" />
    <member name="eOpaqueWin32Kmt" />
    <member name="eD3D11Image" />
    <member name="eD3D11ImageKmt" />
  </enum>
  <enum name="ValidationCheckEXT">
    <member name="eAll" />
    <member name="eShaders" />
  </enum>
  <enum name="PipelineRobustnessBufferBehaviorEXT">
    <member name="eDeviceDefault" />
    <member name="eDisabled" />
    <member name="eRobustBufferAccess" />
    <member name="eRobustBufferAccess2" />
  </enum>
  <enum name="PipelineRobustnessImageBehaviorEXT">
    <member name="eDeviceDefault" />
    <member name="eDisabled" />
    <member name="eRobustImageAccess" />
    <member name="eRobustImageAccess2" />
  </enum>
  <enum name="ConditionalRenderingFlagBitsEXT">
    <member name="eInverted" />
  </enum>
  <enum name="SurfaceCounterFlagBitsEXT">
    <member name="eVblank" />
  </enum>
  <enum name="DeviceEventTypeEXT">
    <member name="eDisplayHotplug" />
  </enum>
  <enum name="DisplayEventTypeEXT">
    <member name="eFirstPixelOut" />
  </enum>
  <enum name="DisplayPowerStateEXT">
    <member name="eOff" />
    <member name="eSuspend" />
    <member name="eOn" />
  </enum>
  <enum name="PipelineViewportSwizzleStateCreateFlagBitsNV" />
  <enum name="ViewportCoordinateSwizzleNV">
    <member name="ePositiveX" />
    <member name="eNegativeX" />
    <member name="ePositiveY" />
    <member name="eNegativeY" />
    <member name="ePositiveZ" />
    <member name="eNegativeZ" />
    <member name="ePositiveW" />
    <member name="eNegativeW" />
  </enum>
  <enum name="DiscardRectangleModeEXT">
    <member name="eInclusive" />
    <member name="eExclusive" />
  </enum>
  <enum name="PipelineDiscardRectangleStateCreateFlagBitsEXT" />
  <enum name="ConservativeRasterizationModeEXT">
    <member name="eDisabled" />
    <member name="eOverestimate" />
    <member name="eUnderestimate" />
  </enum>
  <enum name="PipelineRasterizationConservativeStateCreateFlagBitsEXT" />
  <enum name="PipelineRasterizationDepthClipStateCreateFlagBitsEXT" />
  <enum name="AcquireProfilingLockFlagBitsKHR" />
  <enum name="PerformanceCounterDescriptionFlagBitsKHR">
    <member name="ePerformanceImpacting" />
    <member name="eConcurrentlyImpacted" />
  </enum>
  <enum name="PerformanceCounterScopeKHR">
    <member name="eCommandBuffer" />
    <member name="eRenderPass" />
    <member name="eCommand" />
    <member name="eVkQueryScopeCommandBuffer" />
    <member name="eVkQueryScopeRenderPass" />
    <member name="eVkQueryScopeCommand" />
  </enum>
  <enum name="PerformanceCounterStorageKHR">
    <member name="eInt32" />
    <member name="eInt64" />
    <member name="eUint32" />
    <member name="eUint64" />
    <member name="eFloat32" />
    <member name="eFloat64" />
  </enum>
  <enum name="PerformanceCounterUnitKHR">
    <member name="eGeneric" />
    <member name="ePercentage" />
    <member name="eNanoseconds" />
    <member name="eBytes" />
    <member name="eBytesPerSecond" />
    <member name="eKelvin" />
    <member name="eWatts" />
    <member name="eVolts" />
    <member name="eAmps" />
    <member name="eHertz" />
    <member name="eCycles" />
  </enum>
  <enum name="DebugUtilsMessageSeverityFlagBitsEXT">
    <member name="eVerbose" />
    <member name="eInfo" />
    <member name="eWarning" />
    <member name="eError" />
  </enum>
  <enum name="DebugUtilsMessageTypeFlagBitsEXT">
    <member name="eGeneral" />
    <member name="eValidation" />
    <member name="ePerformance" />
    <member name="eDeviceAddressBinding" />
  </enum>
  <enum name="DebugUtilsMessengerCallbackDataFlagBitsEXT" />
  <enum name="DebugUtilsMessengerCreateFlagBitsEXT" />
  <enum name="BlendOverlapEXT">
    <member name="eUncorrelated" />
    <member name="eDisjoint" />
    <member name="eConjoint" />
  </enum>
  <enum name="PipelineCoverageToColorStateCreateFlagBitsNV" />
  <enum name="AccelerationStructureBuildTypeKHR">
    <member name="eHost" />
    <member name="eDevice" />
    <member name="eHostOrDevice" />
  </enum>
  <enum name="AccelerationStructureCompatibilityKHR">
    <member name="eCompatible" />
    <member name="eIncompatible" />
  </enum>
  <enum name="AccelerationStructureCreateFlagBitsKHR">
    <member name="eDeviceAddressCaptureReplay" />
    <member name="eDescriptorBufferCaptureReplayEXT" />
    <member name="eMotionNV" />
  </enum>
  <enum name="AccelerationStructureTypeKHR">
    <member name="eTopLevel" />
    <member name="eBottomLevel" />
    <member name="eGeneric" />
  </enum>
  <enum name="BuildAccelerationStructureFlagBitsKHR">
    <member name="eAllowUpdate" />
    <member name="eAllowCompaction" />
    <member name="ePreferFastTrace" />
    <member name="ePreferFastBuild" />
    <member name="eLowMemory" />
    <member name="eMotionNV" />
    <member name="eAllowOpacityMicromapUpdateEXT" />
    <member name="eAllowDisableOpacityMicromapsEXT" />
    <member name="eAllowOpacityMicromapDataUpdateEXT" />
    <member name="eAllowDataAccess" />
  </enum>
  <enum name="BuildAccelerationStructureModeKHR">
    <member name="eBuild" />
    <member name="eUpdate" />
  </enum>
  <enum name="CopyAccelerationStructureModeKHR">
    <member name="eClone" />
    <member name="eCompact" />
    <member name="eSerialize" />
    <member name="eDeserialize" />
  </enum>
  <enum name="GeometryFlagBitsKHR">
    <member name="eOpaque" />
    <member name="eNoDuplicateAnyHitInvocation" />
  </enum>
  <enum name="GeometryInstanceFlagBitsKHR">
    <member name="eTriangleFacingCullDisable" />
    <member name="eTriangleFlipFacing" />
    <member name="eForceOpaque" />
    <member name="eForceNoOpaque" />
    <member name="eTriangleFrontCounterclockwiseKHR" />
    <member name="eTriangleCullDisable" />
    <member name="eTriangleFrontCounterclockwise" />
    <member name="eForceOpacityMicromap2StateEXT" />
    <member name="eDisableOpacityMicromapsEXT" />
  </enum>
  <enum name="GeometryTypeKHR">
    <member name="eTriangles" />
    <member name="eAabbs" />
    <member name="eInstances" />
  </enum>
  <enum name="RayTracingShaderGroupTypeKHR">
    <member name="eGeneral" />
    <member name="eTrianglesHitGroup" />
    <member name="eProceduralHitGroup" />
  </enum>
  <enum name="ShaderGroupShaderKHR">
    <member name="eGeneral" />
    <member name="eClosestHit" />
    <member name="eAnyHit" />
    <member name="eIntersection" />
  </enum>
  <enum name="CoverageModulationModeNV">
    <member name="eNone" />
    <member name="eRgb" />
    <member name="eAlpha" />
    <member name="eRgba" />
  </enum>
  <enum name="PipelineCoverageModulationStateCreateFlagBitsNV" />
  <enum name="ValidationCacheCreateFlagBitsEXT" />
  <enum name="ValidationCacheHeaderVersionEXT">
    <member name="eOne" />
  </enum>
  <enum name="CoarseSampleOrderTypeNV">
    <member name="eDefault" />
    <member name="eCustom" />
    <member name="ePixelMajor" />
    <member name="eSampleMajor" />
  </enum>
  <enum name="ShadingRatePaletteEntryNV">
    <member name="eNoInvocations" />
    <member name="e16InvocationsPerPixel" />
    <member name="e8InvocationsPerPixel" />
    <member name="e4InvocationsPerPixel" />
    <member name="e2InvocationsPerPixel" />
    <member name="e1InvocationPerPixel" />
    <member name="e1InvocationPer2X1Pixels" />
    <member name="e1InvocationPer1X2Pixels" />
    <member name="e1InvocationPer2X2Pixels" />
    <member name="e1InvocationPer4X2Pixels" />
    <member name="e1InvocationPer2X4Pixels" />
    <member name="e1InvocationPer4X4Pixels" />
  </enum>
  <enum name="AccelerationStructureMemoryRequirementsTypeNV">
    <member name="eObject" />
    <member name="eBuildScratch" />
    <member name="eUpdateScratch" />
  </enum>
  <enum name="PipelineCompilerControlFlagBitsAMD" />
  <enum name="QueueGlobalPriorityKHR">
    <member name="eLow" />
    <member name="eMedium" />
    <member name="eHigh" />
    <member name="eRealtime" />
  </enum>
  <enum name="MemoryOverallocationBehaviorAMD">
    <member name="eDefault" />
    <member name="eAllowed" />
    <member name="eDisallowed" />
  </enum>
  <enum name="PerformanceConfigurationTypeINTEL">
    <member name="eCommandQueueMetricsDiscoveryActivated" />
  </enum>
  <enum name="PerformanceOverrideTypeINTEL">
    <member name="eNullHardware" />
    <member name="eFlushGpuCaches" />
  </enum>
  <enum name="PerformanceParameterTypeINTEL">
    <member name="eHwCountersSupported" />
    <member name="eStreamMarkerValidBits" />
  </enum>
  <enum name="PerformanceValueTypeINTEL">
    <member name="eUint32" />
    <member name="eUint64" />
    <member name="eFloat" />
    <member name="eBool" />
    <member name="eString" />
  </enum>
  <enum name="QueryPoolSamplingModeINTEL">
    <member name="eManual" />
  </enum>
  <enum name="FragmentShadingRateCombinerOpKHR">
    <member name="eKeep" />
    <member name="eReplace" />
    <member name="eMin" />
    <member name="eMax" />
    <member name="eMul" />
  </enum>
  <enum name="ShaderCorePropertiesFlagBitsAMD" />
  <enum name="ValidationFeatureDisableEXT">
    <member name="eAll" />
    <member name="eShaders" />
    <member name="eThreadSafety" />
    <member name="eApiParameters" />
    <member name="eObjectLifetimes" />
    <member name="eCoreChecks" />
    <member name="eUniqueHandles" />
    <member name="eShaderValidationCache" />
  </enum>
  <enum name="ValidationFeatureEnableEXT">
    <member name="eGpuAssisted" />
    <member name="eGpuAssistedReserveBindingSlot" />
    <member name="eBestPractices" />
    <member name="eDebugPrintf" />
    <member name="eSynchronizationValidation" />
  </enum>
  <enum name="CoverageReductionModeNV">
    <member name="eMerge" />
    <member name="eTruncate" />
  </enum>
  <enum name="PipelineCoverageReductionStateCreateFlagBitsNV" />
  <enum name="ProvokingVertexModeEXT">
    <member name="eFirstVertex" />
    <member name="eLastVertex" />
  </enum>
  <enum name="HeadlessSurfaceCreateFlagBitsEXT" />
  <enum name="LineRasterizationModeEXT">
    <member name="eDefault" />
    <member name="eRectangular" />
    <member name="eBresenham" />
    <member name="eRectangularSmooth" />
  </enum>
  <enum name="PipelineExecutableStatisticFormatKHR">
    <member name="eBool32" />
    <member name="eInt64" />
    <member name="eUint64" />
    <member name="eFloat64" />
  </enum>
  <enum name="HostImageCopyFlagBitsEXT">
    <member name="eMemcpy" />
  </enum>
  <enum name="MemoryUnmapFlagBitsKHR" />
  <enum name="PresentGravityFlagBitsEXT">
    <member name="eMin" />
    <member name="eMax" />
    <member name="eCentered" />
  </enum>
  <enum name="PresentScalingFlagBitsEXT">
    <member name="eOneToOne" />
    <member name="eAspectRatioStretch" />
    <member name="eStretch" />
  </enum>
  <enum name="IndirectCommandsLayoutUsageFlagBitsNV">
    <member name="eExplicitPreprocess" />
    <member name="eIndexedSequences" />
    <member name="eUnorderedSequences" />
  </enum>
  <enum name="IndirectCommandsTokenTypeNV">
    <member name="eShaderGroup" />
    <member name="eStateFlags" />
    <member name="eIndexBuffer" />
    <member name="eVertexBuffer" />
    <member name="ePushConstant" />
    <member name="eDrawIndexed" />
    <member name="eDraw" />
    <member name="eDrawTasks" />
    <member name="eDrawMeshTasks" />
    <member name="ePipeline" />
    <member name="eDispatch" />
  </enum>
  <enum name="IndirectStateFlagBitsNV">
    <member name="eFlagFrontface" />
  </enum>
  <enum name="DepthBiasRepresentationEXT">
    <member name="eLeastRepresentableValueFormat" />
    <member name="eLeastRepresentableValueForceUnorm" />
    <member name="eFloat" />
  </enum>
  <enum name="DeviceMemoryReportEventTypeEXT">
    <member name="eAllocate" />
    <member name="eFree" />
    <member name="eImport" />
    <member name="eUnimport" />
    <member name="eAllocationFailed" />
  </enum>
  <enum name="DeviceMemoryReportFlagBitsEXT" />
  <enum name="VideoEncodeCapabilityFlagBitsKHR">
    <member name="ePrecedingExternallyEncodedBytes" />
    <member name="eInsufficientstreamBufferRangeDetectionBit" />
  </enum>
  <enum name="VideoEncodeContentFlagBitsKHR">
    <member name="eDefault" />
    <member name="eCamera" />
    <member name="eDesktop" />
    <member name="eRendered" />
  </enum>
  <enum name="VideoEncodeFeedbackFlagBitsKHR">
    <member name="estreamBufferOffsetBit" />
    <member name="estreamBytesWrittenBit" />
    <member name="estreamHasOverridesBit" />
  </enum>
  <enum name="VideoEncodeFlagBitsKHR" />
  <enum name="VideoEncodeRateControlFlagBitsKHR" />
  <enum name="VideoEncodeRateControlModeFlagBitsKHR">
    <member name="eDefault" />
    <member name="eDisabled" />
    <member name="eCbr" />
    <member name="eVbr" />
  </enum>
  <enum name="VideoEncodeTuningModeKHR">
    <member name="eDefault" />
    <member name="eHighQuality" />
    <member name="eLowLatency" />
    <member name="eUltraLowLatency" />
    <member name="eLossless" />
  </enum>
  <enum name="VideoEncodeUsageFlagBitsKHR">
    <member name="eDefault" />
    <member name="eTranscoding" />
    <member name="eStreaming" />
    <member name="eRecording" />
    <member name="eConferencing" />
  </enum>
  <enum name="DeviceDiagnosticsConfigFlagBitsNV">
    <member name="eEnableShaderDebugInfo" />
    <member name="eEnableResourceTracking" />
    <member name="eEnableAutomaticCheckpoints" />
    <member name="eEnableShaderErrorReporting" />
  </enum>
  <enum name="GraphicsPipelineLibraryFlagBitsEXT">
    <member name="eVertexInputInterface" />
    <member name="ePreRasterizationShaders" />
    <member name="eFragmentShader" />
    <member name="eFragmentOutputInterface" />
  </enum>
  <enum name="FragmentShadingRateNV">
    <member name="e1InvocationPerPixel" />
    <member name="e1InvocationPer1X2Pixels" />
    <member name="e1InvocationPer2X1Pixels" />
    <member name="e1InvocationPer2X2Pixels" />
    <member name="e1InvocationPer2X4Pixels" />
    <member name="e1InvocationPer4X2Pixels" />
    <member name="e1InvocationPer4X4Pixels" />
    <member name="e2InvocationsPerPixel" />
    <member name="e4InvocationsPerPixel" />
    <member name="e8InvocationsPerPixel" />
    <member name="e16InvocationsPerPixel" />
    <member name="eNoInvocations" />
  </enum>
  <enum name="FragmentShadingRateTypeNV">
    <member name="eFragmentSize" />
    <member name="eEnums" />
  </enum>
  <enum name="AccelerationStructureMotionInfoFlagBitsNV" />
  <enum name="AccelerationStructureMotionInstanceFlagBitsNV" />
  <enum name="AccelerationStructureMotionInstanceTypeNV">
    <member name="eStatic" />
    <member name="eMatrixMotion" />
    <member name="eSrtMotion" />
  </enum>
  <enum name="ImageCompressionFixedRateFlagBitsEXT">
    <member name="eNone" />
    <member name="e1Bpc" />
    <member name="e2Bpc" />
    <member name="e3Bpc" />
    <member name="e4Bpc" />
    <member name="e5Bpc" />
    <member name="e6Bpc" />
    <member name="e7Bpc" />
    <member name="e8Bpc" />
    <member name="e9Bpc" />
    <member name="e10Bpc" />
    <member name="e11Bpc" />
    <member name="e12Bpc" />
    <member name="e13Bpc" />
    <member name="e14Bpc" />
    <member name="e15Bpc" />
    <member name="e16Bpc" />
    <member name="e17Bpc" />
    <member name="e18Bpc" />
    <member name="e19Bpc" />
    <member name="e20Bpc" />
    <member name="e21Bpc" />
    <member name="e22Bpc" />
    <member name="e23Bpc" />
    <member name="e24Bpc" />
  </enum>
  <enum name="ImageCompressionFlagBitsEXT">
    <member name="eDefault" />
    <member name="eFixedRateDefault" />
    <member name="eFixedRateExplicit" />
    <member name="eDisabled" />
  </enum>
  <enum name="DeviceFaultAddressTypeEXT">
    <member name="eNone" />
    <member name="eReadInvalid" />
    <member name="eWriteInvalid" />
    <member name="eExecuteInvalid" />
    <member name="eInstructionPointerUnknown" />
    <member name="eInstructionPointerInvalid" />
    <member name="eInstructionPointerFault" />
  </enum>
  <enum name="DeviceFaultVendorBinaryHeaderVersionEXT">
    <member name="eOne" />
  </enum>
  <enum name="DeviceAddressBindingFlagBitsEXT">
    <member name="eInternalObject" />
  </enum>
  <enum name="DeviceAddressBindingTypeEXT">
    <member name="eBind" />
    <member name="eUnbind" />
  </enum>
  <enum name="FrameBoundaryFlagBitsEXT">
    <member name="eFrameEnd" />
  </enum>
  <enum name="BuildMicromapFlagBitsEXT">
    <member name="ePreferFastTrace" />
    <member name="ePreferFastBuild" />
    <member name="eAllowCompaction" />
  </enum>
  <enum name="BuildMicromapModeEXT">
    <member name="eBuild" />
  </enum>
  <enum name="CopyMicromapModeEXT">
    <member name="eClone" />
    <member name="eSerialize" />
    <member name="eDeserialize" />
    <member name="eCompact" />
  </enum>
  <enum name="MicromapCreateFlagBitsEXT">
    <member name="eDeviceAddressCaptureReplay" />
  </enum>
  <enum name="MicromapTypeEXT">
    <member name="eOpacityMicromap" />
  </enum>
  <enum name="OpacityMicromapFormatEXT">
    <member name="e2State" />
    <member name="e4State" />
  </enum>
  <enum name="OpacityMicromapSpecialIndexEXT">
    <member name="eFullyTransparent" />
    <member name="eFullyOpaque" />
    <member name="eFullyUnknownTransparent" />
    <member name="eFullyUnknownOpaque" />
  </enum>
  <enum name="PhysicalDeviceSchedulingControlsFlagBitsARM">
    <member name="eShaderCoreCount" />
  </enum>
  <enum name="MemoryDecompressionMethodFlagBitsNV">
    <member name="eGdeflate10" />
  </enum>
  <enum name="SubpassMergeStatusEXT">
    <member name="eMerged" />
    <member name="eDisallowed" />
    <member name="eNotMergedSideEffects" />
    <member name="eNotMergedSamplesMismatch" />
    <member name="eNotMergedViewsMismatch" />
    <member name="eNotMergedAliasing" />
    <member name="eNotMergedDependencies" />
    <member name="eNotMergedIncompatibleInputAttachment" />
    <member name="eNotMergedTooManyAttachments" />
    <member name="eNotMergedInsufficientStorage" />
    <member name="eNotMergedDepthStencilCount" />
    <member name="eNotMergedResolveAttachmentReuse" />
    <member name="eNotMergedSingleSubpass" />
    <member name="eNotMergedUnspecified" />
  </enum>
  <enum name="DirectDriverLoadingFlagBitsLUNARG" />
  <enum name="DirectDriverLoadingModeLUNARG">
    <member name="eExclusive" />
    <member name="eInclusive" />
  </enum>
  <enum name="OpticalFlowExecuteFlagBitsNV">
    <member name="eDisableTemporalHints" />
  </enum>
  <enum name="OpticalFlowGridSizeFlagBitsNV">
    <member name="eUnknown" />
    <member name="e1X1" />
    <member name="e2X2" />
    <member name="e4X4" />
    <member name="e8X8" />
  </enum>
  <enum name="OpticalFlowPerformanceLevelNV">
    <member name="eUnknown" />
    <member name="eSlow" />
    <member name="eMedium" />
    <member name="eFast" />
  </enum>
  <enum name="OpticalFlowSessionBindingPointNV">
    <member name="eUnknown" />
    <member name="eInput" />
    <member name="eReference" />
    <member name="eHint" />
    <member name="eFlowVector" />
    <member name="eBackwardFlowVector" />
    <member name="eCost" />
    <member name="eBackwardCost" />
    <member name="eGlobalFlow" />
  </enum>
  <enum name="OpticalFlowSessionCreateFlagBitsNV">
    <member name="eEnableHint" />
    <member name="eEnableCost" />
    <member name="eEnableGlobalFlow" />
    <member name="eAllowRegions" />
    <member name="eBothDirections" />
  </enum>
  <enum name="OpticalFlowUsageFlagBitsNV">
    <member name="eUnknown" />
    <member name="eInput" />
    <member name="eOutput" />
    <member name="eHint" />
    <member name="eCost" />
    <member name="eGlobalFlow" />
  </enum>
  <enum name="BufferUsageFlagBits2KHR">
    <member name="eTransferSrc" />
    <member name="eTransferDst" />
    <member name="eUniformTexelBuffer" />
    <member name="eStorageTexelBuffer" />
    <member name="eUniformBuffer" />
    <member name="eStorageBuffer" />
    <member name="eIndexBuffer" />
    <member name="eVertexBuffer" />
    <member name="eIndirectBuffer" />
    <member name="eConditionalRenderingEXT" />
    <member name="eShaderBindingTable" />
    <member name="eRayTracingNV" />
    <member name="eTransformFeedbackBufferEXT" />
    <member name="eTransformFeedbackCounterBufferEXT" />
    <member name="eVideoDecodeSrc" />
    <member name="eVideoDecodeDst" />
    <member name="eShaderDeviceAddress" />
    <member name="eAccelerationStructureBuildInputReadOnly" />
    <member name="eAccelerationStructureStorage" />
    <member name="eSamplerDescriptorBufferEXT" />
    <member name="eResourceDescriptorBufferEXT" />
    <member name="ePushDescriptorsDescriptorBufferEXT" />
    <member name="eMicromapBuildInputReadOnlyEXT" />
    <member name="eMicromapStorageEXT" />
  </enum>
  <enum name="PipelineCreateFlagBits2KHR">
    <member name="eDisableOptimization" />
    <member name="eAllowDerivatives" />
    <member name="eDerivative" />
    <member name="eViewIndexFromDeviceIndex" />
    <member name="eDispatchBase" />
    <member name="eDeferCompileNV" />
    <member name="eCaptureStatistics" />
    <member name="eCaptureInternalRepresentations" />
    <member name="eFailOnPipelineCompileRequired" />
    <member name="eEarlyReturnOnFailure" />
    <member name="eLinkTimeOptimizationEXT" />
    <member name="eRetainLinkTimeOptimizationInfoEXT" />
    <member name="eLibrary" />
    <member name="eRayTracingSkipTriangles" />
    <member name="eRayTracingSkipAabbs" />
    <member name="eRayTracingNoNullAnyHitShaders" />
    <member name="eRayTracingNoNullClosestHitShaders" />
    <member name="eRayTracingNoNullMissShaders" />
    <member name="eRayTracingNoNullIntersectionShaders" />
    <member name="eRayTracingShaderGroupHandleCaptureReplay" />
    <member name="eIndirectBindableNV" />
    <member name="eRayTracingAllowMotionNV" />
    <member name="eRenderingFragmentShadingRateAttachment" />
    <member name="eRenderingFragmentDensityMapAttachmentEXT" />
    <member name="eRayTracingOpacityMicromapEXT" />
    <member name="eColorAttachmentFeedbackLoopEXT" />
    <member name="eDepthStencilAttachmentFeedbackLoopEXT" />
    <member name="eNoProtectedAccessEXT" />
    <member name="eProtectedAccessOnlyEXT" />
    <member name="eRayTracingDisplacementMicromapNV" />
    <member name="eDescriptorBufferEXT" />
  </enum>
  <enum name="ShaderCodeTypeEXT">
    <member name="eBinary" />
    <member name="eSpirv" />
  </enum>
  <enum name="ShaderCreateFlagBitsEXT">
    <member name="eLinkStage" />
    <member name="eAllowVaryingSubgroupSize" />
    <member name="eRequireFullSubgroups" />
    <member name="eNoTaskShader" />
    <member name="eDispatchBase" />
    <member name="eFragmentShadingRateAttachment" />
    <member name="eFragmentDensityMapAttachment" />
  </enum>
  <enum name="RayTracingInvocationReorderModeNV">
    <member name="eNone" />
    <member name="eReorder" />
  </enum>
  <enum name="LayerSettingTypeEXT">
    <member name="eBool32" />
    <member name="eInt32" />
    <member name="eInt64" />
    <member name="eUint32" />
    <member name="eUint64" />
    <member name="eFloat32" />
    <member name="eFloat64" />
    <member name="eString" />
  </enum>
  <enum name="LatencyMarkerNV">
    <member name="eSimulationStart" />
    <member name="eSimulationEnd" />
    <member name="eRendersubmitStart" />
    <member name="eRendersubmitEnd" />
    <member name="ePresentStart" />
    <member name="ePresentEnd" />
    <member name="eInputSample" />
    <member name="eTriggerFlash" />
    <member name="eOutOfBandRendersubmitStart" />
    <member name="eOutOfBandRendersubmitEnd" />
    <member name="eOutOfBandPresentStart" />
    <member name="eOutOfBandPresentEnd" />
  </enum>
  <enum name="OutOfBandQueueTypeNV">
    <member name="eRender" />
    <member name="ePresent" />
  </enum>
  <enum name="ComponentTypeKHR">
    <member name="eFloat16" />
    <member name="eFloat32" />
    <member name="eFloat64" />
    <member name="eSint8" />
    <member name="eSint16" />
    <member name="eSint32" />
    <member name="eSint64" />
    <member name="eUint8" />
    <member name="eUint16" />
    <member name="eUint32" />
    <member name="eUint64" />
  </enum>
  <enum name="ScopeKHR">
    <member name="eDevice" />
    <member name="eWorkgroup" />
    <member name="eSubgroup" />
    <member name="eQueueFamily" />
  </enum>
  <enum name="BlockMatchWindowCompareModeQCOM">
    <member name="eMin" />
    <member name="eMax" />
  </enum>
  <enum name="CubicFilterWeightsQCOM">
    <member name="eCatmullRom" />
    <member name="eZeroTangentCardinal" />
    <member name="eBSpline" />
    <member name="eMitchellNetravali" />
  </enum>
  <enum name="LayeredDriverUnderlyingApiMSFT">
    <member name="eNone" />
    <member name="eD3D12" />
  </enum>
  <enum name="TimeDomainKHR">
    <member name="eDevice" />
    <member name="eClockMonotonic" />
    <member name="eClockMonotonicRaw" />
    <member name="eQueryPerformanceCounter" />
  </enum>
  <constant name="AttachmentUnused" type="const uint32_t" />
  <constant name="LodClampNone" type="const float" />
  <constant name="MaxDescriptionSize" type="const uint32_t" />
  <constant name="MaxExtensionNameSize" type="const uint32_t" />
  <constant name="MaxMemoryHeaps" type="const uint32_t" />
  <constant name="MaxMemoryTypes" type="const uint32_t" />
  <constant name="MaxPhysicalDeviceNameSize" type="const uint32_t" />
  <constant name="QueueFamilyIgnored" type="const uint32_t" />
  <constant name="RemainingArrayLayers" type="const uint32_t" />
  <constant name="RemainingMipLevels" type="const uint32_t" />
  <constant name="SubpassExternal" type="const uint32_t" />
  <constant name="UuidSize" type="const uint32_t" />
  <constant name="WholeSize" type="const uint64_t" />
  <constant name="LuidSize" type="const uint32_t" />
  <constant name="MaxDeviceGroupSize" type="const uint32_t" />
  <constant name="QueueFamilyExternal" type="const uint32_t" />
  <constant name="MaxDriverInfoSize" type="const uint32_t" />
  <constant name="MaxDriverNameSize" type="const uint32_t" />
  <constant name="KHRSurfaceExtensionName" type="const char *const" />
  <constant name="KHRSurfaceSpecVersion" type="const int" />
  <constant name="KHRSwapchainExtensionName" type="const char *const" />
  <constant name="KHRSwapchainSpecVersion" type="const int" />
  <constant name="KHRDisplayExtensionName" type="const char *const" />
  <constant name="KHRDisplaySpecVersion" type="const int" />
  <constant name="KHRDisplaySwapchainExtensionName" type="const char *const" />
  <constant name="KHRDisplaySwapchainSpecVersion" type="const int" />
  <constant name="EXTDebugReportExtensionName" type="const char *const" />
  <constant name="EXTDebugReportSpecVersion" type="const int" />
  <constant name="NVGlslShaderExtensionName" type="const char *const" />
  <constant name="NVGlslShaderSpecVersion" type="const int" />
  <constant name="EXTDepthRangeUnrestrictedExtensionName" type="const char *const" />
  <constant name="EXTDepthRangeUnrestrictedSpecVersion" type="const int" />
  <constant name="KHRSamplerMirrorClampToEdgeExtensionName" type="const char *const" />
  <constant name="KHRSamplerMirrorClampToEdgeSpecVersion" type="const int" />
  <constant name="IMGFilterCubicExtensionName" type="const char *const" />
  <constant name="IMGFilterCubicSpecVersion" type="const int" />
  <constant name="AMDRasterizationOrderExtensionName" type="const char *const" />
  <constant name="AMDRasterizationOrderSpecVersion" type="const int" />
  <constant name="AMDShaderTrinaryMinmaxExtensionName" type="const char *const" />
  <constant name="AMDShaderTrinaryMinmaxSpecVersion" type="const int" />
  <constant name="AMDShaderExplicitVertexParameterExtensionName" type="const char *const" />
  <constant name="AMDShaderExplicitVertexParameterSpecVersion" type="const int" />
  <constant name="EXTDebugMarkerExtensionName" type="const char *const" />
  <constant name="EXTDebugMarkerSpecVersion" type="const int" />
  <constant name="KHRVideoQueueExtensionName" type="const char *const" />
  <constant name="KHRVideoQueueSpecVersion" type="const int" />
  <constant name="KHRVideoDecodeQueueExtensionName" type="const char *const" />
  <constant name="KHRVideoDecodeQueueSpecVersion" type="const int" />
  <constant name="AMDGcnShaderExtensionName" type="const char *const" />
  <constant name="AMDGcnShaderSpecVersion" type="const int" />
  <constant name="NVDedicatedAllocationExtensionName" type="const char *const" />
  <constant name="NVDedicatedAllocationSpecVersion" type="const int" />
  <constant name="EXTTransformFeedbackExtensionName" type="const char *const" />
  <constant name="EXTTransformFeedbackSpecVersion" type="const int" />
  <constant name="NVXBinaryImportExtensionName" type="const char *const" />
  <constant name="NVXBinaryImportSpecVersion" type="const int" />
  <constant name="NVXImageViewHandleExtensionName" type="const char *const" />
  <constant name="NVXImageViewHandleSpecVersion" type="const int" />
  <constant name="AMDDrawIndirectCountExtensionName" type="const char *const" />
  <constant name="AMDDrawIndirectCountSpecVersion" type="const int" />
  <constant name="AMDNegativeViewportHeightExtensionName" type="const char *const" />
  <constant name="AMDNegativeViewportHeightSpecVersion" type="const int" />
  <constant name="AMDGpuShaderHalfFloatExtensionName" type="const char *const" />
  <constant name="AMDGpuShaderHalfFloatSpecVersion" type="const int" />
  <constant name="AMDShaderBallotExtensionName" type="const char *const" />
  <constant name="AMDShaderBallotSpecVersion" type="const int" />
  <constant name="KHRVideoEncodeH264ExtensionName" type="const char *const" />
  <constant name="KHRVideoEncodeH264SpecVersion" type="const int" />
  <constant name="KHRVideoEncodeH265ExtensionName" type="const char *const" />
  <constant name="KHRVideoEncodeH265SpecVersion" type="const int" />
  <constant name="KHRVideoDecodeH264ExtensionName" type="const char *const" />
  <constant name="KHRVideoDecodeH264SpecVersion" type="const int" />
  <constant name="AMDTextureGatherBiasLodExtensionName" type="const char *const" />
  <constant name="AMDTextureGatherBiasLodSpecVersion" type="const int" />
  <constant name="AMDShaderInfoExtensionName" type="const char *const" />
  <constant name="AMDShaderInfoSpecVersion" type="const int" />
  <constant name="KHRDynamicRenderingExtensionName" type="const char *const" />
  <constant name="KHRDynamicRenderingSpecVersion" type="const int" />
  <constant name="AMDShaderImageLoadStoreLodExtensionName" type="const char *const" />
  <constant name="AMDShaderImageLoadStoreLodSpecVersion" type="const int" />
  <constant name="NVCornerSampledImageExtensionName" type="const char *const" />
  <constant name="NVCornerSampledImageSpecVersion" type="const int" />
  <constant name="KHRMultiviewExtensionName" type="const char *const" />
  <constant name="KHRMultiviewSpecVersion" type="const int" />
  <constant name="IMGFormatPvrtcExtensionName" type="const char *const" />
  <constant name="IMGFormatPvrtcSpecVersion" type="const int" />
  <constant name="NVExternalMemoryCapabilitiesExtensionName" type="const char *const" />
  <constant name="NVExternalMemoryCapabilitiesSpecVersion" type="const int" />
  <constant name="NVExternalMemoryExtensionName" type="const char *const" />
  <constant name="NVExternalMemorySpecVersion" type="const int" />
  <constant name="KHRGetPhysicalDeviceProperties2ExtensionName" type="const char *const" />
  <constant name="KHRGetPhysicalDeviceProperties2SpecVersion" type="const int" />
  <constant name="KHRDeviceGroupExtensionName" type="const char *const" />
  <constant name="KHRDeviceGroupSpecVersion" type="const int" />
  <constant name="EXTValidationFlagsExtensionName" type="const char *const" />
  <constant name="EXTValidationFlagsSpecVersion" type="const int" />
  <constant name="KHRShaderDrawParametersExtensionName" type="const char *const" />
  <constant name="KHRShaderDrawParametersSpecVersion" type="const int" />
  <constant name="EXTShaderSubgroupBallotExtensionName" type="const char *const" />
  <constant name="EXTShaderSubgroupBallotSpecVersion" type="const int" />
  <constant name="EXTShaderSubgroupVoteExtensionName" type="const char *const" />
  <constant name="EXTShaderSubgroupVoteSpecVersion" type="const int" />
  <constant name="EXTTextureCompressionAstcHdrExtensionName" type="const char *const" />
  <constant name="EXTTextureCompressionAstcHdrSpecVersion" type="const int" />
  <constant name="EXTAstcDecodeModeExtensionName" type="const char *const" />
  <constant name="EXTAstcDecodeModeSpecVersion" type="const int" />
  <constant name="EXTPipelineRobustnessExtensionName" type="const char *const" />
  <constant name="EXTPipelineRobustnessSpecVersion" type="const int" />
  <constant name="KHRMaintenance1ExtensionName" type="const char *const" />
  <constant name="KHRMaintenance1SpecVersion" type="const int" />
  <constant name="KHRDeviceGroupCreationExtensionName" type="const char *const" />
  <constant name="KHRDeviceGroupCreationSpecVersion" type="const int" />
  <constant name="MaxDeviceGroupSizeKHR" type="const uint32_t" />
  <constant name="KHRExternalMemoryCapabilitiesExtensionName" type="const char *const" />
  <constant name="KHRExternalMemoryCapabilitiesSpecVersion" type="const int" />
  <constant name="LuidSizeKHR" type="const uint32_t" />
  <constant name="KHRExternalMemoryExtensionName" type="const char *const" />
  <constant name="KHRExternalMemorySpecVersion" type="const int" />
  <constant name="QueueFamilyExternalKHR" type="const uint32_t" />
  <constant name="KHRExternalMemoryFdExtensionName" type="const char *const" />
  <constant name="KHRExternalMemoryFdSpecVersion" type="const int" />
  <constant name="KHRExternalSemaphoreCapabilitiesExtensionName" type="const char *const" />
  <constant name="KHRExternalSemaphoreCapabilitiesSpecVersion" type="const int" />
  <constant name="KHRExternalSemaphoreExtensionName" type="const char *const" />
  <constant name="KHRExternalSemaphoreSpecVersion" type="const int" />
  <constant name="KHRExternalSemaphoreFdExtensionName" type="const char *const" />
  <constant name="KHRExternalSemaphoreFdSpecVersion" type="const int" />
  <constant name="KHRPushDescriptorExtensionName" type="const char *const" />
  <constant name="KHRPushDescriptorSpecVersion" type="const int" />
  <constant name="EXTConditionalRenderingExtensionName" type="const char *const" />
  <constant name="EXTConditionalRenderingSpecVersion" type="const int" />
  <constant name="KHRShaderFloat16Int8ExtensionName" type="const char *const" />
  <constant name="KHRShaderFloat16Int8SpecVersion" type="const int" />
  <constant name="KHR16BitStorageExtensionName" type="const char *const" />
  <constant name="KHR16BitStorageSpecVersion" type="const int" />
  <constant name="KHRIncrementalPresentExtensionName" type="const char *const" />
  <constant name="KHRIncrementalPresentSpecVersion" type="const int" />
  <constant name="KHRDescriptorUpdateTemplateExtensionName" type="const char *const" />
  <constant name="KHRDescriptorUpdateTemplateSpecVersion" type="const int" />
  <constant name="NVClipSpaceWScalingExtensionName" type="const char *const" />
  <constant name="NVClipSpaceWScalingSpecVersion" type="const int" />
  <constant name="EXTDirectModeDisplayExtensionName" type="const char *const" />
  <constant name="EXTDirectModeDisplaySpecVersion" type="const int" />
  <constant name="EXTDisplaySurfaceCounterExtensionName" type="const char *const" />
  <constant name="EXTDisplaySurfaceCounterSpecVersion" type="const int" />
  <constant name="EXTDisplayControlExtensionName" type="const char *const" />
  <constant name="EXTDisplayControlSpecVersion" type="const int" />
  <constant name="GOOGLEDisplayTimingExtensionName" type="const char *const" />
  <constant name="GOOGLEDisplayTimingSpecVersion" type="const int" />
  <constant name="NVSampleMaskOverrideCoverageExtensionName" type="const char *const" />
  <constant name="NVSampleMaskOverrideCoverageSpecVersion" type="const int" />
  <constant name="NVGeometryShaderPassthroughExtensionName" type="const char *const" />
  <constant name="NVGeometryShaderPassthroughSpecVersion" type="const int" />
  <constant name="NVViewportArray2ExtensionName" type="const char *const" />
  <constant name="NVViewportArray2SpecVersion" type="const int" />
  <constant name="NVXMultiviewPerViewAttributesExtensionName" type="const char *const" />
  <constant name="NVXMultiviewPerViewAttributesSpecVersion" type="const int" />
  <constant name="NVViewportSwizzleExtensionName" type="const char *const" />
  <constant name="NVViewportSwizzleSpecVersion" type="const int" />
  <constant name="EXTDiscardRectanglesExtensionName" type="const char *const" />
  <constant name="EXTDiscardRectanglesSpecVersion" type="const int" />
  <constant name="EXTConservativeRasterizationExtensionName" type="const char *const" />
  <constant name="EXTConservativeRasterizationSpecVersion" type="const int" />
  <constant name="EXTDepthClipEnableExtensionName" type="const char *const" />
  <constant name="EXTDepthClipEnableSpecVersion" type="const int" />
  <constant name="EXTSwapchainColorSpaceExtensionName" type="const char *const" />
  <constant name="EXTSwapchainColorSpaceSpecVersion" type="const int" />
  <constant name="EXTHdrMetadataExtensionName" type="const char *const" />
  <constant name="EXTHdrMetadataSpecVersion" type="const int" />
  <constant name="KHRImagelessFramebufferExtensionName" type="const char *const" />
  <constant name="KHRImagelessFramebufferSpecVersion" type="const int" />
  <constant name="KHRCreateRenderpass2ExtensionName" type="const char *const" />
  <constant name="KHRCreateRenderpass2SpecVersion" type="const int" />
  <constant name="IMGRelaxedLineRasterizationExtensionName" type="const char *const" />
  <constant name="IMGRelaxedLineRasterizationSpecVersion" type="const int" />
  <constant name="KHRSharedPresentableImageExtensionName" type="const char *const" />
  <constant name="KHRSharedPresentableImageSpecVersion" type="const int" />
  <constant name="KHRExternalFenceCapabilitiesExtensionName" type="const char *const" />
  <constant name="KHRExternalFenceCapabilitiesSpecVersion" type="const int" />
  <constant name="KHRExternalFenceExtensionName" type="const char *const" />
  <constant name="KHRExternalFenceSpecVersion" type="const int" />
  <constant name="KHRExternalFenceFdExtensionName" type="const char *const" />
  <constant name="KHRExternalFenceFdSpecVersion" type="const int" />
  <constant name="KHRPerformanceQueryExtensionName" type="const char *const" />
  <constant name="KHRPerformanceQuerySpecVersion" type="const int" />
  <constant name="KHRMaintenance2ExtensionName" type="const char *const" />
  <constant name="KHRMaintenance2SpecVersion" type="const int" />
  <constant name="KHRGetSurfaceCapabilities2ExtensionName" type="const char *const" />
  <constant name="KHRGetSurfaceCapabilities2SpecVersion" type="const int" />
  <constant name="KHRVariablePointersExtensionName" type="const char *const" />
  <constant name="KHRVariablePointersSpecVersion" type="const int" />
  <constant name="KHRGetDisplayProperties2ExtensionName" type="const char *const" />
  <constant name="KHRGetDisplayProperties2SpecVersion" type="const int" />
  <constant name="EXTExternalMemoryDmaBufExtensionName" type="const char *const" />
  <constant name="EXTExternalMemoryDmaBufSpecVersion" type="const int" />
  <constant name="EXTQueueFamilyForeignExtensionName" type="const char *const" />
  <constant name="EXTQueueFamilyForeignSpecVersion" type="const int" />
  <constant name="QueueFamilyForeignEXT" type="const uint32_t" />
  <constant name="KHRDedicatedAllocationExtensionName" type="const char *const" />
  <constant name="KHRDedicatedAllocationSpecVersion" type="const int" />
  <constant name="EXTDebugUtilsExtensionName" type="const char *const" />
  <constant name="EXTDebugUtilsSpecVersion" type="const int" />
  <constant name="EXTSamplerFilterMinmaxExtensionName" type="const char *const" />
  <constant name="EXTSamplerFilterMinmaxSpecVersion" type="const int" />
  <constant name="KHRStorageBufferStorageClassExtensionName" type="const char *const" />
  <constant name="KHRStorageBufferStorageClassSpecVersion" type="const int" />
  <constant name="AMDGpuShaderInt16ExtensionName" type="const char *const" />
  <constant name="AMDGpuShaderInt16SpecVersion" type="const int" />
  <constant name="AMDMixedAttachmentSamplesExtensionName" type="const char *const" />
  <constant name="AMDMixedAttachmentSamplesSpecVersion" type="const int" />
  <constant name="AMDShaderFragmentMaskExtensionName" type="const char *const" />
  <constant name="AMDShaderFragmentMaskSpecVersion" type="const int" />
  <constant name="EXTInlineUniformBlockExtensionName" type="const char *const" />
  <constant name="EXTInlineUniformBlockSpecVersion" type="const int" />
  <constant name="EXTShaderStencilExportExtensionName" type="const char *const" />
  <constant name="EXTShaderStencilExportSpecVersion" type="const int" />
  <constant name="EXTSampleLocationsExtensionName" type="const char *const" />
  <constant name="EXTSampleLocationsSpecVersion" type="const int" />
  <constant name="KHRRelaxedBlockLayoutExtensionName" type="const char *const" />
  <constant name="KHRRelaxedBlockLayoutSpecVersion" type="const int" />
  <constant name="KHRGetMemoryRequirements2ExtensionName" type="const char *const" />
  <constant name="KHRGetMemoryRequirements2SpecVersion" type="const int" />
  <constant name="KHRImageFormatListExtensionName" type="const char *const" />
  <constant name="KHRImageFormatListSpecVersion" type="const int" />
  <constant name="EXTBlendOperationAdvancedExtensionName" type="const char *const" />
  <constant name="EXTBlendOperationAdvancedSpecVersion" type="const int" />
  <constant name="NVFragmentCoverageToColorExtensionName" type="const char *const" />
  <constant name="NVFragmentCoverageToColorSpecVersion" type="const int" />
  <constant name="KHRAccelerationStructureExtensionName" type="const char *const" />
  <constant name="KHRAccelerationStructureSpecVersion" type="const int" />
  <constant name="KHRRayTracingPipelineExtensionName" type="const char *const" />
  <constant name="KHRRayTracingPipelineSpecVersion" type="const int" />
  <constant name="ShaderUnusedKHR" type="const uint32_t" />
  <constant name="KHRRayQueryExtensionName" type="const char *const" />
  <constant name="KHRRayQuerySpecVersion" type="const int" />
  <constant name="NVFramebufferMixedSamplesExtensionName" type="const char *const" />
  <constant name="NVFramebufferMixedSamplesSpecVersion" type="const int" />
  <constant name="NVFillRectangleExtensionName" type="const char *const" />
  <constant name="NVFillRectangleSpecVersion" type="const int" />
  <constant name="NVShaderSmBuiltinsExtensionName" type="const char *const" />
  <constant name="NVShaderSmBuiltinsSpecVersion" type="const int" />
  <constant name="EXTPostDepthCoverageExtensionName" type="const char *const" />
  <constant name="EXTPostDepthCoverageSpecVersion" type="const int" />
  <constant name="KHRSamplerYcbcrConversionExtensionName" type="const char *const" />
  <constant name="KHRSamplerYcbcrConversionSpecVersion" type="const int" />
  <constant name="KHRBindMemory2ExtensionName" type="const char *const" />
  <constant name="KHRBindMemory2SpecVersion" type="const int" />
  <constant name="EXTImageDrmFormatModifierExtensionName" type="const char *const" />
  <constant name="EXTImageDrmFormatModifierSpecVersion" type="const int" />
  <constant name="EXTValidationCacheExtensionName" type="const char *const" />
  <constant name="EXTValidationCacheSpecVersion" type="const int" />
  <constant name="EXTDescriptorIndexingExtensionName" type="const char *const" />
  <constant name="EXTDescriptorIndexingSpecVersion" type="const int" />
  <constant name="EXTShaderViewportIndexLayerExtensionName" type="const char *const" />
  <constant name="EXTShaderViewportIndexLayerSpecVersion" type="const int" />
  <constant name="NVShadingRateImageExtensionName" type="const char *const" />
  <constant name="NVShadingRateImageSpecVersion" type="const int" />
  <constant name="NVRayTracingExtensionName" type="const char *const" />
  <constant name="NVRayTracingSpecVersion" type="const int" />
  <constant name="ShaderUnusedNV" type="const uint32_t" />
  <constant name="NVRepresentativeFragmentTestExtensionName" type="const char *const" />
  <constant name="NVRepresentativeFragmentTestSpecVersion" type="const int" />
  <constant name="KHRMaintenance3ExtensionName" type="const char *const" />
  <constant name="KHRMaintenance3SpecVersion" type="const int" />
  <constant name="KHRDrawIndirectCountExtensionName" type="const char *const" />
  <constant name="KHRDrawIndirectCountSpecVersion" type="const int" />
  <constant name="EXTFilterCubicExtensionName" type="const char *const" />
  <constant name="EXTFilterCubicSpecVersion" type="const int" />
  <constant name="QCOMRenderPassShaderResolveExtensionName" type="const char *const" />
  <constant name="QCOMRenderPassShaderResolveSpecVersion" type="const int" />
  <constant name="EXTGlobalPriorityExtensionName" type="const char *const" />
  <constant name="EXTGlobalPrioritySpecVersion" type="const int" />
  <constant name="KHRShaderSubgroupExtendedTypesExtensionName" type="const char *const" />
  <constant name="KHRShaderSubgroupExtendedTypesSpecVersion" type="const int" />
  <constant name="KHR8BitStorageExtensionName" type="const char *const" />
  <constant name="KHR8BitStorageSpecVersion" type="const int" />
  <constant name="EXTExternalMemoryHostExtensionName" type="const char *const" />
  <constant name="EXTExternalMemoryHostSpecVersion" type="const int" />
  <constant name="AMDBufferMarkerExtensionName" type="const char *const" />
  <constant name="AMDBufferMarkerSpecVersion" type="const int" />
  <constant name="KHRShaderAtomicInt64ExtensionName" type="const char *const" />
  <constant name="KHRShaderAtomicInt64SpecVersion" type="const int" />
  <constant name="KHRShaderClockExtensionName" type="const char *const" />
  <constant name="KHRShaderClockSpecVersion" type="const int" />
  <constant name="AMDPipelineCompilerControlExtensionName" type="const char *const" />
  <constant name="AMDPipelineCompilerControlSpecVersion" type="const int" />
  <constant name="EXTCalibratedTimestampsExtensionName" type="const char *const" />
  <constant name="EXTCalibratedTimestampsSpecVersion" type="const int" />
  <constant name="AMDShaderCorePropertiesExtensionName" type="const char *const" />
  <constant name="AMDShaderCorePropertiesSpecVersion" type="const int" />
  <constant name="KHRVideoDecodeH265ExtensionName" type="const char *const" />
  <constant name="KHRVideoDecodeH265SpecVersion" type="const int" />
  <constant name="KHRGlobalPriorityExtensionName" type="const char *const" />
  <constant name="KHRGlobalPrioritySpecVersion" type="const int" />
  <constant name="MaxGlobalPrioritySizeKHR" type="const uint32_t" />
  <constant name="AMDMemoryOverallocationBehaviorExtensionName" type="const char *const" />
  <constant name="AMDMemoryOverallocationBehaviorSpecVersion" type="const int" />
  <constant name="EXTVertexAttributeDivisorExtensionName" type="const char *const" />
  <constant name="EXTVertexAttributeDivisorSpecVersion" type="const int" />
  <constant name="EXTPipelineCreationFeedbackExtensionName" type="const char *const" />
  <constant name="EXTPipelineCreationFeedbackSpecVersion" type="const int" />
  <constant name="KHRDriverPropertiesExtensionName" type="const char *const" />
  <constant name="KHRDriverPropertiesSpecVersion" type="const int" />
  <constant name="MaxDriverInfoSizeKHR" type="const uint32_t" />
  <constant name="MaxDriverNameSizeKHR" type="const uint32_t" />
  <constant name="KHRShaderFloatControlsExtensionName" type="const char *const" />
  <constant name="KHRShaderFloatControlsSpecVersion" type="const int" />
  <constant name="NVShaderSubgroupPartitionedExtensionName" type="const char *const" />
  <constant name="NVShaderSubgroupPartitionedSpecVersion" type="const int" />
  <constant name="KHRDepthStencilResolveExtensionName" type="const char *const" />
  <constant name="KHRDepthStencilResolveSpecVersion" type="const int" />
  <constant name="KHRSwapchainMutableFormatExtensionName" type="const char *const" />
  <constant name="KHRSwapchainMutableFormatSpecVersion" type="const int" />
  <constant name="NVComputeShaderDerivativesExtensionName" type="const char *const" />
  <constant name="NVComputeShaderDerivativesSpecVersion" type="const int" />
  <constant name="NVMeshShaderExtensionName" type="const char *const" />
  <constant name="NVMeshShaderSpecVersion" type="const int" />
  <constant name="NVFragmentShaderBarycentricExtensionName" type="const char *const" />
  <constant name="NVFragmentShaderBarycentricSpecVersion" type="const int" />
  <constant name="NVShaderImageFootprintExtensionName" type="const char *const" />
  <constant name="NVShaderImageFootprintSpecVersion" type="const int" />
  <constant name="NVScissorExclusiveExtensionName" type="const char *const" />
  <constant name="NVScissorExclusiveSpecVersion" type="const int" />
  <constant name="NVDeviceDiagnosticCheckpointsExtensionName" type="const char *const" />
  <constant name="NVDeviceDiagnosticCheckpointsSpecVersion" type="const int" />
  <constant name="KHRTimelineSemaphoreExtensionName" type="const char *const" />
  <constant name="KHRTimelineSemaphoreSpecVersion" type="const int" />
  <constant name="INTELShaderIntegerFunctions2ExtensionName" type="const char *const" />
  <constant name="INTELShaderIntegerFunctions2SpecVersion" type="const int" />
  <constant name="INTELPerformanceQueryExtensionName" type="const char *const" />
  <constant name="INTELPerformanceQuerySpecVersion" type="const int" />
  <constant name="KHRVulkanMemoryModelExtensionName" type="const char *const" />
  <constant name="KHRVulkanMemoryModelSpecVersion" type="const int" />
  <constant name="EXTPciBusInfoExtensionName" type="const char *const" />
  <constant name="EXTPciBusInfoSpecVersion" type="const int" />
  <constant name="AMDDisplayNativeHdrExtensionName" type="const char *const" />
  <constant name="AMDDisplayNativeHdrSpecVersion" type="const int" />
  <constant name="KHRShaderTerminateInvocationExtensionName" type="const char *const" />
  <constant name="KHRShaderTerminateInvocationSpecVersion" type="const int" />
  <constant name="EXTFragmentDensityMapExtensionName" type="const char *const" />
  <constant name="EXTFragmentDensityMapSpecVersion" type="const int" />
  <constant name="EXTScalarBlockLayoutExtensionName" type="const char *const" />
  <constant name="EXTScalarBlockLayoutSpecVersion" type="const int" />
  <constant name="GOOGLEHlslFunctionality1ExtensionName" type="const char *const" />
  <constant name="GOOGLEHlslFunctionality1SpecVersion" type="const int" />
  <constant name="GOOGLEDecorateStringExtensionName" type="const char *const" />
  <constant name="GOOGLEDecorateStringSpecVersion" type="const int" />
  <constant name="EXTSubgroupSizeControlExtensionName" type="const char *const" />
  <constant name="EXTSubgroupSizeControlSpecVersion" type="const int" />
  <constant name="KHRFragmentShadingRateExtensionName" type="const char *const" />
  <constant name="KHRFragmentShadingRateSpecVersion" type="const int" />
  <constant name="AMDShaderCoreProperties2ExtensionName" type="const char *const" />
  <constant name="AMDShaderCoreProperties2SpecVersion" type="const int" />
  <constant name="AMDDeviceCoherentMemoryExtensionName" type="const char *const" />
  <constant name="AMDDeviceCoherentMemorySpecVersion" type="const int" />
  <constant name="EXTShaderImageAtomicInt64ExtensionName" type="const char *const" />
  <constant name="EXTShaderImageAtomicInt64SpecVersion" type="const int" />
  <constant name="KHRSpirv14ExtensionName" type="const char *const" />
  <constant name="KHRSpirv14SpecVersion" type="const int" />
  <constant name="EXTMemoryBudgetExtensionName" type="const char *const" />
  <constant name="EXTMemoryBudgetSpecVersion" type="const int" />
  <constant name="EXTMemoryPriorityExtensionName" type="const char *const" />
  <constant name="EXTMemoryPrioritySpecVersion" type="const int" />
  <constant name="KHRSurfaceProtectedCapabilitiesExtensionName" type="const char *const" />
  <constant name="KHRSurfaceProtectedCapabilitiesSpecVersion" type="const int" />
  <constant name="NVDedicatedAllocationImageAliasingExtensionName" type="const char *const" />
  <constant name="NVDedicatedAllocationImageAliasingSpecVersion" type="const int" />
  <constant name="KHRSeparateDepthStencilLayoutsExtensionName" type="const char *const" />
  <constant name="KHRSeparateDepthStencilLayoutsSpecVersion" type="const int" />
  <constant name="EXTBufferDeviceAddressExtensionName" type="const char *const" />
  <constant name="EXTBufferDeviceAddressSpecVersion" type="const int" />
  <constant name="EXTToolingInfoExtensionName" type="const char *const" />
  <constant name="EXTToolingInfoSpecVersion" type="const int" />
  <constant name="EXTSeparateStencilUsageExtensionName" type="const char *const" />
  <constant name="EXTSeparateStencilUsageSpecVersion" type="const int" />
  <constant name="EXTValidationFeaturesExtensionName" type="const char *const" />
  <constant name="EXTValidationFeaturesSpecVersion" type="const int" />
  <constant name="KHRPresentWaitExtensionName" type="const char *const" />
  <constant name="KHRPresentWaitSpecVersion" type="const int" />
  <constant name="NVCooperativeMatrixExtensionName" type="const char *const" />
  <constant name="NVCooperativeMatrixSpecVersion" type="const int" />
  <constant name="NVCoverageReductionModeExtensionName" type="const char *const" />
  <constant name="NVCoverageReductionModeSpecVersion" type="const int" />
  <constant name="EXTFragmentShaderInterlockExtensionName" type="const char *const" />
  <constant name="EXTFragmentShaderInterlockSpecVersion" type="const int" />
  <constant name="EXTYcbcrImageArraysExtensionName" type="const char *const" />
  <constant name="EXTYcbcrImageArraysSpecVersion" type="const int" />
  <constant name="KHRUniformBufferStandardLayoutExtensionName" type="const char *const" />
  <constant name="KHRUniformBufferStandardLayoutSpecVersion" type="const int" />
  <constant name="EXTProvokingVertexExtensionName" type="const char *const" />
  <constant name="EXTProvokingVertexSpecVersion" type="const int" />
  <constant name="EXTHeadlessSurfaceExtensionName" type="const char *const" />
  <constant name="EXTHeadlessSurfaceSpecVersion" type="const int" />
  <constant name="KHRBufferDeviceAddressExtensionName" type="const char *const" />
  <constant name="KHRBufferDeviceAddressSpecVersion" type="const int" />
  <constant name="EXTLineRasterizationExtensionName" type="const char *const" />
  <constant name="EXTLineRasterizationSpecVersion" type="const int" />
  <constant name="EXTShaderAtomicFloatExtensionName" type="const char *const" />
  <constant name="EXTShaderAtomicFloatSpecVersion" type="const int" />
  <constant name="EXTHostQueryResetExtensionName" type="const char *const" />
  <constant name="EXTHostQueryResetSpecVersion" type="const int" />
  <constant name="EXTIndexTypeUint8ExtensionName" type="const char *const" />
  <constant name="EXTIndexTypeUint8SpecVersion" type="const int" />
  <constant name="EXTExtendedDynamicStateExtensionName" type="const char *const" />
  <constant name="EXTExtendedDynamicStateSpecVersion" type="const int" />
  <constant name="KHRDeferredHostOperationsExtensionName" type="const char *const" />
  <constant name="KHRDeferredHostOperationsSpecVersion" type="const int" />
  <constant name="KHRPipelineExecutablePropertiesExtensionName" type="const char *const" />
  <constant name="KHRPipelineExecutablePropertiesSpecVersion" type="const int" />
  <constant name="EXTHostImageCopyExtensionName" type="const char *const" />
  <constant name="EXTHostImageCopySpecVersion" type="const int" />
  <constant name="KHRMapMemory2ExtensionName" type="const char *const" />
  <constant name="KHRMapMemory2SpecVersion" type="const int" />
  <constant name="EXTShaderAtomicFloat2ExtensionName" type="const char *const" />
  <constant name="EXTShaderAtomicFloat2SpecVersion" type="const int" />
  <constant name="EXTSurfaceMaintenance1ExtensionName" type="const char *const" />
  <constant name="EXTSurfaceMaintenance1SpecVersion" type="const int" />
  <constant name="EXTSwapchainMaintenance1ExtensionName" type="const char *const" />
  <constant name="EXTSwapchainMaintenance1SpecVersion" type="const int" />
  <constant name="EXTShaderDemoteToHelperInvocationExtensionName" type="const char *const" />
  <constant name="EXTShaderDemoteToHelperInvocationSpecVersion" type="const int" />
  <constant name="NVDeviceGeneratedCommandsExtensionName" type="const char *const" />
  <constant name="NVDeviceGeneratedCommandsSpecVersion" type="const int" />
  <constant name="NVInheritedViewportScissorExtensionName" type="const char *const" />
  <constant name="NVInheritedViewportScissorSpecVersion" type="const int" />
  <constant name="KHRShaderIntegerDotProductExtensionName" type="const char *const" />
  <constant name="KHRShaderIntegerDotProductSpecVersion" type="const int" />
  <constant name="EXTTexelBufferAlignmentExtensionName" type="const char *const" />
  <constant name="EXTTexelBufferAlignmentSpecVersion" type="const int" />
  <constant name="QCOMRenderPassTransformExtensionName" type="const char *const" />
  <constant name="QCOMRenderPassTransformSpecVersion" type="const int" />
  <constant name="EXTDepthBiasControlExtensionName" type="const char *const" />
  <constant name="EXTDepthBiasControlSpecVersion" type="const int" />
  <constant name="EXTDeviceMemoryReportExtensionName" type="const char *const" />
  <constant name="EXTDeviceMemoryReportSpecVersion" type="const int" />
  <constant name="EXTAcquireDrmDisplayExtensionName" type="const char *const" />
  <constant name="EXTAcquireDrmDisplaySpecVersion" type="const int" />
  <constant name="EXTRobustness2ExtensionName" type="const char *const" />
  <constant name="EXTRobustness2SpecVersion" type="const int" />
  <constant name="EXTCustomBorderColorExtensionName" type="const char *const" />
  <constant name="EXTCustomBorderColorSpecVersion" type="const int" />
  <constant name="GOOGLEUserTypeExtensionName" type="const char *const" />
  <constant name="GOOGLEUserTypeSpecVersion" type="const int" />
  <constant name="KHRPipelineLibraryExtensionName" type="const char *const" />
  <constant name="KHRPipelineLibrarySpecVersion" type="const int" />
  <constant name="NVPresentBarrierExtensionName" type="const char *const" />
  <constant name="NVPresentBarrierSpecVersion" type="const int" />
  <constant name="KHRShaderNonSemanticInfoExtensionName" type="const char *const" />
  <constant name="KHRShaderNonSemanticInfoSpecVersion" type="const int" />
  <constant name="KHRPresentIdExtensionName" type="const char *const" />
  <constant name="KHRPresentIdSpecVersion" type="const int" />
  <constant name="EXTPrivateDataExtensionName" type="const char *const" />
  <constant name="EXTPrivateDataSpecVersion" type="const int" />
  <constant name="EXTPipelineCreationCacheControlExtensionName" type="const char *const" />
  <constant name="EXTPipelineCreationCacheControlSpecVersion" type="const int" />
  <constant name="KHRVideoEncodeQueueExtensionName" type="const char *const" />
  <constant name="KHRVideoEncodeQueueSpecVersion" type="const int" />
  <constant name="NVDeviceDiagnosticsConfigExtensionName" type="const char *const" />
  <constant name="NVDeviceDiagnosticsConfigSpecVersion" type="const int" />
  <constant name="QCOMRenderPassStoreOpsExtensionName" type="const char *const" />
  <constant name="QCOMRenderPassStoreOpsSpecVersion" type="const int" />
  <constant name="NVLowLatencyExtensionName" type="const char *const" />
  <constant name="NVLowLatencySpecVersion" type="const int" />
  <constant name="KHRSynchronization2ExtensionName" type="const char *const" />
  <constant name="KHRSynchronization2SpecVersion" type="const int" />
  <constant name="EXTDescriptorBufferExtensionName" type="const char *const" />
  <constant name="EXTDescriptorBufferSpecVersion" type="const int" />
  <constant name="EXTGraphicsPipelineLibraryExtensionName" type="const char *const" />
  <constant name="EXTGraphicsPipelineLibrarySpecVersion" type="const int" />
  <constant name="AMDShaderEarlyAndLateFragmentTestsExtensionName" type="const char *const" />
  <constant name="AMDShaderEarlyAndLateFragmentTestsSpecVersion" type="const int" />
  <constant name="KHRFragmentShaderBarycentricExtensionName" type="const char *const" />
  <constant name="KHRFragmentShaderBarycentricSpecVersion" type="const int" />
  <constant name="KHRShaderSubgroupUniformControlFlowExtensionName" type="const char *const" />
  <constant name="KHRShaderSubgroupUniformControlFlowSpecVersion" type="const int" />
  <constant name="KHRZeroInitializeWorkgroupMemoryExtensionName" type="const char *const" />
  <constant name="KHRZeroInitializeWorkgroupMemorySpecVersion" type="const int" />
  <constant name="NVFragmentShadingRateEnumsExtensionName" type="const char *const" />
  <constant name="NVFragmentShadingRateEnumsSpecVersion" type="const int" />
  <constant name="NVRayTracingMotionBlurExtensionName" type="const char *const" />
  <constant name="NVRayTracingMotionBlurSpecVersion" type="const int" />
  <constant name="EXTMeshShaderExtensionName" type="const char *const" />
  <constant name="EXTMeshShaderSpecVersion" type="const int" />
  <constant name="EXTYcbcr2Plane444FormatsExtensionName" type="const char *const" />
  <constant name="EXTYcbcr2Plane444FormatsSpecVersion" type="const int" />
  <constant name="EXTFragmentDensityMap2ExtensionName" type="const char *const" />
  <constant name="EXTFragmentDensityMap2SpecVersion" type="const int" />
  <constant name="QCOMRotatedCopyCommandsExtensionName" type="const char *const" />
  <constant name="QCOMRotatedCopyCommandsSpecVersion" type="const int" />
  <constant name="EXTImageRobustnessExtensionName" type="const char *const" />
  <constant name="EXTImageRobustnessSpecVersion" type="const int" />
  <constant name="KHRWorkgroupMemoryExplicitLayoutExtensionName" type="const char *const" />
  <constant name="KHRWorkgroupMemoryExplicitLayoutSpecVersion" type="const int" />
  <constant name="KHRCopyCommands2ExtensionName" type="const char *const" />
  <constant name="KHRCopyCommands2SpecVersion" type="const int" />
  <constant name="EXTImageCompressionControlExtensionName" type="const char *const" />
  <constant name="EXTImageCompressionControlSpecVersion" type="const int" />
  <constant name="EXTAttachmentFeedbackLoopLayoutExtensionName" type="const char *const" />
  <constant name="EXTAttachmentFeedbackLoopLayoutSpecVersion" type="const int" />
  <constant name="EXT4444FormatsExtensionName" type="const char *const" />
  <constant name="EXT4444FormatsSpecVersion" type="const int" />
  <constant name="EXTDeviceFaultExtensionName" type="const char *const" />
  <constant name="EXTDeviceFaultSpecVersion" type="const int" />
  <constant name="ARMRasterizationOrderAttachmentAccessExtensionName" type="const char *const" />
  <constant name="ARMRasterizationOrderAttachmentAccessSpecVersion" type="const int" />
  <constant name="EXTRgba10X6FormatsExtensionName" type="const char *const" />
  <constant name="EXTRgba10X6FormatsSpecVersion" type="const int" />
  <constant name="VALVEMutableDescriptorTypeExtensionName" type="const char *const" />
  <constant name="VALVEMutableDescriptorTypeSpecVersion" type="const int" />
  <constant name="EXTVertexInputDynamicStateExtensionName" type="const char *const" />
  <constant name="EXTVertexInputDynamicStateSpecVersion" type="const int" />
  <constant name="EXTPhysicalDeviceDrmExtensionName" type="const char *const" />
  <constant name="EXTPhysicalDeviceDrmSpecVersion" type="const int" />
  <constant name="EXTDeviceAddressBindingReportExtensionName" type="const char *const" />
  <constant name="EXTDeviceAddressBindingReportSpecVersion" type="const int" />
  <constant name="EXTDepthClipControlExtensionName" type="const char *const" />
  <constant name="EXTDepthClipControlSpecVersion" type="const int" />
  <constant name="EXTPrimitiveTopologyListRestartExtensionName" type="const char *const" />
  <constant name="EXTPrimitiveTopologyListRestartSpecVersion" type="const int" />
  <constant name="KHRFormatFeatureFlags2ExtensionName" type="const char *const" />
  <constant name="KHRFormatFeatureFlags2SpecVersion" type="const int" />
  <constant name="HUAWEISubpassShadingExtensionName" type="const char *const" />
  <constant name="HUAWEISubpassShadingSpecVersion" type="const int" />
  <constant name="HUAWEIInvocationMaskExtensionName" type="const char *const" />
  <constant name="HUAWEIInvocationMaskSpecVersion" type="const int" />
  <constant name="NVExternalMemoryRdmaExtensionName" type="const char *const" />
  <constant name="NVExternalMemoryRdmaSpecVersion" type="const int" />
  <constant name="EXTPipelinePropertiesExtensionName" type="const char *const" />
  <constant name="EXTPipelinePropertiesSpecVersion" type="const int" />
  <constant name="EXTFrameBoundaryExtensionName" type="const char *const" />
  <constant name="EXTFrameBoundarySpecVersion" type="const int" />
  <constant name="EXTMultisampledRenderToSingleSampledExtensionName" type="const char *const" />
  <constant name="EXTMultisampledRenderToSingleSampledSpecVersion" type="const int" />
  <constant name="EXTExtendedDynamicState2ExtensionName" type="const char *const" />
  <constant name="EXTExtendedDynamicState2SpecVersion" type="const int" />
  <constant name="EXTColorWriteEnableExtensionName" type="const char *const" />
  <constant name="EXTColorWriteEnableSpecVersion" type="const int" />
  <constant name="EXTPrimitivesGeneratedQueryExtensionName" type="const char *const" />
  <constant name="EXTPrimitivesGeneratedQuerySpecVersion" type="const int" />
  <constant name="KHRRayTracingMaintenance1ExtensionName" type="const char *const" />
  <constant name="KHRRayTracingMaintenance1SpecVersion" type="const int" />
  <constant name="EXTGlobalPriorityQueryExtensionName" type="const char *const" />
  <constant name="EXTGlobalPriorityQuerySpecVersion" type="const int" />
  <constant name="MaxGlobalPrioritySizeEXT" type="const uint32_t" />
  <constant name="EXTImageViewMinLodExtensionName" type="const char *const" />
  <constant name="EXTImageViewMinLodSpecVersion" type="const int" />
  <constant name="EXTMultiDrawExtensionName" type="const char *const" />
  <constant name="EXTMultiDrawSpecVersion" type="const int" />
  <constant name="EXTImage2DViewOf3DExtensionName" type="const char *const" />
  <constant name="EXTImage2DViewOf3DSpecVersion" type="const int" />
  <constant name="KHRPortabilityEnumerationExtensionName" type="const char *const" />
  <constant name="KHRPortabilityEnumerationSpecVersion" type="const int" />
  <constant name="EXTShaderTileImageExtensionName" type="const char *const" />
  <constant name="EXTShaderTileImageSpecVersion" type="const int" />
  <constant name="EXTOpacityMicromapExtensionName" type="const char *const" />
  <constant name="EXTOpacityMicromapSpecVersion" type="const int" />
  <constant name="EXTLoadStoreOpNoneExtensionName" type="const char *const" />
  <constant name="EXTLoadStoreOpNoneSpecVersion" type="const int" />
  <constant name="HUAWEIClusterCullingShaderExtensionName" type="const char *const" />
  <constant name="HUAWEIClusterCullingShaderSpecVersion" type="const int" />
  <constant name="EXTBorderColorSwizzleExtensionName" type="const char *const" />
  <constant name="EXTBorderColorSwizzleSpecVersion" type="const int" />
  <constant name="EXTPageableDeviceLocalMemoryExtensionName" type="const char *const" />
  <constant name="EXTPageableDeviceLocalMemorySpecVersion" type="const int" />
  <constant name="KHRMaintenance4ExtensionName" type="const char *const" />
  <constant name="KHRMaintenance4SpecVersion" type="const int" />
  <constant name="ARMShaderCorePropertiesExtensionName" type="const char *const" />
  <constant name="ARMShaderCorePropertiesSpecVersion" type="const int" />
  <constant name="ARMSchedulingControlsExtensionName" type="const char *const" />
  <constant name="ARMSchedulingControlsSpecVersion" type="const int" />
  <constant name="EXTImageSlicedViewOf3DExtensionName" type="const char *const" />
  <constant name="EXTImageSlicedViewOf3DSpecVersion" type="const int" />
  <constant name="Remaining3DSlicesEXT" type="const uint32_t" />
  <constant name="VALVEDescriptorSetHostMappingExtensionName" type="const char *const" />
  <constant name="VALVEDescriptorSetHostMappingSpecVersion" type="const int" />
  <constant name="EXTDepthClampZeroOneExtensionName" type="const char *const" />
  <constant name="EXTDepthClampZeroOneSpecVersion" type="const int" />
  <constant name="EXTNonSeamlessCubeMapExtensionName" type="const char *const" />
  <constant name="EXTNonSeamlessCubeMapSpecVersion" type="const int" />
  <constant name="ARMRenderPassStripedExtensionName" type="const char *const" />
  <constant name="ARMRenderPassStripedSpecVersion" type="const int" />
  <constant name="QCOMFragmentDensityMapOffsetExtensionName" type="const char *const" />
  <constant name="QCOMFragmentDensityMapOffsetSpecVersion" type="const int" />
  <constant name="NVCopyMemoryIndirectExtensionName" type="const char *const" />
  <constant name="NVCopyMemoryIndirectSpecVersion" type="const int" />
  <constant name="NVMemoryDecompressionExtensionName" type="const char *const" />
  <constant name="NVMemoryDecompressionSpecVersion" type="const int" />
  <constant name="NVDeviceGeneratedCommandsComputeExtensionName" type="const char *const" />
  <constant name="NVDeviceGeneratedCommandsComputeSpecVersion" type="const int" />
  <constant name="NVLinearColorAttachmentExtensionName" type="const char *const" />
  <constant name="NVLinearColorAttachmentSpecVersion" type="const int" />
  <constant name="GOOGLESurfacelessQueryExtensionName" type="const char *const" />
  <constant name="GOOGLESurfacelessQuerySpecVersion" type="const int" />
  <constant name="EXTImageCompressionControlSwapchainExtensionName" type="const char *const" />
  <constant name="EXTImageCompressionControlSwapchainSpecVersion" type="const int" />
  <constant name="QCOMImageProcessingExtensionName" type="const char *const" />
  <constant name="QCOMImageProcessingSpecVersion" type="const int" />
  <constant name="EXTNestedCommandBufferExtensionName" type="const char *const" />
  <constant name="EXTNestedCommandBufferSpecVersion" type="const int" />
  <constant name="EXTExternalMemoryAcquireUnmodifiedExtensionName" type="const char *const" />
  <constant name="EXTExternalMemoryAcquireUnmodifiedSpecVersion" type="const int" />
  <constant name="EXTExtendedDynamicState3ExtensionName" type="const char *const" />
  <constant name="EXTExtendedDynamicState3SpecVersion" type="const int" />
  <constant name="EXTSubpassMergeFeedbackExtensionName" type="const char *const" />
  <constant name="EXTSubpassMergeFeedbackSpecVersion" type="const int" />
  <constant name="LUNARGDirectDriverLoadingExtensionName" type="const char *const" />
  <constant name="LUNARGDirectDriverLoadingSpecVersion" type="const int" />
  <constant name="EXTShaderModuleIdentifierExtensionName" type="const char *const" />
  <constant name="EXTShaderModuleIdentifierSpecVersion" type="const int" />
  <constant name="MaxShaderModuleIdentifierSizeEXT" type="const uint32_t" />
  <constant name="EXTRasterizationOrderAttachmentAccessExtensionName" type="const char *const" />
  <constant name="EXTRasterizationOrderAttachmentAccessSpecVersion" type="const int" />
  <constant name="NVOpticalFlowExtensionName" type="const char *const" />
  <constant name="NVOpticalFlowSpecVersion" type="const int" />
  <constant name="EXTLegacyDitheringExtensionName" type="const char *const" />
  <constant name="EXTLegacyDitheringSpecVersion" type="const int" />
  <constant name="EXTPipelineProtectedAccessExtensionName" type="const char *const" />
  <constant name="EXTPipelineProtectedAccessSpecVersion" type="const int" />
  <constant name="KHRMaintenance5ExtensionName" type="const char *const" />
  <constant name="KHRMaintenance5SpecVersion" type="const int" />
  <constant name="KHRRayTracingPositionFetchExtensionName" type="const char *const" />
  <constant name="KHRRayTracingPositionFetchSpecVersion" type="const int" />
  <constant name="EXTShaderObjectExtensionName" type="const char *const" />
  <constant name="EXTShaderObjectSpecVersion" type="const int" />
  <constant name="QCOMTilePropertiesExtensionName" type="const char *const" />
  <constant name="QCOMTilePropertiesSpecVersion" type="const int" />
  <constant name="SECAmigoProfilingExtensionName" type="const char *const" />
  <constant name="SECAmigoProfilingSpecVersion" type="const int" />
  <constant name="QCOMMultiviewPerViewViewportsExtensionName" type="const char *const" />
  <constant name="QCOMMultiviewPerViewViewportsSpecVersion" type="const int" />
  <constant name="NVRayTracingInvocationReorderExtensionName" type="const char *const" />
  <constant name="NVRayTracingInvocationReorderSpecVersion" type="const int" />
  <constant name="NVExtendedSparseAddressSpaceExtensionName" type="const char *const" />
  <constant name="NVExtendedSparseAddressSpaceSpecVersion" type="const int" />
  <constant name="EXTMutableDescriptorTypeExtensionName" type="const char *const" />
  <constant name="EXTMutableDescriptorTypeSpecVersion" type="const int" />
  <constant name="EXTLayerSettingsExtensionName" type="const char *const" />
  <constant name="EXTLayerSettingsSpecVersion" type="const int" />
  <constant name="ARMShaderCoreBuiltinsExtensionName" type="const char *const" />
  <constant name="ARMShaderCoreBuiltinsSpecVersion" type="const int" />
  <constant name="EXTPipelineLibraryGroupHandlesExtensionName" type="const char *const" />
  <constant name="EXTPipelineLibraryGroupHandlesSpecVersion" type="const int" />
  <constant name="EXTDynamicRenderingUnusedAttachmentsExtensionName" type="const char *const" />
  <constant name="EXTDynamicRenderingUnusedAttachmentsSpecVersion" type="const int" />
  <constant name="NVLowLatency2ExtensionName" type="const char *const" />
  <constant name="NVLowLatency2SpecVersion" type="const int" />
  <constant name="KHRCooperativeMatrixExtensionName" type="const char *const" />
  <constant name="KHRCooperativeMatrixSpecVersion" type="const int" />
  <constant name="QCOMMultiviewPerViewRenderAreasExtensionName" type="const char *const" />
  <constant name="QCOMMultiviewPerViewRenderAreasSpecVersion" type="const int" />
  <constant name="KHRVideoMaintenance1ExtensionName" type="const char *const" />
  <constant name="KHRVideoMaintenance1SpecVersion" type="const int" />
  <constant name="NVPerStageDescriptorSetExtensionName" type="const char *const" />
  <constant name="NVPerStageDescriptorSetSpecVersion" type="const int" />
  <constant name="QCOMImageProcessing2ExtensionName" type="const char *const" />
  <constant name="QCOMImageProcessing2SpecVersion" type="const int" />
  <constant name="QCOMFilterCubicWeightsExtensionName" type="const char *const" />
  <constant name="QCOMFilterCubicWeightsSpecVersion" type="const int" />
  <constant name="QCOMYcbcrDegammaExtensionName" type="const char *const" />
  <constant name="QCOMYcbcrDegammaSpecVersion" type="const int" />
  <constant name="QCOMFilterCubicClampExtensionName" type="const char *const" />
  <constant name="QCOMFilterCubicClampSpecVersion" type="const int" />
  <constant name="EXTAttachmentFeedbackLoopDynamicStateExtensionName" type="const char *const" />
  <constant name="EXTAttachmentFeedbackLoopDynamicStateSpecVersion" type="const int" />
  <constant name="KHRVertexAttributeDivisorExtensionName" type="const char *const" />
  <constant name="KHRVertexAttributeDivisorSpecVersion" type="const int" />
  <constant name="MSFTLayeredDriverExtensionName" type="const char *const" />
  <constant name="MSFTLayeredDriverSpecVersion" type="const int" />
  <constant name="KHRCalibratedTimestampsExtensionName" type="const char *const" />
  <constant name="KHRCalibratedTimestampsSpecVersion" type="const int" />
  <constant name="KHRMaintenance6ExtensionName" type="const char *const" />
  <constant name="KHRMaintenance6SpecVersion" type="const int" />
  <constant name="NVDescriptorPoolOverallocationExtensionName" type="const char *const" />
  <constant name="NVDescriptorPoolOverallocationSpecVersion" type="const int" />
  <constant name="HeaderVersion" type="const uint32_t" />
  <constant name="ApiVersion" type="const auto" />
  <constant name="ApiVersion10" type="const auto" />
  <constant name="ApiVersion11" type="const auto" />
  <constant name="ApiVersion12" type="const auto" />
  <constant name="ApiVersion13" type="const auto" />
  <constant name="HeaderVersionComplete" type="const auto" />
  <struct name="AllocationCallbacks">
    <function name="AllocationCallbacks">
      <argument name="pUserData_" type="void *" default="{}" />
      <argument name="pfnAllocation_" type="PFN_vkAllocationFunction" default="{}" />
      <argument name="pfnReallocation_" type="PFN_vkReallocationFunction" default="{}" />
      <argument name="pfnFree_" type="PFN_vkFreeFunction" default="{}" />
      <argument name="pfnInternalAllocation_" type="PFN_vkInternalAllocationNotification" default="{}" />
      <argument name="pfnInternalFree_" type="PFN_vkInternalFreeNotification" default="{}" />
    </function>
  </struct>
  <struct name="ApplicationInfo">
    <function name="ApplicationInfo">
      <argument name="pApplicationName_" type="const char *" default="{}" />
      <argument name="applicationVersion_" type="uint32_t" default="{}" />
      <argument name="pEngineName_" type="const char *" default="{}" />
      <argument name="engineVersion_" type="uint32_t" default="{}" />
      <argument name="apiVersion_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="AttachmentDescription">
    <function name="AttachmentDescription">
      <argument name="flags_" type="vk::AttachmentDescriptionFlags" default="" />
      <argument name="format_" type="vk::Format" default="vk::Format::eUndefined" />
      <argument name="samples_" type="vk::SampleCountFlagBits" default="vk::SampleCountFlagBits::e1" />
      <argument name="loadOp_" type="vk::AttachmentLoadOp" default="vk::AttachmentLoadOp::eLoad" />
      <argument name="storeOp_" type="vk::AttachmentStoreOp" default="vk::AttachmentStoreOp::eStore" />
      <argument name="stencilLoadOp_" type="vk::AttachmentLoadOp" default="vk::AttachmentLoadOp::eLoad" />
      <argument name="stencilStoreOp_" type="vk::AttachmentStoreOp" default="vk::AttachmentStoreOp::eStore" />
      <argument name="initialLayout_" type="vk::ImageLayout" default="vk::ImageLayout::eUndefined" />
      <argument name="finalLayout_" type="vk::ImageLayout" default="vk::ImageLayout::eUndefined" />
    </function>
  </struct>
  <struct name="AttachmentReference">
    <function name="AttachmentReference">
      <argument name="attachment_" type="uint32_t" default="{}" />
      <argument name="layout_" type="vk::ImageLayout" default="vk::ImageLayout::eUndefined" />
    </function>
  </struct>
  <struct name="BaseInStructure">
    <function name="BaseInStructure">
      <argument name="sType_" type="vk::StructureType" default="vk::StructureType::eApplicationInfo" />
      <argument name="pNext_" type="const struct vk::BaseInStructure *" default="nullptr" />
    </function>
  </struct>
  <struct name="BaseOutStructure">
    <function name="BaseOutStructure">
      <argument name="sType_" type="vk::StructureType" default="vk::StructureType::eApplicationInfo" />
      <argument name="pNext_" type="struct vk::BaseOutStructure *" default="nullptr" />
    </function>
  </struct>
  <struct name="BindSparseInfo">
    <function name="BindSparseInfo">
      <argument name="waitSemaphores_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::Semaphore&gt; &amp;" />
      <argument name="bufferBinds_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::SparseBufferMemoryBindInfo&gt; &amp;" default="" />
      <argument name="imageOpaqueBinds_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::SparseImageOpaqueMemoryBindInfo&gt; &amp;" default="" />
      <argument name="imageBinds_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::SparseImageMemoryBindInfo&gt; &amp;" default="" />
      <argument name="signalSemaphores_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::Semaphore&gt; &amp;" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="BufferCopy">
    <function name="BufferCopy">
      <argument name="srcOffset_" type="vk::DeviceSize" default="{}" />
      <argument name="dstOffset_" type="vk::DeviceSize" default="{}" />
      <argument name="size_" type="vk::DeviceSize" default="{}" />
    </function>
  </struct>
  <struct name="BufferCreateInfo">
    <function name="BufferCreateInfo">
      <argument name="flags_" type="vk::BufferCreateFlags" />
      <argument name="size_" type="vk::DeviceSize" />
      <argument name="usage_" type="vk::BufferUsageFlags" />
      <argument name="sharingMode_" type="vk::SharingMode" />
      <argument name="queueFamilyIndices_" type="const vk::ArrayProxyNoTemporaries&lt;const uint32_t&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="BufferImageCopy">
    <function name="BufferImageCopy">
      <argument name="bufferOffset_" type="vk::DeviceSize" default="{}" />
      <argument name="bufferRowLength_" type="uint32_t" default="{}" />
      <argument name="bufferImageHeight_" type="uint32_t" default="{}" />
      <argument name="imageSubresource_" type="vk::ImageSubresourceLayers" default="" />
      <argument name="imageOffset_" type="vk::Offset3D" default="{}" />
      <argument name="imageExtent_" type="vk::Extent3D" default="{}" />
    </function>
  </struct>
  <struct name="BufferMemoryBarrier">
    <function name="BufferMemoryBarrier">
      <argument name="srcAccessMask_" type="vk::AccessFlags" default="" />
      <argument name="dstAccessMask_" type="vk::AccessFlags" default="" />
      <argument name="srcQueueFamilyIndex_" type="uint32_t" default="{}" />
      <argument name="dstQueueFamilyIndex_" type="uint32_t" default="{}" />
      <argument name="buffer_" type="vk::Buffer" default="{}" />
      <argument name="offset_" type="vk::DeviceSize" default="{}" />
      <argument name="size_" type="vk::DeviceSize" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="BufferViewCreateInfo">
    <function name="BufferViewCreateInfo">
      <argument name="flags_" type="vk::BufferViewCreateFlags" default="" />
      <argument name="buffer_" type="vk::Buffer" default="{}" />
      <argument name="format_" type="vk::Format" default="vk::Format::eUndefined" />
      <argument name="offset_" type="vk::DeviceSize" default="{}" />
      <argument name="range_" type="vk::DeviceSize" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ClearAttachment">
    <function name="ClearAttachment">
      <argument name="aspectMask_" type="vk::ImageAspectFlags" default="" />
      <argument name="colorAttachment_" type="uint32_t" default="{}" />
      <argument name="clearValue_" type="vk::ClearValue" default="{}" />
    </function>
  </struct>
  <union name="ClearColorValue">
    <function name="ClearColorValue">
      <argument name="float32_" type="const std::array&lt;float, 4&gt; &amp;" default="" />
    </function>
    <function name="ClearColorValue">
      <argument name="int32_" type="const std::array&lt;int32_t, 4&gt; &amp;" />
    </function>
    <function name="ClearColorValue">
      <argument name="uint32_" type="const std::array&lt;uint32_t, 4&gt; &amp;" />
    </function>
  </union>
  <struct name="ClearDepthStencilValue">
    <function name="ClearDepthStencilValue">
      <argument name="depth_" type="float" default="{}" />
      <argument name="stencil_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <struct name="ClearRect">
    <function name="ClearRect">
      <argument name="rect_" type="vk::Rect2D" default="{}" />
      <argument name="baseArrayLayer_" type="uint32_t" default="{}" />
      <argument name="layerCount_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <union name="ClearValue">
    <function name="ClearValue">
      <argument name="color_" type="vk::ClearColorValue" default="{}" />
    </function>
    <function name="ClearValue">
      <argument name="depthStencil_" type="vk::ClearDepthStencilValue" />
    </function>
  </union>
  <struct name="CommandBufferAllocateInfo">
    <function name="CommandBufferAllocateInfo">
      <argument name="commandPool_" type="vk::CommandPool" default="{}" />
      <argument name="level_" type="vk::CommandBufferLevel" default="vk::CommandBufferLevel::ePrimary" />
      <argument name="commandBufferCount_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="CommandBufferBeginInfo">
    <function name="CommandBufferBeginInfo">
      <argument name="flags_" type="vk::CommandBufferUsageFlags" default="" />
      <argument name="pInheritanceInfo_" type="const vk::CommandBufferInheritanceInfo *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="CommandBufferInheritanceInfo">
    <function name="CommandBufferInheritanceInfo">
      <argument name="renderPass_" type="vk::RenderPass" default="{}" />
      <argument name="subpass_" type="uint32_t" default="{}" />
      <argument name="framebuffer_" type="vk::Framebuffer" default="{}" />
      <argument name="occlusionQueryEnable_" type="vk::Bool32" default="{}" />
      <argument name="queryFlags_" type="vk::QueryControlFlags" default="" />
      <argument name="pipelineStatistics_" type="vk::QueryPipelineStatisticFlags" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="CommandPoolCreateInfo">
    <function name="CommandPoolCreateInfo">
      <argument name="flags_" type="vk::CommandPoolCreateFlags" default="" />
      <argument name="queueFamilyIndex_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ComponentMapping">
    <function name="ComponentMapping">
      <argument name="r_" type="vk::ComponentSwizzle" default="vk::ComponentSwizzle::eIdentity" />
      <argument name="g_" type="vk::ComponentSwizzle" default="vk::ComponentSwizzle::eIdentity" />
      <argument name="b_" type="vk::ComponentSwizzle" default="vk::ComponentSwizzle::eIdentity" />
      <argument name="a_" type="vk::ComponentSwizzle" default="vk::ComponentSwizzle::eIdentity" />
    </function>
  </struct>
  <struct name="ComputePipelineCreateInfo">
    <function name="ComputePipelineCreateInfo">
      <argument name="flags_" type="vk::PipelineCreateFlags" default="" />
      <argument name="stage_" type="vk::PipelineShaderStageCreateInfo" default="" />
      <argument name="layout_" type="vk::PipelineLayout" default="{}" />
      <argument name="basePipelineHandle_" type="vk::Pipeline" default="{}" />
      <argument name="basePipelineIndex_" type="int32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="CopyDescriptorSet">
    <function name="CopyDescriptorSet">
      <argument name="srcSet_" type="vk::DescriptorSet" default="{}" />
      <argument name="srcBinding_" type="uint32_t" default="{}" />
      <argument name="srcArrayElement_" type="uint32_t" default="{}" />
      <argument name="dstSet_" type="vk::DescriptorSet" default="{}" />
      <argument name="dstBinding_" type="uint32_t" default="{}" />
      <argument name="dstArrayElement_" type="uint32_t" default="{}" />
      <argument name="descriptorCount_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DescriptorBufferInfo">
    <function name="DescriptorBufferInfo">
      <argument name="buffer_" type="vk::Buffer" default="{}" />
      <argument name="offset_" type="vk::DeviceSize" default="{}" />
      <argument name="range_" type="vk::DeviceSize" default="{}" />
    </function>
  </struct>
  <struct name="DescriptorImageInfo">
    <function name="DescriptorImageInfo">
      <argument name="sampler_" type="vk::Sampler" default="{}" />
      <argument name="imageView_" type="vk::ImageView" default="{}" />
      <argument name="imageLayout_" type="vk::ImageLayout" default="vk::ImageLayout::eUndefined" />
    </function>
  </struct>
  <struct name="DescriptorPoolCreateInfo">
    <function name="DescriptorPoolCreateInfo">
      <argument name="flags_" type="vk::DescriptorPoolCreateFlags" />
      <argument name="maxSets_" type="uint32_t" />
      <argument name="poolSizes_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::DescriptorPoolSize&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DescriptorPoolSize">
    <function name="DescriptorPoolSize">
      <argument name="type_" type="vk::DescriptorType" default="vk::DescriptorType::eSampler" />
      <argument name="descriptorCount_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <struct name="DescriptorSetAllocateInfo">
    <function name="DescriptorSetAllocateInfo">
      <argument name="descriptorPool_" type="vk::DescriptorPool" />
      <argument name="setLayouts_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::DescriptorSetLayout&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DescriptorSetLayoutBinding">
    <function name="DescriptorSetLayoutBinding">
      <argument name="binding_" type="uint32_t" />
      <argument name="descriptorType_" type="vk::DescriptorType" />
      <argument name="stageFlags_" type="vk::ShaderStageFlags" />
      <argument name="immutableSamplers_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::Sampler&gt; &amp;" />
    </function>
  </struct>
  <struct name="DescriptorSetLayoutCreateInfo">
    <function name="DescriptorSetLayoutCreateInfo">
      <argument name="flags_" type="vk::DescriptorSetLayoutCreateFlags" />
      <argument name="bindings_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::DescriptorSetLayoutBinding&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DeviceCreateInfo">
    <function name="DeviceCreateInfo">
      <argument name="flags_" type="vk::DeviceCreateFlags" />
      <argument name="queueCreateInfos_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::DeviceQueueCreateInfo&gt; &amp;" />
      <argument name="pEnabledLayerNames_" type="const vk::ArrayProxyNoTemporaries&lt;const char *const&gt; &amp;" default="" />
      <argument name="pEnabledExtensionNames_" type="const vk::ArrayProxyNoTemporaries&lt;const char *const&gt; &amp;" default="" />
      <argument name="pEnabledFeatures_" type="const vk::PhysicalDeviceFeatures *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DeviceQueueCreateInfo">
    <function name="DeviceQueueCreateInfo">
      <argument name="flags_" type="vk::DeviceQueueCreateFlags" />
      <argument name="queueFamilyIndex_" type="uint32_t" />
      <argument name="queuePriorities_" type="const vk::ArrayProxyNoTemporaries&lt;const float&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DispatchIndirectCommand">
    <function name="DispatchIndirectCommand">
      <argument name="x_" type="uint32_t" default="{}" />
      <argument name="y_" type="uint32_t" default="{}" />
      <argument name="z_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <struct name="DrawIndexedIndirectCommand">
    <function name="DrawIndexedIndirectCommand">
      <argument name="indexCount_" type="uint32_t" default="{}" />
      <argument name="instanceCount_" type="uint32_t" default="{}" />
      <argument name="firstIndex_" type="uint32_t" default="{}" />
      <argument name="vertexOffset_" type="int32_t" default="{}" />
      <argument name="firstInstance_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <struct name="DrawIndirectCommand">
    <function name="DrawIndirectCommand">
      <argument name="vertexCount_" type="uint32_t" default="{}" />
      <argument name="instanceCount_" type="uint32_t" default="{}" />
      <argument name="firstVertex_" type="uint32_t" default="{}" />
      <argument name="firstInstance_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <struct name="EventCreateInfo">
    <function name="EventCreateInfo">
      <argument name="flags_" type="vk::EventCreateFlags" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ExtensionProperties">
    <function name="ExtensionProperties">
      <argument name="extensionName_" type="const std::array&lt;char, 256U&gt; &amp;" default="" />
      <argument name="specVersion_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <struct name="Extent2D">
    <function name="Extent2D">
      <argument name="width_" type="uint32_t" default="{}" />
      <argument name="height_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <struct name="Extent3D">
    <function name="Extent3D">
      <argument name="extent2D" type="const Extent2D &amp;" />
      <argument name="depth_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <struct name="FenceCreateInfo">
    <function name="FenceCreateInfo">
      <argument name="flags_" type="vk::FenceCreateFlags" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="FormatProperties">
    <function name="FormatProperties">
      <argument name="linearTilingFeatures_" type="vk::FormatFeatureFlags" default="" />
      <argument name="optimalTilingFeatures_" type="vk::FormatFeatureFlags" default="" />
      <argument name="bufferFeatures_" type="vk::FormatFeatureFlags" default="" />
    </function>
  </struct>
  <struct name="FramebufferCreateInfo">
    <function name="FramebufferCreateInfo">
      <argument name="flags_" type="vk::FramebufferCreateFlags" />
      <argument name="renderPass_" type="vk::RenderPass" />
      <argument name="attachments_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::ImageView&gt; &amp;" />
      <argument name="width_" type="uint32_t" default="{}" />
      <argument name="height_" type="uint32_t" default="{}" />
      <argument name="layers_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="GraphicsPipelineCreateInfo">
    <function name="GraphicsPipelineCreateInfo">
      <argument name="flags_" type="vk::PipelineCreateFlags" />
      <argument name="stages_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::PipelineShaderStageCreateInfo&gt; &amp;" />
      <argument name="pVertexInputState_" type="const vk::PipelineVertexInputStateCreateInfo *" default="{}" />
      <argument name="pInputAssemblyState_" type="const vk::PipelineInputAssemblyStateCreateInfo *" default="{}" />
      <argument name="pTessellationState_" type="const vk::PipelineTessellationStateCreateInfo *" default="{}" />
      <argument name="pViewportState_" type="const vk::PipelineViewportStateCreateInfo *" default="{}" />
      <argument name="pRasterizationState_" type="const vk::PipelineRasterizationStateCreateInfo *" default="{}" />
      <argument name="pMultisampleState_" type="const vk::PipelineMultisampleStateCreateInfo *" default="{}" />
      <argument name="pDepthStencilState_" type="const vk::PipelineDepthStencilStateCreateInfo *" default="{}" />
      <argument name="pColorBlendState_" type="const vk::PipelineColorBlendStateCreateInfo *" default="{}" />
      <argument name="pDynamicState_" type="const vk::PipelineDynamicStateCreateInfo *" default="{}" />
      <argument name="layout_" type="vk::PipelineLayout" default="{}" />
      <argument name="renderPass_" type="vk::RenderPass" default="{}" />
      <argument name="subpass_" type="uint32_t" default="{}" />
      <argument name="basePipelineHandle_" type="vk::Pipeline" default="{}" />
      <argument name="basePipelineIndex_" type="int32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ImageBlit">
    <function name="ImageBlit">
      <argument name="srcSubresource_" type="vk::ImageSubresourceLayers" default="" />
      <argument name="srcOffsets_" type="const std::array&lt;vk::Offset3D, 2&gt; &amp;" default="" />
      <argument name="dstSubresource_" type="vk::ImageSubresourceLayers" default="" />
      <argument name="dstOffsets_" type="const std::array&lt;vk::Offset3D, 2&gt; &amp;" default="" />
    </function>
  </struct>
  <struct name="ImageCopy">
    <function name="ImageCopy">
      <argument name="srcSubresource_" type="vk::ImageSubresourceLayers" default="" />
      <argument name="srcOffset_" type="vk::Offset3D" default="{}" />
      <argument name="dstSubresource_" type="vk::ImageSubresourceLayers" default="" />
      <argument name="dstOffset_" type="vk::Offset3D" default="{}" />
      <argument name="extent_" type="vk::Extent3D" default="{}" />
    </function>
  </struct>
  <struct name="ImageCreateInfo">
    <function name="ImageCreateInfo">
      <argument name="flags_" type="vk::ImageCreateFlags" />
      <argument name="imageType_" type="vk::ImageType" />
      <argument name="format_" type="vk::Format" />
      <argument name="extent_" type="vk::Extent3D" />
      <argument name="mipLevels_" type="uint32_t" />
      <argument name="arrayLayers_" type="uint32_t" />
      <argument name="samples_" type="vk::SampleCountFlagBits" />
      <argument name="tiling_" type="vk::ImageTiling" />
      <argument name="usage_" type="vk::ImageUsageFlags" />
      <argument name="sharingMode_" type="vk::SharingMode" />
      <argument name="queueFamilyIndices_" type="const vk::ArrayProxyNoTemporaries&lt;const uint32_t&gt; &amp;" />
      <argument name="initialLayout_" type="vk::ImageLayout" default="vk::ImageLayout::eUndefined" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ImageFormatProperties">
    <function name="ImageFormatProperties">
      <argument name="maxExtent_" type="vk::Extent3D" default="{}" />
      <argument name="maxMipLevels_" type="uint32_t" default="{}" />
      <argument name="maxArrayLayers_" type="uint32_t" default="{}" />
      <argument name="sampleCounts_" type="vk::SampleCountFlags" default="" />
      <argument name="maxResourceSize_" type="vk::DeviceSize" default="{}" />
    </function>
  </struct>
  <struct name="ImageMemoryBarrier">
    <function name="ImageMemoryBarrier">
      <argument name="srcAccessMask_" type="vk::AccessFlags" default="" />
      <argument name="dstAccessMask_" type="vk::AccessFlags" default="" />
      <argument name="oldLayout_" type="vk::ImageLayout" default="vk::ImageLayout::eUndefined" />
      <argument name="newLayout_" type="vk::ImageLayout" default="vk::ImageLayout::eUndefined" />
      <argument name="srcQueueFamilyIndex_" type="uint32_t" default="{}" />
      <argument name="dstQueueFamilyIndex_" type="uint32_t" default="{}" />
      <argument name="image_" type="vk::Image" default="{}" />
      <argument name="subresourceRange_" type="vk::ImageSubresourceRange" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ImageResolve">
    <function name="ImageResolve">
      <argument name="srcSubresource_" type="vk::ImageSubresourceLayers" default="" />
      <argument name="srcOffset_" type="vk::Offset3D" default="{}" />
      <argument name="dstSubresource_" type="vk::ImageSubresourceLayers" default="" />
      <argument name="dstOffset_" type="vk::Offset3D" default="{}" />
      <argument name="extent_" type="vk::Extent3D" default="{}" />
    </function>
  </struct>
  <struct name="ImageSubresource">
    <function name="ImageSubresource">
      <argument name="aspectMask_" type="vk::ImageAspectFlags" default="" />
      <argument name="mipLevel_" type="uint32_t" default="{}" />
      <argument name="arrayLayer_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <struct name="ImageSubresourceLayers">
    <function name="ImageSubresourceLayers">
      <argument name="aspectMask_" type="vk::ImageAspectFlags" default="" />
      <argument name="mipLevel_" type="uint32_t" default="{}" />
      <argument name="baseArrayLayer_" type="uint32_t" default="{}" />
      <argument name="layerCount_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <struct name="ImageSubresourceRange">
    <function name="ImageSubresourceRange">
      <argument name="aspectMask_" type="vk::ImageAspectFlags" default="" />
      <argument name="baseMipLevel_" type="uint32_t" default="{}" />
      <argument name="levelCount_" type="uint32_t" default="{}" />
      <argument name="baseArrayLayer_" type="uint32_t" default="{}" />
      <argument name="layerCount_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <struct name="ImageViewCreateInfo">
    <function name="ImageViewCreateInfo">
      <argument name="flags_" type="vk::ImageViewCreateFlags" default="" />
      <argument name="image_" type="vk::Image" default="{}" />
      <argument name="viewType_" type="vk::ImageViewType" default="vk::ImageViewType::e1D" />
      <argument name="format_" type="vk::Format" default="vk::Format::eUndefined" />
      <argument name="components_" type="vk::ComponentMapping" default="{}" />
      <argument name="subresourceRange_" type="vk::ImageSubresourceRange" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="InstanceCreateInfo">
    <function name="InstanceCreateInfo">
      <argument name="flags_" type="vk::InstanceCreateFlags" />
      <argument name="pApplicationInfo_" type="const vk::ApplicationInfo *" />
      <argument name="pEnabledLayerNames_" type="const vk::ArrayProxyNoTemporaries&lt;const char *const&gt; &amp;" />
      <argument name="pEnabledExtensionNames_" type="const vk::ArrayProxyNoTemporaries&lt;const char *const&gt; &amp;" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="LayerProperties">
    <function name="LayerProperties">
      <argument name="layerName_" type="const std::array&lt;char, 256U&gt; &amp;" default="" />
      <argument name="specVersion_" type="uint32_t" default="{}" />
      <argument name="implementationVersion_" type="uint32_t" default="{}" />
      <argument name="description_" type="const std::array&lt;char, 256U&gt; &amp;" default="" />
    </function>
  </struct>
  <struct name="MappedMemoryRange">
    <function name="MappedMemoryRange">
      <argument name="memory_" type="vk::DeviceMemory" default="{}" />
      <argument name="offset_" type="vk::DeviceSize" default="{}" />
      <argument name="size_" type="vk::DeviceSize" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="MemoryAllocateInfo">
    <function name="MemoryAllocateInfo">
      <argument name="allocationSize_" type="vk::DeviceSize" default="{}" />
      <argument name="memoryTypeIndex_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="MemoryBarrier">
    <function name="MemoryBarrier">
      <argument name="srcAccessMask_" type="vk::AccessFlags" default="" />
      <argument name="dstAccessMask_" type="vk::AccessFlags" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="MemoryHeap">
    <function name="MemoryHeap">
      <argument name="size_" type="vk::DeviceSize" default="{}" />
      <argument name="flags_" type="vk::MemoryHeapFlags" default="" />
    </function>
  </struct>
  <struct name="MemoryRequirements">
    <function name="MemoryRequirements">
      <argument name="size_" type="vk::DeviceSize" default="{}" />
      <argument name="alignment_" type="vk::DeviceSize" default="{}" />
      <argument name="memoryTypeBits_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <struct name="MemoryType">
    <function name="MemoryType">
      <argument name="propertyFlags_" type="vk::MemoryPropertyFlags" default="" />
      <argument name="heapIndex_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <struct name="Offset2D">
    <function name="Offset2D">
      <argument name="x_" type="int32_t" default="{}" />
      <argument name="y_" type="int32_t" default="{}" />
    </function>
  </struct>
  <struct name="Offset3D">
    <function name="Offset3D">
      <argument name="offset2D" type="const Offset2D &amp;" />
      <argument name="z_" type="int32_t" default="{}" />
    </function>
  </struct>
  <struct name="PhysicalDeviceFeatures">
    <function name="PhysicalDeviceFeatures">
      <argument name="robustBufferAccess_" type="vk::Bool32" default="{}" />
      <argument name="fullDrawIndexUint32_" type="vk::Bool32" default="{}" />
      <argument name="imageCubeArray_" type="vk::Bool32" default="{}" />
      <argument name="independentBlend_" type="vk::Bool32" default="{}" />
      <argument name="geometryShader_" type="vk::Bool32" default="{}" />
      <argument name="tessellationShader_" type="vk::Bool32" default="{}" />
      <argument name="sampleRateShading_" type="vk::Bool32" default="{}" />
      <argument name="dualSrcBlend_" type="vk::Bool32" default="{}" />
      <argument name="logicOp_" type="vk::Bool32" default="{}" />
      <argument name="multiDrawIndirect_" type="vk::Bool32" default="{}" />
      <argument name="drawIndirectFirstInstance_" type="vk::Bool32" default="{}" />
      <argument name="depthClamp_" type="vk::Bool32" default="{}" />
      <argument name="depthBiasClamp_" type="vk::Bool32" default="{}" />
      <argument name="fillModeNonSolid_" type="vk::Bool32" default="{}" />
      <argument name="depthBounds_" type="vk::Bool32" default="{}" />
      <argument name="wideLines_" type="vk::Bool32" default="{}" />
      <argument name="largePoints_" type="vk::Bool32" default="{}" />
      <argument name="alphaToOne_" type="vk::Bool32" default="{}" />
      <argument name="multiViewport_" type="vk::Bool32" default="{}" />
      <argument name="samplerAnisotropy_" type="vk::Bool32" default="{}" />
      <argument name="textureCompressionETC2_" type="vk::Bool32" default="{}" />
      <argument name="textureCompressionASTC_LDR_" type="vk::Bool32" default="{}" />
      <argument name="textureCompressionBC_" type="vk::Bool32" default="{}" />
      <argument name="occlusionQueryPrecise_" type="vk::Bool32" default="{}" />
      <argument name="pipelineStatisticsQuery_" type="vk::Bool32" default="{}" />
      <argument name="vertexPipelineStoresAndAtomics_" type="vk::Bool32" default="{}" />
      <argument name="fragmentStoresAndAtomics_" type="vk::Bool32" default="{}" />
      <argument name="shaderTessellationAndGeometryPointSize_" type="vk::Bool32" default="{}" />
      <argument name="shaderImageGatherExtended_" type="vk::Bool32" default="{}" />
      <argument name="shaderStorageImageExtendedFormats_" type="vk::Bool32" default="{}" />
      <argument name="shaderStorageImageMultisample_" type="vk::Bool32" default="{}" />
      <argument name="shaderStorageImageReadWithoutFormat_" type="vk::Bool32" default="{}" />
      <argument name="shaderStorageImageWriteWithoutFormat_" type="vk::Bool32" default="{}" />
      <argument name="shaderUniformBufferArrayDynamicIndexing_" type="vk::Bool32" default="{}" />
      <argument name="shaderSampledImageArrayDynamicIndexing_" type="vk::Bool32" default="{}" />
      <argument name="shaderStorageBufferArrayDynamicIndexing_" type="vk::Bool32" default="{}" />
      <argument name="shaderStorageImageArrayDynamicIndexing_" type="vk::Bool32" default="{}" />
      <argument name="shaderClipDistance_" type="vk::Bool32" default="{}" />
      <argument name="shaderCullDistance_" type="vk::Bool32" default="{}" />
      <argument name="shaderFloat64_" type="vk::Bool32" default="{}" />
      <argument name="shaderInt64_" type="vk::Bool32" default="{}" />
      <argument name="shaderInt16_" type="vk::Bool32" default="{}" />
      <argument name="shaderResourceResidency_" type="vk::Bool32" default="{}" />
      <argument name="shaderResourceMinLod_" type="vk::Bool32" default="{}" />
      <argument name="sparseBinding_" type="vk::Bool32" default="{}" />
      <argument name="sparseResidencyBuffer_" type="vk::Bool32" default="{}" />
      <argument name="sparseResidencyImage2D_" type="vk::Bool32" default="{}" />
      <argument name="sparseResidencyImage3D_" type="vk::Bool32" default="{}" />
      <argument name="sparseResidency2Samples_" type="vk::Bool32" default="{}" />
      <argument name="sparseResidency4Samples_" type="vk::Bool32" default="{}" />
      <argument name="sparseResidency8Samples_" type="vk::Bool32" default="{}" />
      <argument name="sparseResidency16Samples_" type="vk::Bool32" default="{}" />
      <argument name="sparseResidencyAliased_" type="vk::Bool32" default="{}" />
      <argument name="variableMultisampleRate_" type="vk::Bool32" default="{}" />
      <argument name="inheritedQueries_" type="vk::Bool32" default="{}" />
    </function>
  </struct>
  <struct name="PhysicalDeviceLimits">
    <function name="PhysicalDeviceLimits">
      <argument name="maxImageDimension1D_" type="uint32_t" default="{}" />
      <argument name="maxImageDimension2D_" type="uint32_t" default="{}" />
      <argument name="maxImageDimension3D_" type="uint32_t" default="{}" />
      <argument name="maxImageDimensionCube_" type="uint32_t" default="{}" />
      <argument name="maxImageArrayLayers_" type="uint32_t" default="{}" />
      <argument name="maxTexelBufferElements_" type="uint32_t" default="{}" />
      <argument name="maxUniformBufferRange_" type="uint32_t" default="{}" />
      <argument name="maxStorageBufferRange_" type="uint32_t" default="{}" />
      <argument name="maxPushConstantsSize_" type="uint32_t" default="{}" />
      <argument name="maxMemoryAllocationCount_" type="uint32_t" default="{}" />
      <argument name="maxSamplerAllocationCount_" type="uint32_t" default="{}" />
      <argument name="bufferImageGranularity_" type="vk::DeviceSize" default="{}" />
      <argument name="sparseAddressSpaceSize_" type="vk::DeviceSize" default="{}" />
      <argument name="maxBoundDescriptorSets_" type="uint32_t" default="{}" />
      <argument name="maxPerStageDescriptorSamplers_" type="uint32_t" default="{}" />
      <argument name="maxPerStageDescriptorUniformBuffers_" type="uint32_t" default="{}" />
      <argument name="maxPerStageDescriptorStorageBuffers_" type="uint32_t" default="{}" />
      <argument name="maxPerStageDescriptorSampledImages_" type="uint32_t" default="{}" />
      <argument name="maxPerStageDescriptorStorageImages_" type="uint32_t" default="{}" />
      <argument name="maxPerStageDescriptorInputAttachments_" type="uint32_t" default="{}" />
      <argument name="maxPerStageResources_" type="uint32_t" default="{}" />
      <argument name="maxDescriptorSetSamplers_" type="uint32_t" default="{}" />
      <argument name="maxDescriptorSetUniformBuffers_" type="uint32_t" default="{}" />
      <argument name="maxDescriptorSetUniformBuffersDynamic_" type="uint32_t" default="{}" />
      <argument name="maxDescriptorSetStorageBuffers_" type="uint32_t" default="{}" />
      <argument name="maxDescriptorSetStorageBuffersDynamic_" type="uint32_t" default="{}" />
      <argument name="maxDescriptorSetSampledImages_" type="uint32_t" default="{}" />
      <argument name="maxDescriptorSetStorageImages_" type="uint32_t" default="{}" />
      <argument name="maxDescriptorSetInputAttachments_" type="uint32_t" default="{}" />
      <argument name="maxVertexInputAttributes_" type="uint32_t" default="{}" />
      <argument name="maxVertexInputBindings_" type="uint32_t" default="{}" />
      <argument name="maxVertexInputAttributeOffset_" type="uint32_t" default="{}" />
      <argument name="maxVertexInputBindingStride_" type="uint32_t" default="{}" />
      <argument name="maxVertexOutputComponents_" type="uint32_t" default="{}" />
      <argument name="maxTessellationGenerationLevel_" type="uint32_t" default="{}" />
      <argument name="maxTessellationPatchSize_" type="uint32_t" default="{}" />
      <argument name="maxTessellationControlPerVertexInputComponents_" type="uint32_t" default="{}" />
      <argument name="maxTessellationControlPerVertexOutputComponents_" type="uint32_t" default="{}" />
      <argument name="maxTessellationControlPerPatchOutputComponents_" type="uint32_t" default="{}" />
      <argument name="maxTessellationControlTotalOutputComponents_" type="uint32_t" default="{}" />
      <argument name="maxTessellationEvaluationInputComponents_" type="uint32_t" default="{}" />
      <argument name="maxTessellationEvaluationOutputComponents_" type="uint32_t" default="{}" />
      <argument name="maxGeometryShaderInvocations_" type="uint32_t" default="{}" />
      <argument name="maxGeometryInputComponents_" type="uint32_t" default="{}" />
      <argument name="maxGeometryOutputComponents_" type="uint32_t" default="{}" />
      <argument name="maxGeometryOutputVertices_" type="uint32_t" default="{}" />
      <argument name="maxGeometryTotalOutputComponents_" type="uint32_t" default="{}" />
      <argument name="maxFragmentInputComponents_" type="uint32_t" default="{}" />
      <argument name="maxFragmentOutputAttachments_" type="uint32_t" default="{}" />
      <argument name="maxFragmentDualSrcAttachments_" type="uint32_t" default="{}" />
      <argument name="maxFragmentCombinedOutputResources_" type="uint32_t" default="{}" />
      <argument name="maxComputeSharedMemorySize_" type="uint32_t" default="{}" />
      <argument name="maxComputeWorkGroupCount_" type="const std::array&lt;uint32_t, 3&gt; &amp;" default="" />
      <argument name="maxComputeWorkGroupInvocations_" type="uint32_t" default="{}" />
      <argument name="maxComputeWorkGroupSize_" type="const std::array&lt;uint32_t, 3&gt; &amp;" default="" />
      <argument name="subPixelPrecisionBits_" type="uint32_t" default="{}" />
      <argument name="subTexelPrecisionBits_" type="uint32_t" default="{}" />
      <argument name="mipmapPrecisionBits_" type="uint32_t" default="{}" />
      <argument name="maxDrawIndexedIndexValue_" type="uint32_t" default="{}" />
      <argument name="maxDrawIndirectCount_" type="uint32_t" default="{}" />
      <argument name="maxSamplerLodBias_" type="float" default="{}" />
      <argument name="maxSamplerAnisotropy_" type="float" default="{}" />
      <argument name="maxViewports_" type="uint32_t" default="{}" />
      <argument name="maxViewportDimensions_" type="const std::array&lt;uint32_t, 2&gt; &amp;" default="" />
      <argument name="viewportBoundsRange_" type="const std::array&lt;float, 2&gt; &amp;" default="" />
      <argument name="viewportSubPixelBits_" type="uint32_t" default="{}" />
      <argument name="minMemoryMapAlignment_" type="size_t" default="{}" />
      <argument name="minTexelBufferOffsetAlignment_" type="vk::DeviceSize" default="{}" />
      <argument name="minUniformBufferOffsetAlignment_" type="vk::DeviceSize" default="{}" />
      <argument name="minStorageBufferOffsetAlignment_" type="vk::DeviceSize" default="{}" />
      <argument name="minTexelOffset_" type="int32_t" default="{}" />
      <argument name="maxTexelOffset_" type="uint32_t" default="{}" />
      <argument name="minTexelGatherOffset_" type="int32_t" default="{}" />
      <argument name="maxTexelGatherOffset_" type="uint32_t" default="{}" />
      <argument name="minInterpolationOffset_" type="float" default="{}" />
      <argument name="maxInterpolationOffset_" type="float" default="{}" />
      <argument name="subPixelInterpolationOffsetBits_" type="uint32_t" default="{}" />
      <argument name="maxFramebufferWidth_" type="uint32_t" default="{}" />
      <argument name="maxFramebufferHeight_" type="uint32_t" default="{}" />
      <argument name="maxFramebufferLayers_" type="uint32_t" default="{}" />
      <argument name="framebufferColorSampleCounts_" type="vk::SampleCountFlags" default="" />
      <argument name="framebufferDepthSampleCounts_" type="vk::SampleCountFlags" default="" />
      <argument name="framebufferStencilSampleCounts_" type="vk::SampleCountFlags" default="" />
      <argument name="framebufferNoAttachmentsSampleCounts_" type="vk::SampleCountFlags" default="" />
      <argument name="maxColorAttachments_" type="uint32_t" default="{}" />
      <argument name="sampledImageColorSampleCounts_" type="vk::SampleCountFlags" default="" />
      <argument name="sampledImageIntegerSampleCounts_" type="vk::SampleCountFlags" default="" />
      <argument name="sampledImageDepthSampleCounts_" type="vk::SampleCountFlags" default="" />
      <argument name="sampledImageStencilSampleCounts_" type="vk::SampleCountFlags" default="" />
      <argument name="storageImageSampleCounts_" type="vk::SampleCountFlags" default="" />
      <argument name="maxSampleMaskWords_" type="uint32_t" default="{}" />
      <argument name="timestampComputeAndGraphics_" type="vk::Bool32" default="{}" />
      <argument name="timestampPeriod_" type="float" default="{}" />
      <argument name="maxClipDistances_" type="uint32_t" default="{}" />
      <argument name="maxCullDistances_" type="uint32_t" default="{}" />
      <argument name="maxCombinedClipAndCullDistances_" type="uint32_t" default="{}" />
      <argument name="discreteQueuePriorities_" type="uint32_t" default="{}" />
      <argument name="pointSizeRange_" type="const std::array&lt;float, 2&gt; &amp;" default="" />
      <argument name="lineWidthRange_" type="const std::array&lt;float, 2&gt; &amp;" default="" />
      <argument name="pointSizeGranularity_" type="float" default="{}" />
      <argument name="lineWidthGranularity_" type="float" default="{}" />
      <argument name="strictLines_" type="vk::Bool32" default="{}" />
      <argument name="standardSampleLocations_" type="vk::Bool32" default="{}" />
      <argument name="optimalBufferCopyOffsetAlignment_" type="vk::DeviceSize" default="{}" />
      <argument name="optimalBufferCopyRowPitchAlignment_" type="vk::DeviceSize" default="{}" />
      <argument name="nonCoherentAtomSize_" type="vk::DeviceSize" default="{}" />
    </function>
  </struct>
  <struct name="PhysicalDeviceMemoryProperties">
    <function name="PhysicalDeviceMemoryProperties">
      <argument name="memoryTypeCount_" type="uint32_t" default="{}" />
      <argument name="memoryTypes_" type="const std::array&lt;vk::MemoryType, 32U&gt; &amp;" default="" />
      <argument name="memoryHeapCount_" type="uint32_t" default="{}" />
      <argument name="memoryHeaps_" type="const std::array&lt;vk::MemoryHeap, 16U&gt; &amp;" default="" />
    </function>
  </struct>
  <struct name="PhysicalDeviceProperties">
    <function name="PhysicalDeviceProperties">
      <argument name="apiVersion_" type="uint32_t" default="{}" />
      <argument name="driverVersion_" type="uint32_t" default="{}" />
      <argument name="vendorID_" type="uint32_t" default="{}" />
      <argument name="deviceID_" type="uint32_t" default="{}" />
      <argument name="deviceType_" type="vk::PhysicalDeviceType" default="vk::PhysicalDeviceType::eOther" />
      <argument name="deviceName_" type="const std::array&lt;char, 256U&gt; &amp;" default="" />
      <argument name="pipelineCacheUUID_" type="const std::array&lt;uint8_t, 16U&gt; &amp;" default="" />
      <argument name="limits_" type="vk::PhysicalDeviceLimits" default="" />
      <argument name="sparseProperties_" type="vk::PhysicalDeviceSparseProperties" default="{}" />
    </function>
  </struct>
  <struct name="PhysicalDeviceSparseProperties">
    <function name="PhysicalDeviceSparseProperties">
      <argument name="residencyStandard2DBlockShape_" type="vk::Bool32" default="{}" />
      <argument name="residencyStandard2DMultisampleBlockShape_" type="vk::Bool32" default="{}" />
      <argument name="residencyStandard3DBlockShape_" type="vk::Bool32" default="{}" />
      <argument name="residencyAlignedMipSize_" type="vk::Bool32" default="{}" />
      <argument name="residencyNonResidentStrict_" type="vk::Bool32" default="{}" />
    </function>
  </struct>
  <struct name="PipelineCacheCreateInfo">
    <function name="PipelineCacheCreateInfo">
      <argument name="flags_" type="vk::PipelineCacheCreateFlags" default="" />
      <argument name="initialDataSize_" type="size_t" default="{}" />
      <argument name="pInitialData_" type="const void *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineCacheHeaderVersionOne">
    <function name="PipelineCacheHeaderVersionOne">
      <argument name="headerSize_" type="uint32_t" default="{}" />
      <argument name="headerVersion_" type="vk::PipelineCacheHeaderVersion" default="vk::PipelineCacheHeaderVersion::eOne" />
      <argument name="vendorID_" type="uint32_t" default="{}" />
      <argument name="deviceID_" type="uint32_t" default="{}" />
      <argument name="pipelineCacheUUID_" type="const std::array&lt;uint8_t, 16U&gt; &amp;" default="" />
    </function>
  </struct>
  <struct name="PipelineColorBlendAttachmentState">
    <function name="PipelineColorBlendAttachmentState">
      <argument name="blendEnable_" type="vk::Bool32" default="{}" />
      <argument name="srcColorBlendFactor_" type="vk::BlendFactor" default="vk::BlendFactor::eZero" />
      <argument name="dstColorBlendFactor_" type="vk::BlendFactor" default="vk::BlendFactor::eZero" />
      <argument name="colorBlendOp_" type="vk::BlendOp" default="vk::BlendOp::eAdd" />
      <argument name="srcAlphaBlendFactor_" type="vk::BlendFactor" default="vk::BlendFactor::eZero" />
      <argument name="dstAlphaBlendFactor_" type="vk::BlendFactor" default="vk::BlendFactor::eZero" />
      <argument name="alphaBlendOp_" type="vk::BlendOp" default="vk::BlendOp::eAdd" />
      <argument name="colorWriteMask_" type="vk::ColorComponentFlags" default="" />
    </function>
  </struct>
  <struct name="PipelineColorBlendStateCreateInfo">
    <function name="PipelineColorBlendStateCreateInfo">
      <argument name="flags_" type="vk::PipelineColorBlendStateCreateFlags" />
      <argument name="logicOpEnable_" type="vk::Bool32" />
      <argument name="logicOp_" type="vk::LogicOp" />
      <argument name="attachments_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::PipelineColorBlendAttachmentState&gt; &amp;" />
      <argument name="blendConstants_" type="const std::array&lt;float, 4&gt; &amp;" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineDepthStencilStateCreateInfo">
    <function name="PipelineDepthStencilStateCreateInfo">
      <argument name="flags_" type="vk::PipelineDepthStencilStateCreateFlags" default="" />
      <argument name="depthTestEnable_" type="vk::Bool32" default="{}" />
      <argument name="depthWriteEnable_" type="vk::Bool32" default="{}" />
      <argument name="depthCompareOp_" type="vk::CompareOp" default="vk::CompareOp::eNever" />
      <argument name="depthBoundsTestEnable_" type="vk::Bool32" default="{}" />
      <argument name="stencilTestEnable_" type="vk::Bool32" default="{}" />
      <argument name="front_" type="vk::StencilOpState" default="{}" />
      <argument name="back_" type="vk::StencilOpState" default="{}" />
      <argument name="minDepthBounds_" type="float" default="{}" />
      <argument name="maxDepthBounds_" type="float" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineDynamicStateCreateInfo">
    <function name="PipelineDynamicStateCreateInfo">
      <argument name="flags_" type="vk::PipelineDynamicStateCreateFlags" />
      <argument name="dynamicStates_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::DynamicState&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineInputAssemblyStateCreateInfo">
    <function name="PipelineInputAssemblyStateCreateInfo">
      <argument name="flags_" type="vk::PipelineInputAssemblyStateCreateFlags" default="" />
      <argument name="topology_" type="vk::PrimitiveTopology" default="vk::PrimitiveTopology::ePointList" />
      <argument name="primitiveRestartEnable_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineLayoutCreateInfo">
    <function name="PipelineLayoutCreateInfo">
      <argument name="flags_" type="vk::PipelineLayoutCreateFlags" />
      <argument name="setLayouts_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::DescriptorSetLayout&gt; &amp;" />
      <argument name="pushConstantRanges_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::PushConstantRange&gt; &amp;" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineMultisampleStateCreateInfo">
    <function name="PipelineMultisampleStateCreateInfo">
      <argument name="flags_" type="vk::PipelineMultisampleStateCreateFlags" default="" />
      <argument name="rasterizationSamples_" type="vk::SampleCountFlagBits" default="vk::SampleCountFlagBits::e1" />
      <argument name="sampleShadingEnable_" type="vk::Bool32" default="{}" />
      <argument name="minSampleShading_" type="float" default="{}" />
      <argument name="pSampleMask_" type="const vk::SampleMask *" default="{}" />
      <argument name="alphaToCoverageEnable_" type="vk::Bool32" default="{}" />
      <argument name="alphaToOneEnable_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineRasterizationStateCreateInfo">
    <function name="PipelineRasterizationStateCreateInfo">
      <argument name="flags_" type="vk::PipelineRasterizationStateCreateFlags" default="" />
      <argument name="depthClampEnable_" type="vk::Bool32" default="{}" />
      <argument name="rasterizerDiscardEnable_" type="vk::Bool32" default="{}" />
      <argument name="polygonMode_" type="vk::PolygonMode" default="vk::PolygonMode::eFill" />
      <argument name="cullMode_" type="vk::CullModeFlags" default="" />
      <argument name="frontFace_" type="vk::FrontFace" default="vk::FrontFace::eCounterClockwise" />
      <argument name="depthBiasEnable_" type="vk::Bool32" default="{}" />
      <argument name="depthBiasConstantFactor_" type="float" default="{}" />
      <argument name="depthBiasClamp_" type="float" default="{}" />
      <argument name="depthBiasSlopeFactor_" type="float" default="{}" />
      <argument name="lineWidth_" type="float" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineShaderStageCreateInfo">
    <function name="PipelineShaderStageCreateInfo">
      <argument name="flags_" type="vk::PipelineShaderStageCreateFlags" default="" />
      <argument name="stage_" type="vk::ShaderStageFlagBits" default="vk::ShaderStageFlagBits::eVertex" />
      <argument name="module_" type="vk::ShaderModule" default="{}" />
      <argument name="pName_" type="const char *" default="{}" />
      <argument name="pSpecializationInfo_" type="const vk::SpecializationInfo *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineTessellationStateCreateInfo">
    <function name="PipelineTessellationStateCreateInfo">
      <argument name="flags_" type="vk::PipelineTessellationStateCreateFlags" default="" />
      <argument name="patchControlPoints_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineVertexInputStateCreateInfo">
    <function name="PipelineVertexInputStateCreateInfo">
      <argument name="flags_" type="vk::PipelineVertexInputStateCreateFlags" />
      <argument name="vertexBindingDescriptions_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::VertexInputBindingDescription&gt; &amp;" />
      <argument name="vertexAttributeDescriptions_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::VertexInputAttributeDescription&gt; &amp;" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineViewportStateCreateInfo">
    <function name="PipelineViewportStateCreateInfo">
      <argument name="flags_" type="vk::PipelineViewportStateCreateFlags" />
      <argument name="viewports_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::Viewport&gt; &amp;" />
      <argument name="scissors_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::Rect2D&gt; &amp;" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PushConstantRange">
    <function name="PushConstantRange">
      <argument name="stageFlags_" type="vk::ShaderStageFlags" default="" />
      <argument name="offset_" type="uint32_t" default="{}" />
      <argument name="size_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <struct name="QueryPoolCreateInfo">
    <function name="QueryPoolCreateInfo">
      <argument name="flags_" type="vk::QueryPoolCreateFlags" default="" />
      <argument name="queryType_" type="vk::QueryType" default="vk::QueryType::eOcclusion" />
      <argument name="queryCount_" type="uint32_t" default="{}" />
      <argument name="pipelineStatistics_" type="vk::QueryPipelineStatisticFlags" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="QueueFamilyProperties">
    <function name="QueueFamilyProperties">
      <argument name="queueFlags_" type="vk::QueueFlags" default="" />
      <argument name="queueCount_" type="uint32_t" default="{}" />
      <argument name="timestampValidBits_" type="uint32_t" default="{}" />
      <argument name="minImageTransferGranularity_" type="vk::Extent3D" default="{}" />
    </function>
  </struct>
  <struct name="Rect2D">
    <function name="Rect2D">
      <argument name="offset_" type="vk::Offset2D" default="{}" />
      <argument name="extent_" type="vk::Extent2D" default="{}" />
    </function>
  </struct>
  <struct name="RenderPassBeginInfo">
    <function name="RenderPassBeginInfo">
      <argument name="renderPass_" type="vk::RenderPass" />
      <argument name="framebuffer_" type="vk::Framebuffer" />
      <argument name="renderArea_" type="vk::Rect2D" />
      <argument name="clearValues_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::ClearValue&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="RenderPassCreateInfo">
    <function name="RenderPassCreateInfo">
      <argument name="flags_" type="vk::RenderPassCreateFlags" />
      <argument name="attachments_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::AttachmentDescription&gt; &amp;" />
      <argument name="subpasses_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::SubpassDescription&gt; &amp;" default="" />
      <argument name="dependencies_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::SubpassDependency&gt; &amp;" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SamplerCreateInfo">
    <function name="SamplerCreateInfo">
      <argument name="flags_" type="vk::SamplerCreateFlags" default="" />
      <argument name="magFilter_" type="vk::Filter" default="vk::Filter::eNearest" />
      <argument name="minFilter_" type="vk::Filter" default="vk::Filter::eNearest" />
      <argument name="mipmapMode_" type="vk::SamplerMipmapMode" default="vk::SamplerMipmapMode::eNearest" />
      <argument name="addressModeU_" type="vk::SamplerAddressMode" default="vk::SamplerAddressMode::eRepeat" />
      <argument name="addressModeV_" type="vk::SamplerAddressMode" default="vk::SamplerAddressMode::eRepeat" />
      <argument name="addressModeW_" type="vk::SamplerAddressMode" default="vk::SamplerAddressMode::eRepeat" />
      <argument name="mipLodBias_" type="float" default="{}" />
      <argument name="anisotropyEnable_" type="vk::Bool32" default="{}" />
      <argument name="maxAnisotropy_" type="float" default="{}" />
      <argument name="compareEnable_" type="vk::Bool32" default="{}" />
      <argument name="compareOp_" type="vk::CompareOp" default="vk::CompareOp::eNever" />
      <argument name="minLod_" type="float" default="{}" />
      <argument name="maxLod_" type="float" default="{}" />
      <argument name="borderColor_" type="vk::BorderColor" default="vk::BorderColor::eFloatTransparentBlack" />
      <argument name="unnormalizedCoordinates_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SemaphoreCreateInfo">
    <function name="SemaphoreCreateInfo">
      <argument name="flags_" type="vk::SemaphoreCreateFlags" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ShaderModuleCreateInfo">
    <function name="ShaderModuleCreateInfo">
      <argument name="flags_" type="vk::ShaderModuleCreateFlags" />
      <argument name="code_" type="const vk::ArrayProxyNoTemporaries&lt;const uint32_t&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SparseBufferMemoryBindInfo">
    <function name="SparseBufferMemoryBindInfo">
      <argument name="buffer_" type="vk::Buffer" />
      <argument name="binds_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::SparseMemoryBind&gt; &amp;" />
    </function>
  </struct>
  <struct name="SparseImageFormatProperties">
    <function name="SparseImageFormatProperties">
      <argument name="aspectMask_" type="vk::ImageAspectFlags" default="" />
      <argument name="imageGranularity_" type="vk::Extent3D" default="{}" />
      <argument name="flags_" type="vk::SparseImageFormatFlags" default="" />
    </function>
  </struct>
  <struct name="SparseImageMemoryBind">
    <function name="SparseImageMemoryBind">
      <argument name="subresource_" type="vk::ImageSubresource" default="" />
      <argument name="offset_" type="vk::Offset3D" default="{}" />
      <argument name="extent_" type="vk::Extent3D" default="{}" />
      <argument name="memory_" type="vk::DeviceMemory" default="{}" />
      <argument name="memoryOffset_" type="vk::DeviceSize" default="{}" />
      <argument name="flags_" type="vk::SparseMemoryBindFlags" default="" />
    </function>
  </struct>
  <struct name="SparseImageMemoryBindInfo">
    <function name="SparseImageMemoryBindInfo">
      <argument name="image_" type="vk::Image" />
      <argument name="binds_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::SparseImageMemoryBind&gt; &amp;" />
    </function>
  </struct>
  <struct name="SparseImageMemoryRequirements">
    <function name="SparseImageMemoryRequirements">
      <argument name="formatProperties_" type="vk::SparseImageFormatProperties" default="" />
      <argument name="imageMipTailFirstLod_" type="uint32_t" default="{}" />
      <argument name="imageMipTailSize_" type="vk::DeviceSize" default="{}" />
      <argument name="imageMipTailOffset_" type="vk::DeviceSize" default="{}" />
      <argument name="imageMipTailStride_" type="vk::DeviceSize" default="{}" />
    </function>
  </struct>
  <struct name="SparseImageOpaqueMemoryBindInfo">
    <function name="SparseImageOpaqueMemoryBindInfo">
      <argument name="image_" type="vk::Image" />
      <argument name="binds_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::SparseMemoryBind&gt; &amp;" />
    </function>
  </struct>
  <struct name="SparseMemoryBind">
    <function name="SparseMemoryBind">
      <argument name="resourceOffset_" type="vk::DeviceSize" default="{}" />
      <argument name="size_" type="vk::DeviceSize" default="{}" />
      <argument name="memory_" type="vk::DeviceMemory" default="{}" />
      <argument name="memoryOffset_" type="vk::DeviceSize" default="{}" />
      <argument name="flags_" type="vk::SparseMemoryBindFlags" default="" />
    </function>
  </struct>
  <struct name="SpecializationInfo">
    <function name="SpecializationInfo">
      <argument name="mapEntryCount_" type="uint32_t" default="{}" />
      <argument name="pMapEntries_" type="const vk::SpecializationMapEntry *" default="{}" />
      <argument name="dataSize_" type="size_t" default="{}" />
      <argument name="pData_" type="const void *" default="{}" />
    </function>
  </struct>
  <struct name="SpecializationMapEntry">
    <function name="SpecializationMapEntry">
      <argument name="constantID_" type="uint32_t" default="{}" />
      <argument name="offset_" type="uint32_t" default="{}" />
      <argument name="size_" type="size_t" default="{}" />
    </function>
  </struct>
  <struct name="StencilOpState">
    <function name="StencilOpState">
      <argument name="failOp_" type="vk::StencilOp" default="vk::StencilOp::eKeep" />
      <argument name="passOp_" type="vk::StencilOp" default="vk::StencilOp::eKeep" />
      <argument name="depthFailOp_" type="vk::StencilOp" default="vk::StencilOp::eKeep" />
      <argument name="compareOp_" type="vk::CompareOp" default="vk::CompareOp::eNever" />
      <argument name="compareMask_" type="uint32_t" default="{}" />
      <argument name="writeMask_" type="uint32_t" default="{}" />
      <argument name="reference_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <struct name="SubmitInfo">
    <function name="SubmitInfo">
      <argument name="waitSemaphores_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::Semaphore&gt; &amp;" />
      <argument name="waitDstStageMask_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::PipelineStageFlags&gt; &amp;" default="" />
      <argument name="commandBuffers_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::CommandBuffer&gt; &amp;" default="" />
      <argument name="signalSemaphores_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::Semaphore&gt; &amp;" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SubpassDependency">
    <function name="SubpassDependency">
      <argument name="srcSubpass_" type="uint32_t" default="{}" />
      <argument name="dstSubpass_" type="uint32_t" default="{}" />
      <argument name="srcStageMask_" type="vk::PipelineStageFlags" default="" />
      <argument name="dstStageMask_" type="vk::PipelineStageFlags" default="" />
      <argument name="srcAccessMask_" type="vk::AccessFlags" default="" />
      <argument name="dstAccessMask_" type="vk::AccessFlags" default="" />
      <argument name="dependencyFlags_" type="vk::DependencyFlags" default="" />
    </function>
  </struct>
  <struct name="SubpassDescription">
    <function name="SubpassDescription">
      <argument name="flags_" type="vk::SubpassDescriptionFlags" />
      <argument name="pipelineBindPoint_" type="vk::PipelineBindPoint" />
      <argument name="inputAttachments_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::AttachmentReference&gt; &amp;" />
      <argument name="colorAttachments_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::AttachmentReference&gt; &amp;" default="" />
      <argument name="resolveAttachments_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::AttachmentReference&gt; &amp;" default="" />
      <argument name="pDepthStencilAttachment_" type="const vk::AttachmentReference *" default="{}" />
      <argument name="preserveAttachments_" type="const vk::ArrayProxyNoTemporaries&lt;const uint32_t&gt; &amp;" default="" />
    </function>
  </struct>
  <struct name="SubresourceLayout">
    <function name="SubresourceLayout">
      <argument name="offset_" type="vk::DeviceSize" default="{}" />
      <argument name="size_" type="vk::DeviceSize" default="{}" />
      <argument name="rowPitch_" type="vk::DeviceSize" default="{}" />
      <argument name="arrayPitch_" type="vk::DeviceSize" default="{}" />
      <argument name="depthPitch_" type="vk::DeviceSize" default="{}" />
    </function>
  </struct>
  <struct name="VertexInputAttributeDescription">
    <function name="VertexInputAttributeDescription">
      <argument name="location_" type="uint32_t" default="{}" />
      <argument name="binding_" type="uint32_t" default="{}" />
      <argument name="format_" type="vk::Format" default="vk::Format::eUndefined" />
      <argument name="offset_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <struct name="VertexInputBindingDescription">
    <function name="VertexInputBindingDescription">
      <argument name="binding_" type="uint32_t" default="{}" />
      <argument name="stride_" type="uint32_t" default="{}" />
      <argument name="inputRate_" type="vk::VertexInputRate" default="vk::VertexInputRate::eVertex" />
    </function>
  </struct>
  <struct name="Viewport">
    <function name="Viewport">
      <argument name="x_" type="float" default="{}" />
      <argument name="y_" type="float" default="{}" />
      <argument name="width_" type="float" default="{}" />
      <argument name="height_" type="float" default="{}" />
      <argument name="minDepth_" type="float" default="{}" />
      <argument name="maxDepth_" type="float" default="{}" />
    </function>
  </struct>
  <struct name="WriteDescriptorSet">
    <function name="WriteDescriptorSet">
      <argument name="dstSet_" type="vk::DescriptorSet" />
      <argument name="dstBinding_" type="uint32_t" />
      <argument name="dstArrayElement_" type="uint32_t" />
      <argument name="descriptorType_" type="vk::DescriptorType" />
      <argument name="imageInfo_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::DescriptorImageInfo&gt; &amp;" />
      <argument name="bufferInfo_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::DescriptorBufferInfo&gt; &amp;" default="" />
      <argument name="texelBufferView_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::BufferView&gt; &amp;" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="BindBufferMemoryDeviceGroupInfo">
    <function name="BindBufferMemoryDeviceGroupInfo">
      <argument name="deviceIndices_" type="const vk::ArrayProxyNoTemporaries&lt;const uint32_t&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="BindBufferMemoryInfo">
    <function name="BindBufferMemoryInfo">
      <argument name="buffer_" type="vk::Buffer" default="{}" />
      <argument name="memory_" type="vk::DeviceMemory" default="{}" />
      <argument name="memoryOffset_" type="vk::DeviceSize" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="BindImageMemoryDeviceGroupInfo">
    <function name="BindImageMemoryDeviceGroupInfo">
      <argument name="deviceIndices_" type="const vk::ArrayProxyNoTemporaries&lt;const uint32_t&gt; &amp;" />
      <argument name="splitInstanceBindRegions_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::Rect2D&gt; &amp;" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="BindImageMemoryInfo">
    <function name="BindImageMemoryInfo">
      <argument name="image_" type="vk::Image" default="{}" />
      <argument name="memory_" type="vk::DeviceMemory" default="{}" />
      <argument name="memoryOffset_" type="vk::DeviceSize" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="BindImagePlaneMemoryInfo">
    <function name="BindImagePlaneMemoryInfo">
      <argument name="planeAspect_" type="vk::ImageAspectFlagBits" default="vk::ImageAspectFlagBits::eColor" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="BufferMemoryRequirementsInfo2">
    <function name="BufferMemoryRequirementsInfo2">
      <argument name="buffer_" type="vk::Buffer" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DescriptorSetLayoutSupport">
    <function name="DescriptorSetLayoutSupport">
      <argument name="supported_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DescriptorUpdateTemplateCreateInfo">
    <function name="DescriptorUpdateTemplateCreateInfo">
      <argument name="flags_" type="vk::DescriptorUpdateTemplateCreateFlags" />
      <argument name="descriptorUpdateEntries_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::DescriptorUpdateTemplateEntry&gt; &amp;" />
      <argument name="templateType_" type="vk::DescriptorUpdateTemplateType" default="vk::DescriptorUpdateTemplateType::eDescriptorSet" />
      <argument name="descriptorSetLayout_" type="vk::DescriptorSetLayout" default="{}" />
      <argument name="pipelineBindPoint_" type="vk::PipelineBindPoint" default="vk::PipelineBindPoint::eGraphics" />
      <argument name="pipelineLayout_" type="vk::PipelineLayout" default="{}" />
      <argument name="set_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DescriptorUpdateTemplateEntry">
    <function name="DescriptorUpdateTemplateEntry">
      <argument name="dstBinding_" type="uint32_t" default="{}" />
      <argument name="dstArrayElement_" type="uint32_t" default="{}" />
      <argument name="descriptorCount_" type="uint32_t" default="{}" />
      <argument name="descriptorType_" type="vk::DescriptorType" default="vk::DescriptorType::eSampler" />
      <argument name="offset_" type="size_t" default="{}" />
      <argument name="stride_" type="size_t" default="{}" />
    </function>
  </struct>
  <struct name="DeviceGroupBindSparseInfo">
    <function name="DeviceGroupBindSparseInfo">
      <argument name="resourceDeviceIndex_" type="uint32_t" default="{}" />
      <argument name="memoryDeviceIndex_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DeviceGroupCommandBufferBeginInfo">
    <function name="DeviceGroupCommandBufferBeginInfo">
      <argument name="deviceMask_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DeviceGroupDeviceCreateInfo">
    <function name="DeviceGroupDeviceCreateInfo">
      <argument name="physicalDevices_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::PhysicalDevice&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DeviceGroupRenderPassBeginInfo">
    <function name="DeviceGroupRenderPassBeginInfo">
      <argument name="deviceMask_" type="uint32_t" />
      <argument name="deviceRenderAreas_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::Rect2D&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DeviceGroupSubmitInfo">
    <function name="DeviceGroupSubmitInfo">
      <argument name="waitSemaphoreDeviceIndices_" type="const vk::ArrayProxyNoTemporaries&lt;const uint32_t&gt; &amp;" />
      <argument name="commandBufferDeviceMasks_" type="const vk::ArrayProxyNoTemporaries&lt;const uint32_t&gt; &amp;" default="" />
      <argument name="signalSemaphoreDeviceIndices_" type="const vk::ArrayProxyNoTemporaries&lt;const uint32_t&gt; &amp;" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DeviceQueueInfo2">
    <function name="DeviceQueueInfo2">
      <argument name="flags_" type="vk::DeviceQueueCreateFlags" default="" />
      <argument name="queueFamilyIndex_" type="uint32_t" default="{}" />
      <argument name="queueIndex_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ExportFenceCreateInfo">
    <function name="ExportFenceCreateInfo">
      <argument name="handleTypes_" type="vk::ExternalFenceHandleTypeFlags" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ExportMemoryAllocateInfo">
    <function name="ExportMemoryAllocateInfo">
      <argument name="handleTypes_" type="vk::ExternalMemoryHandleTypeFlags" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ExportSemaphoreCreateInfo">
    <function name="ExportSemaphoreCreateInfo">
      <argument name="handleTypes_" type="vk::ExternalSemaphoreHandleTypeFlags" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ExternalBufferProperties">
    <function name="ExternalBufferProperties">
      <argument name="externalMemoryProperties_" type="vk::ExternalMemoryProperties" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ExternalFenceProperties">
    <function name="ExternalFenceProperties">
      <argument name="exportFromImportedHandleTypes_" type="vk::ExternalFenceHandleTypeFlags" default="" />
      <argument name="compatibleHandleTypes_" type="vk::ExternalFenceHandleTypeFlags" default="" />
      <argument name="externalFenceFeatures_" type="vk::ExternalFenceFeatureFlags" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ExternalImageFormatProperties">
    <function name="ExternalImageFormatProperties">
      <argument name="externalMemoryProperties_" type="vk::ExternalMemoryProperties" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ExternalMemoryBufferCreateInfo">
    <function name="ExternalMemoryBufferCreateInfo">
      <argument name="handleTypes_" type="vk::ExternalMemoryHandleTypeFlags" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ExternalMemoryImageCreateInfo">
    <function name="ExternalMemoryImageCreateInfo">
      <argument name="handleTypes_" type="vk::ExternalMemoryHandleTypeFlags" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ExternalMemoryProperties">
    <function name="ExternalMemoryProperties">
      <argument name="externalMemoryFeatures_" type="vk::ExternalMemoryFeatureFlags" default="" />
      <argument name="exportFromImportedHandleTypes_" type="vk::ExternalMemoryHandleTypeFlags" default="" />
      <argument name="compatibleHandleTypes_" type="vk::ExternalMemoryHandleTypeFlags" default="" />
    </function>
  </struct>
  <struct name="ExternalSemaphoreProperties">
    <function name="ExternalSemaphoreProperties">
      <argument name="exportFromImportedHandleTypes_" type="vk::ExternalSemaphoreHandleTypeFlags" default="" />
      <argument name="compatibleHandleTypes_" type="vk::ExternalSemaphoreHandleTypeFlags" default="" />
      <argument name="externalSemaphoreFeatures_" type="vk::ExternalSemaphoreFeatureFlags" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="FormatProperties2">
    <function name="FormatProperties2">
      <argument name="formatProperties_" type="vk::FormatProperties" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ImageFormatProperties2">
    <function name="ImageFormatProperties2">
      <argument name="imageFormatProperties_" type="vk::ImageFormatProperties" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ImageMemoryRequirementsInfo2">
    <function name="ImageMemoryRequirementsInfo2">
      <argument name="image_" type="vk::Image" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ImagePlaneMemoryRequirementsInfo">
    <function name="ImagePlaneMemoryRequirementsInfo">
      <argument name="planeAspect_" type="vk::ImageAspectFlagBits" default="vk::ImageAspectFlagBits::eColor" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ImageSparseMemoryRequirementsInfo2">
    <function name="ImageSparseMemoryRequirementsInfo2">
      <argument name="image_" type="vk::Image" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ImageViewUsageCreateInfo">
    <function name="ImageViewUsageCreateInfo">
      <argument name="usage_" type="vk::ImageUsageFlags" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="InputAttachmentAspectReference">
    <function name="InputAttachmentAspectReference">
      <argument name="subpass_" type="uint32_t" default="{}" />
      <argument name="inputAttachmentIndex_" type="uint32_t" default="{}" />
      <argument name="aspectMask_" type="vk::ImageAspectFlags" default="" />
    </function>
  </struct>
  <struct name="MemoryAllocateFlagsInfo">
    <function name="MemoryAllocateFlagsInfo">
      <argument name="flags_" type="vk::MemoryAllocateFlags" default="" />
      <argument name="deviceMask_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="MemoryDedicatedAllocateInfo">
    <function name="MemoryDedicatedAllocateInfo">
      <argument name="image_" type="vk::Image" default="{}" />
      <argument name="buffer_" type="vk::Buffer" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="MemoryDedicatedRequirements">
    <function name="MemoryDedicatedRequirements">
      <argument name="prefersDedicatedAllocation_" type="vk::Bool32" default="{}" />
      <argument name="requiresDedicatedAllocation_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="MemoryRequirements2">
    <function name="MemoryRequirements2">
      <argument name="memoryRequirements_" type="vk::MemoryRequirements" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDevice16BitStorageFeatures">
    <function name="PhysicalDevice16BitStorageFeatures">
      <argument name="storageBuffer16BitAccess_" type="vk::Bool32" default="{}" />
      <argument name="uniformAndStorageBuffer16BitAccess_" type="vk::Bool32" default="{}" />
      <argument name="storagePushConstant16_" type="vk::Bool32" default="{}" />
      <argument name="storageInputOutput16_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceExternalBufferInfo">
    <function name="PhysicalDeviceExternalBufferInfo">
      <argument name="flags_" type="vk::BufferCreateFlags" default="" />
      <argument name="usage_" type="vk::BufferUsageFlags" default="" />
      <argument name="handleType_" type="vk::ExternalMemoryHandleTypeFlagBits" default="vk::ExternalMemoryHandleTypeFlagBits::eOpaqueFd" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceExternalFenceInfo">
    <function name="PhysicalDeviceExternalFenceInfo">
      <argument name="handleType_" type="vk::ExternalFenceHandleTypeFlagBits" default="vk::ExternalFenceHandleTypeFlagBits::eOpaqueFd" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceExternalImageFormatInfo">
    <function name="PhysicalDeviceExternalImageFormatInfo">
      <argument name="handleType_" type="vk::ExternalMemoryHandleTypeFlagBits" default="vk::ExternalMemoryHandleTypeFlagBits::eOpaqueFd" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceExternalSemaphoreInfo">
    <function name="PhysicalDeviceExternalSemaphoreInfo">
      <argument name="handleType_" type="vk::ExternalSemaphoreHandleTypeFlagBits" default="vk::ExternalSemaphoreHandleTypeFlagBits::eOpaqueFd" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceFeatures2">
    <function name="PhysicalDeviceFeatures2">
      <argument name="features_" type="vk::PhysicalDeviceFeatures" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceGroupProperties">
    <function name="PhysicalDeviceGroupProperties">
      <argument name="physicalDeviceCount_" type="uint32_t" default="{}" />
      <argument name="physicalDevices_" type="const std::array&lt;vk::PhysicalDevice, 32U&gt; &amp;" default="" />
      <argument name="subsetAllocation_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceIDProperties">
    <function name="PhysicalDeviceIDProperties">
      <argument name="deviceUUID_" type="const std::array&lt;uint8_t, 16U&gt; &amp;" default="" />
      <argument name="driverUUID_" type="const std::array&lt;uint8_t, 16U&gt; &amp;" default="" />
      <argument name="deviceLUID_" type="const std::array&lt;uint8_t, 8U&gt; &amp;" default="" />
      <argument name="deviceNodeMask_" type="uint32_t" default="{}" />
      <argument name="deviceLUIDValid_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceImageFormatInfo2">
    <function name="PhysicalDeviceImageFormatInfo2">
      <argument name="format_" type="vk::Format" default="vk::Format::eUndefined" />
      <argument name="type_" type="vk::ImageType" default="vk::ImageType::e1D" />
      <argument name="tiling_" type="vk::ImageTiling" default="vk::ImageTiling::eOptimal" />
      <argument name="usage_" type="vk::ImageUsageFlags" default="" />
      <argument name="flags_" type="vk::ImageCreateFlags" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceMaintenance3Properties">
    <function name="PhysicalDeviceMaintenance3Properties">
      <argument name="maxPerSetDescriptors_" type="uint32_t" default="{}" />
      <argument name="maxMemoryAllocationSize_" type="vk::DeviceSize" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceMemoryProperties2">
    <function name="PhysicalDeviceMemoryProperties2">
      <argument name="memoryProperties_" type="vk::PhysicalDeviceMemoryProperties" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceMultiviewFeatures">
    <function name="PhysicalDeviceMultiviewFeatures">
      <argument name="multiview_" type="vk::Bool32" default="{}" />
      <argument name="multiviewGeometryShader_" type="vk::Bool32" default="{}" />
      <argument name="multiviewTessellationShader_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceMultiviewProperties">
    <function name="PhysicalDeviceMultiviewProperties">
      <argument name="maxMultiviewViewCount_" type="uint32_t" default="{}" />
      <argument name="maxMultiviewInstanceIndex_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDevicePointClippingProperties">
    <function name="PhysicalDevicePointClippingProperties">
      <argument name="pointClippingBehavior_" type="vk::PointClippingBehavior" default="vk::PointClippingBehavior::eAllClipPlanes" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceProperties2">
    <function name="PhysicalDeviceProperties2">
      <argument name="properties_" type="vk::PhysicalDeviceProperties" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceProtectedMemoryFeatures">
    <function name="PhysicalDeviceProtectedMemoryFeatures">
      <argument name="protectedMemory_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceProtectedMemoryProperties">
    <function name="PhysicalDeviceProtectedMemoryProperties">
      <argument name="protectedNoFault_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceSamplerYcbcrConversionFeatures">
    <function name="PhysicalDeviceSamplerYcbcrConversionFeatures">
      <argument name="samplerYcbcrConversion_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceShaderDrawParametersFeatures">
    <function name="PhysicalDeviceShaderDrawParametersFeatures">
      <argument name="shaderDrawParameters_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceSparseImageFormatInfo2">
    <function name="PhysicalDeviceSparseImageFormatInfo2">
      <argument name="format_" type="vk::Format" default="vk::Format::eUndefined" />
      <argument name="type_" type="vk::ImageType" default="vk::ImageType::e1D" />
      <argument name="samples_" type="vk::SampleCountFlagBits" default="vk::SampleCountFlagBits::e1" />
      <argument name="usage_" type="vk::ImageUsageFlags" default="" />
      <argument name="tiling_" type="vk::ImageTiling" default="vk::ImageTiling::eOptimal" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceSubgroupProperties">
    <function name="PhysicalDeviceSubgroupProperties">
      <argument name="subgroupSize_" type="uint32_t" default="{}" />
      <argument name="supportedStages_" type="vk::ShaderStageFlags" default="" />
      <argument name="supportedOperations_" type="vk::SubgroupFeatureFlags" default="" />
      <argument name="quadOperationsInAllStages_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceVariablePointersFeatures">
    <function name="PhysicalDeviceVariablePointersFeatures">
      <argument name="variablePointersStorageBuffer_" type="vk::Bool32" default="{}" />
      <argument name="variablePointers_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineTessellationDomainOriginStateCreateInfo">
    <function name="PipelineTessellationDomainOriginStateCreateInfo">
      <argument name="domainOrigin_" type="vk::TessellationDomainOrigin" default="vk::TessellationDomainOrigin::eUpperLeft" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ProtectedSubmitInfo">
    <function name="ProtectedSubmitInfo">
      <argument name="protectedSubmit_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="QueueFamilyProperties2">
    <function name="QueueFamilyProperties2">
      <argument name="queueFamilyProperties_" type="vk::QueueFamilyProperties" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="RenderPassInputAttachmentAspectCreateInfo">
    <function name="RenderPassInputAttachmentAspectCreateInfo">
      <argument name="aspectReferences_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::InputAttachmentAspectReference&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="RenderPassMultiviewCreateInfo">
    <function name="RenderPassMultiviewCreateInfo">
      <argument name="viewMasks_" type="const vk::ArrayProxyNoTemporaries&lt;const uint32_t&gt; &amp;" />
      <argument name="viewOffsets_" type="const vk::ArrayProxyNoTemporaries&lt;const int32_t&gt; &amp;" default="" />
      <argument name="correlationMasks_" type="const vk::ArrayProxyNoTemporaries&lt;const uint32_t&gt; &amp;" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SamplerYcbcrConversionCreateInfo">
    <function name="SamplerYcbcrConversionCreateInfo">
      <argument name="format_" type="vk::Format" default="vk::Format::eUndefined" />
      <argument name="ycbcrModel_" type="vk::SamplerYcbcrModelConversion" default="vk::SamplerYcbcrModelConversion::eRgbIdentity" />
      <argument name="ycbcrRange_" type="vk::SamplerYcbcrRange" default="vk::SamplerYcbcrRange::eItuFull" />
      <argument name="components_" type="vk::ComponentMapping" default="{}" />
      <argument name="xChromaOffset_" type="vk::ChromaLocation" default="vk::ChromaLocation::eCositedEven" />
      <argument name="yChromaOffset_" type="vk::ChromaLocation" default="vk::ChromaLocation::eCositedEven" />
      <argument name="chromaFilter_" type="vk::Filter" default="vk::Filter::eNearest" />
      <argument name="forceExplicitReconstruction_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SamplerYcbcrConversionImageFormatProperties">
    <function name="SamplerYcbcrConversionImageFormatProperties">
      <argument name="combinedImageSamplerDescriptorCount_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SamplerYcbcrConversionInfo">
    <function name="SamplerYcbcrConversionInfo">
      <argument name="conversion_" type="vk::SamplerYcbcrConversion" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SparseImageFormatProperties2">
    <function name="SparseImageFormatProperties2">
      <argument name="properties_" type="vk::SparseImageFormatProperties" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SparseImageMemoryRequirements2">
    <function name="SparseImageMemoryRequirements2">
      <argument name="memoryRequirements_" type="vk::SparseImageMemoryRequirements" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="AttachmentDescription2">
    <function name="AttachmentDescription2">
      <argument name="flags_" type="vk::AttachmentDescriptionFlags" default="" />
      <argument name="format_" type="vk::Format" default="vk::Format::eUndefined" />
      <argument name="samples_" type="vk::SampleCountFlagBits" default="vk::SampleCountFlagBits::e1" />
      <argument name="loadOp_" type="vk::AttachmentLoadOp" default="vk::AttachmentLoadOp::eLoad" />
      <argument name="storeOp_" type="vk::AttachmentStoreOp" default="vk::AttachmentStoreOp::eStore" />
      <argument name="stencilLoadOp_" type="vk::AttachmentLoadOp" default="vk::AttachmentLoadOp::eLoad" />
      <argument name="stencilStoreOp_" type="vk::AttachmentStoreOp" default="vk::AttachmentStoreOp::eStore" />
      <argument name="initialLayout_" type="vk::ImageLayout" default="vk::ImageLayout::eUndefined" />
      <argument name="finalLayout_" type="vk::ImageLayout" default="vk::ImageLayout::eUndefined" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="AttachmentDescriptionStencilLayout">
    <function name="AttachmentDescriptionStencilLayout">
      <argument name="stencilInitialLayout_" type="vk::ImageLayout" default="vk::ImageLayout::eUndefined" />
      <argument name="stencilFinalLayout_" type="vk::ImageLayout" default="vk::ImageLayout::eUndefined" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="AttachmentReference2">
    <function name="AttachmentReference2">
      <argument name="attachment_" type="uint32_t" default="{}" />
      <argument name="layout_" type="vk::ImageLayout" default="vk::ImageLayout::eUndefined" />
      <argument name="aspectMask_" type="vk::ImageAspectFlags" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="AttachmentReferenceStencilLayout">
    <function name="AttachmentReferenceStencilLayout">
      <argument name="stencilLayout_" type="vk::ImageLayout" default="vk::ImageLayout::eUndefined" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="BufferDeviceAddressInfo">
    <function name="BufferDeviceAddressInfo">
      <argument name="buffer_" type="vk::Buffer" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="BufferOpaqueCaptureAddressCreateInfo">
    <function name="BufferOpaqueCaptureAddressCreateInfo">
      <argument name="opaqueCaptureAddress_" type="uint64_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ConformanceVersion">
    <function name="ConformanceVersion">
      <argument name="major_" type="uint8_t" default="{}" />
      <argument name="minor_" type="uint8_t" default="{}" />
      <argument name="subminor_" type="uint8_t" default="{}" />
      <argument name="patch_" type="uint8_t" default="{}" />
    </function>
  </struct>
  <struct name="DescriptorSetLayoutBindingFlagsCreateInfo">
    <function name="DescriptorSetLayoutBindingFlagsCreateInfo">
      <argument name="bindingFlags_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::DescriptorBindingFlags&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DescriptorSetVariableDescriptorCountAllocateInfo">
    <function name="DescriptorSetVariableDescriptorCountAllocateInfo">
      <argument name="descriptorCounts_" type="const vk::ArrayProxyNoTemporaries&lt;const uint32_t&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DescriptorSetVariableDescriptorCountLayoutSupport">
    <function name="DescriptorSetVariableDescriptorCountLayoutSupport">
      <argument name="maxVariableDescriptorCount_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DeviceMemoryOpaqueCaptureAddressInfo">
    <function name="DeviceMemoryOpaqueCaptureAddressInfo">
      <argument name="memory_" type="vk::DeviceMemory" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="FramebufferAttachmentImageInfo">
    <function name="FramebufferAttachmentImageInfo">
      <argument name="flags_" type="vk::ImageCreateFlags" />
      <argument name="usage_" type="vk::ImageUsageFlags" />
      <argument name="width_" type="uint32_t" />
      <argument name="height_" type="uint32_t" />
      <argument name="layerCount_" type="uint32_t" />
      <argument name="viewFormats_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::Format&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="FramebufferAttachmentsCreateInfo">
    <function name="FramebufferAttachmentsCreateInfo">
      <argument name="attachmentImageInfos_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::FramebufferAttachmentImageInfo&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ImageFormatListCreateInfo">
    <function name="ImageFormatListCreateInfo">
      <argument name="viewFormats_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::Format&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ImageStencilUsageCreateInfo">
    <function name="ImageStencilUsageCreateInfo">
      <argument name="stencilUsage_" type="vk::ImageUsageFlags" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="MemoryOpaqueCaptureAddressAllocateInfo">
    <function name="MemoryOpaqueCaptureAddressAllocateInfo">
      <argument name="opaqueCaptureAddress_" type="uint64_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDevice8BitStorageFeatures">
    <function name="PhysicalDevice8BitStorageFeatures">
      <argument name="storageBuffer8BitAccess_" type="vk::Bool32" default="{}" />
      <argument name="uniformAndStorageBuffer8BitAccess_" type="vk::Bool32" default="{}" />
      <argument name="storagePushConstant8_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceBufferDeviceAddressFeatures">
    <function name="PhysicalDeviceBufferDeviceAddressFeatures">
      <argument name="bufferDeviceAddress_" type="vk::Bool32" default="{}" />
      <argument name="bufferDeviceAddressCaptureReplay_" type="vk::Bool32" default="{}" />
      <argument name="bufferDeviceAddressMultiDevice_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceDepthStencilResolveProperties">
    <function name="PhysicalDeviceDepthStencilResolveProperties">
      <argument name="supportedDepthResolveModes_" type="vk::ResolveModeFlags" default="" />
      <argument name="supportedStencilResolveModes_" type="vk::ResolveModeFlags" default="" />
      <argument name="independentResolveNone_" type="vk::Bool32" default="{}" />
      <argument name="independentResolve_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceDescriptorIndexingFeatures">
    <function name="PhysicalDeviceDescriptorIndexingFeatures">
      <argument name="shaderInputAttachmentArrayDynamicIndexing_" type="vk::Bool32" default="{}" />
      <argument name="shaderUniformTexelBufferArrayDynamicIndexing_" type="vk::Bool32" default="{}" />
      <argument name="shaderStorageTexelBufferArrayDynamicIndexing_" type="vk::Bool32" default="{}" />
      <argument name="shaderUniformBufferArrayNonUniformIndexing_" type="vk::Bool32" default="{}" />
      <argument name="shaderSampledImageArrayNonUniformIndexing_" type="vk::Bool32" default="{}" />
      <argument name="shaderStorageBufferArrayNonUniformIndexing_" type="vk::Bool32" default="{}" />
      <argument name="shaderStorageImageArrayNonUniformIndexing_" type="vk::Bool32" default="{}" />
      <argument name="shaderInputAttachmentArrayNonUniformIndexing_" type="vk::Bool32" default="{}" />
      <argument name="shaderUniformTexelBufferArrayNonUniformIndexing_" type="vk::Bool32" default="{}" />
      <argument name="shaderStorageTexelBufferArrayNonUniformIndexing_" type="vk::Bool32" default="{}" />
      <argument name="descriptorBindingUniformBufferUpdateAfterBind_" type="vk::Bool32" default="{}" />
      <argument name="descriptorBindingSampledImageUpdateAfterBind_" type="vk::Bool32" default="{}" />
      <argument name="descriptorBindingStorageImageUpdateAfterBind_" type="vk::Bool32" default="{}" />
      <argument name="descriptorBindingStorageBufferUpdateAfterBind_" type="vk::Bool32" default="{}" />
      <argument name="descriptorBindingUniformTexelBufferUpdateAfterBind_" type="vk::Bool32" default="{}" />
      <argument name="descriptorBindingStorageTexelBufferUpdateAfterBind_" type="vk::Bool32" default="{}" />
      <argument name="descriptorBindingUpdateUnusedWhilePending_" type="vk::Bool32" default="{}" />
      <argument name="descriptorBindingPartiallyBound_" type="vk::Bool32" default="{}" />
      <argument name="descriptorBindingVariableDescriptorCount_" type="vk::Bool32" default="{}" />
      <argument name="runtimeDescriptorArray_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceDescriptorIndexingProperties">
    <function name="PhysicalDeviceDescriptorIndexingProperties">
      <argument name="maxUpdateAfterBindDescriptorsInAllPools_" type="uint32_t" default="{}" />
      <argument name="shaderUniformBufferArrayNonUniformIndexingNative_" type="vk::Bool32" default="{}" />
      <argument name="shaderSampledImageArrayNonUniformIndexingNative_" type="vk::Bool32" default="{}" />
      <argument name="shaderStorageBufferArrayNonUniformIndexingNative_" type="vk::Bool32" default="{}" />
      <argument name="shaderStorageImageArrayNonUniformIndexingNative_" type="vk::Bool32" default="{}" />
      <argument name="shaderInputAttachmentArrayNonUniformIndexingNative_" type="vk::Bool32" default="{}" />
      <argument name="robustBufferAccessUpdateAfterBind_" type="vk::Bool32" default="{}" />
      <argument name="quadDivergentImplicitLod_" type="vk::Bool32" default="{}" />
      <argument name="maxPerStageDescriptorUpdateAfterBindSamplers_" type="uint32_t" default="{}" />
      <argument name="maxPerStageDescriptorUpdateAfterBindUniformBuffers_" type="uint32_t" default="{}" />
      <argument name="maxPerStageDescriptorUpdateAfterBindStorageBuffers_" type="uint32_t" default="{}" />
      <argument name="maxPerStageDescriptorUpdateAfterBindSampledImages_" type="uint32_t" default="{}" />
      <argument name="maxPerStageDescriptorUpdateAfterBindStorageImages_" type="uint32_t" default="{}" />
      <argument name="maxPerStageDescriptorUpdateAfterBindInputAttachments_" type="uint32_t" default="{}" />
      <argument name="maxPerStageUpdateAfterBindResources_" type="uint32_t" default="{}" />
      <argument name="maxDescriptorSetUpdateAfterBindSamplers_" type="uint32_t" default="{}" />
      <argument name="maxDescriptorSetUpdateAfterBindUniformBuffers_" type="uint32_t" default="{}" />
      <argument name="maxDescriptorSetUpdateAfterBindUniformBuffersDynamic_" type="uint32_t" default="{}" />
      <argument name="maxDescriptorSetUpdateAfterBindStorageBuffers_" type="uint32_t" default="{}" />
      <argument name="maxDescriptorSetUpdateAfterBindStorageBuffersDynamic_" type="uint32_t" default="{}" />
      <argument name="maxDescriptorSetUpdateAfterBindSampledImages_" type="uint32_t" default="{}" />
      <argument name="maxDescriptorSetUpdateAfterBindStorageImages_" type="uint32_t" default="{}" />
      <argument name="maxDescriptorSetUpdateAfterBindInputAttachments_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceDriverProperties">
    <function name="PhysicalDeviceDriverProperties">
      <argument name="driverID_" type="vk::DriverId" default="vk::DriverId::eAmdProprietary" />
      <argument name="driverName_" type="const std::array&lt;char, 256U&gt; &amp;" default="" />
      <argument name="driverInfo_" type="const std::array&lt;char, 256U&gt; &amp;" default="" />
      <argument name="conformanceVersion_" type="vk::ConformanceVersion" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceFloatControlsProperties">
    <function name="PhysicalDeviceFloatControlsProperties">
      <argument name="denormBehaviorIndependence_" type="vk::ShaderFloatControlsIndependence" default="vk::ShaderFloatControlsIndependence::e32BitOnly" />
      <argument name="roundingModeIndependence_" type="vk::ShaderFloatControlsIndependence" default="vk::ShaderFloatControlsIndependence::e32BitOnly" />
      <argument name="shaderSignedZeroInfNanPreserveFloat16_" type="vk::Bool32" default="{}" />
      <argument name="shaderSignedZeroInfNanPreserveFloat32_" type="vk::Bool32" default="{}" />
      <argument name="shaderSignedZeroInfNanPreserveFloat64_" type="vk::Bool32" default="{}" />
      <argument name="shaderDenormPreserveFloat16_" type="vk::Bool32" default="{}" />
      <argument name="shaderDenormPreserveFloat32_" type="vk::Bool32" default="{}" />
      <argument name="shaderDenormPreserveFloat64_" type="vk::Bool32" default="{}" />
      <argument name="shaderDenormFlushToZeroFloat16_" type="vk::Bool32" default="{}" />
      <argument name="shaderDenormFlushToZeroFloat32_" type="vk::Bool32" default="{}" />
      <argument name="shaderDenormFlushToZeroFloat64_" type="vk::Bool32" default="{}" />
      <argument name="shaderRoundingModeRTEFloat16_" type="vk::Bool32" default="{}" />
      <argument name="shaderRoundingModeRTEFloat32_" type="vk::Bool32" default="{}" />
      <argument name="shaderRoundingModeRTEFloat64_" type="vk::Bool32" default="{}" />
      <argument name="shaderRoundingModeRTZFloat16_" type="vk::Bool32" default="{}" />
      <argument name="shaderRoundingModeRTZFloat32_" type="vk::Bool32" default="{}" />
      <argument name="shaderRoundingModeRTZFloat64_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceHostQueryResetFeatures">
    <function name="PhysicalDeviceHostQueryResetFeatures">
      <argument name="hostQueryReset_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceImagelessFramebufferFeatures">
    <function name="PhysicalDeviceImagelessFramebufferFeatures">
      <argument name="imagelessFramebuffer_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceSamplerFilterMinmaxProperties">
    <function name="PhysicalDeviceSamplerFilterMinmaxProperties">
      <argument name="filterMinmaxSingleComponentFormats_" type="vk::Bool32" default="{}" />
      <argument name="filterMinmaxImageComponentMapping_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceScalarBlockLayoutFeatures">
    <function name="PhysicalDeviceScalarBlockLayoutFeatures">
      <argument name="scalarBlockLayout_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceSeparateDepthStencilLayoutsFeatures">
    <function name="PhysicalDeviceSeparateDepthStencilLayoutsFeatures">
      <argument name="separateDepthStencilLayouts_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceShaderAtomicInt64Features">
    <function name="PhysicalDeviceShaderAtomicInt64Features">
      <argument name="shaderBufferInt64Atomics_" type="vk::Bool32" default="{}" />
      <argument name="shaderSharedInt64Atomics_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceShaderFloat16Int8Features">
    <function name="PhysicalDeviceShaderFloat16Int8Features">
      <argument name="shaderFloat16_" type="vk::Bool32" default="{}" />
      <argument name="shaderInt8_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceShaderSubgroupExtendedTypesFeatures">
    <function name="PhysicalDeviceShaderSubgroupExtendedTypesFeatures">
      <argument name="shaderSubgroupExtendedTypes_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceTimelineSemaphoreFeatures">
    <function name="PhysicalDeviceTimelineSemaphoreFeatures">
      <argument name="timelineSemaphore_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceTimelineSemaphoreProperties">
    <function name="PhysicalDeviceTimelineSemaphoreProperties">
      <argument name="maxTimelineSemaphoreValueDifference_" type="uint64_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceUniformBufferStandardLayoutFeatures">
    <function name="PhysicalDeviceUniformBufferStandardLayoutFeatures">
      <argument name="uniformBufferStandardLayout_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceVulkan11Features">
    <function name="PhysicalDeviceVulkan11Features">
      <argument name="storageBuffer16BitAccess_" type="vk::Bool32" default="{}" />
      <argument name="uniformAndStorageBuffer16BitAccess_" type="vk::Bool32" default="{}" />
      <argument name="storagePushConstant16_" type="vk::Bool32" default="{}" />
      <argument name="storageInputOutput16_" type="vk::Bool32" default="{}" />
      <argument name="multiview_" type="vk::Bool32" default="{}" />
      <argument name="multiviewGeometryShader_" type="vk::Bool32" default="{}" />
      <argument name="multiviewTessellationShader_" type="vk::Bool32" default="{}" />
      <argument name="variablePointersStorageBuffer_" type="vk::Bool32" default="{}" />
      <argument name="variablePointers_" type="vk::Bool32" default="{}" />
      <argument name="protectedMemory_" type="vk::Bool32" default="{}" />
      <argument name="samplerYcbcrConversion_" type="vk::Bool32" default="{}" />
      <argument name="shaderDrawParameters_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceVulkan11Properties">
    <function name="PhysicalDeviceVulkan11Properties">
      <argument name="deviceUUID_" type="const std::array&lt;uint8_t, 16U&gt; &amp;" default="" />
      <argument name="driverUUID_" type="const std::array&lt;uint8_t, 16U&gt; &amp;" default="" />
      <argument name="deviceLUID_" type="const std::array&lt;uint8_t, 8U&gt; &amp;" default="" />
      <argument name="deviceNodeMask_" type="uint32_t" default="{}" />
      <argument name="deviceLUIDValid_" type="vk::Bool32" default="{}" />
      <argument name="subgroupSize_" type="uint32_t" default="{}" />
      <argument name="subgroupSupportedStages_" type="vk::ShaderStageFlags" default="" />
      <argument name="subgroupSupportedOperations_" type="vk::SubgroupFeatureFlags" default="" />
      <argument name="subgroupQuadOperationsInAllStages_" type="vk::Bool32" default="{}" />
      <argument name="pointClippingBehavior_" type="vk::PointClippingBehavior" default="vk::PointClippingBehavior::eAllClipPlanes" />
      <argument name="maxMultiviewViewCount_" type="uint32_t" default="{}" />
      <argument name="maxMultiviewInstanceIndex_" type="uint32_t" default="{}" />
      <argument name="protectedNoFault_" type="vk::Bool32" default="{}" />
      <argument name="maxPerSetDescriptors_" type="uint32_t" default="{}" />
      <argument name="maxMemoryAllocationSize_" type="vk::DeviceSize" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceVulkan12Features">
    <function name="PhysicalDeviceVulkan12Features">
      <argument name="samplerMirrorClampToEdge_" type="vk::Bool32" default="{}" />
      <argument name="drawIndirectCount_" type="vk::Bool32" default="{}" />
      <argument name="storageBuffer8BitAccess_" type="vk::Bool32" default="{}" />
      <argument name="uniformAndStorageBuffer8BitAccess_" type="vk::Bool32" default="{}" />
      <argument name="storagePushConstant8_" type="vk::Bool32" default="{}" />
      <argument name="shaderBufferInt64Atomics_" type="vk::Bool32" default="{}" />
      <argument name="shaderSharedInt64Atomics_" type="vk::Bool32" default="{}" />
      <argument name="shaderFloat16_" type="vk::Bool32" default="{}" />
      <argument name="shaderInt8_" type="vk::Bool32" default="{}" />
      <argument name="descriptorIndexing_" type="vk::Bool32" default="{}" />
      <argument name="shaderInputAttachmentArrayDynamicIndexing_" type="vk::Bool32" default="{}" />
      <argument name="shaderUniformTexelBufferArrayDynamicIndexing_" type="vk::Bool32" default="{}" />
      <argument name="shaderStorageTexelBufferArrayDynamicIndexing_" type="vk::Bool32" default="{}" />
      <argument name="shaderUniformBufferArrayNonUniformIndexing_" type="vk::Bool32" default="{}" />
      <argument name="shaderSampledImageArrayNonUniformIndexing_" type="vk::Bool32" default="{}" />
      <argument name="shaderStorageBufferArrayNonUniformIndexing_" type="vk::Bool32" default="{}" />
      <argument name="shaderStorageImageArrayNonUniformIndexing_" type="vk::Bool32" default="{}" />
      <argument name="shaderInputAttachmentArrayNonUniformIndexing_" type="vk::Bool32" default="{}" />
      <argument name="shaderUniformTexelBufferArrayNonUniformIndexing_" type="vk::Bool32" default="{}" />
      <argument name="shaderStorageTexelBufferArrayNonUniformIndexing_" type="vk::Bool32" default="{}" />
      <argument name="descriptorBindingUniformBufferUpdateAfterBind_" type="vk::Bool32" default="{}" />
      <argument name="descriptorBindingSampledImageUpdateAfterBind_" type="vk::Bool32" default="{}" />
      <argument name="descriptorBindingStorageImageUpdateAfterBind_" type="vk::Bool32" default="{}" />
      <argument name="descriptorBindingStorageBufferUpdateAfterBind_" type="vk::Bool32" default="{}" />
      <argument name="descriptorBindingUniformTexelBufferUpdateAfterBind_" type="vk::Bool32" default="{}" />
      <argument name="descriptorBindingStorageTexelBufferUpdateAfterBind_" type="vk::Bool32" default="{}" />
      <argument name="descriptorBindingUpdateUnusedWhilePending_" type="vk::Bool32" default="{}" />
      <argument name="descriptorBindingPartiallyBound_" type="vk::Bool32" default="{}" />
      <argument name="descriptorBindingVariableDescriptorCount_" type="vk::Bool32" default="{}" />
      <argument name="runtimeDescriptorArray_" type="vk::Bool32" default="{}" />
      <argument name="samplerFilterMinmax_" type="vk::Bool32" default="{}" />
      <argument name="scalarBlockLayout_" type="vk::Bool32" default="{}" />
      <argument name="imagelessFramebuffer_" type="vk::Bool32" default="{}" />
      <argument name="uniformBufferStandardLayout_" type="vk::Bool32" default="{}" />
      <argument name="shaderSubgroupExtendedTypes_" type="vk::Bool32" default="{}" />
      <argument name="separateDepthStencilLayouts_" type="vk::Bool32" default="{}" />
      <argument name="hostQueryReset_" type="vk::Bool32" default="{}" />
      <argument name="timelineSemaphore_" type="vk::Bool32" default="{}" />
      <argument name="bufferDeviceAddress_" type="vk::Bool32" default="{}" />
      <argument name="bufferDeviceAddressCaptureReplay_" type="vk::Bool32" default="{}" />
      <argument name="bufferDeviceAddressMultiDevice_" type="vk::Bool32" default="{}" />
      <argument name="vulkanMemoryModel_" type="vk::Bool32" default="{}" />
      <argument name="vulkanMemoryModelDeviceScope_" type="vk::Bool32" default="{}" />
      <argument name="vulkanMemoryModelAvailabilityVisibilityChains_" type="vk::Bool32" default="{}" />
      <argument name="shaderOutputViewportIndex_" type="vk::Bool32" default="{}" />
      <argument name="shaderOutputLayer_" type="vk::Bool32" default="{}" />
      <argument name="subgroupBroadcastDynamicId_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceVulkan12Properties">
    <function name="PhysicalDeviceVulkan12Properties">
      <argument name="driverID_" type="vk::DriverId" default="vk::DriverId::eAmdProprietary" />
      <argument name="driverName_" type="const std::array&lt;char, 256U&gt; &amp;" default="" />
      <argument name="driverInfo_" type="const std::array&lt;char, 256U&gt; &amp;" default="" />
      <argument name="conformanceVersion_" type="vk::ConformanceVersion" default="{}" />
      <argument name="denormBehaviorIndependence_" type="vk::ShaderFloatControlsIndependence" default="vk::ShaderFloatControlsIndependence::e32BitOnly" />
      <argument name="roundingModeIndependence_" type="vk::ShaderFloatControlsIndependence" default="vk::ShaderFloatControlsIndependence::e32BitOnly" />
      <argument name="shaderSignedZeroInfNanPreserveFloat16_" type="vk::Bool32" default="{}" />
      <argument name="shaderSignedZeroInfNanPreserveFloat32_" type="vk::Bool32" default="{}" />
      <argument name="shaderSignedZeroInfNanPreserveFloat64_" type="vk::Bool32" default="{}" />
      <argument name="shaderDenormPreserveFloat16_" type="vk::Bool32" default="{}" />
      <argument name="shaderDenormPreserveFloat32_" type="vk::Bool32" default="{}" />
      <argument name="shaderDenormPreserveFloat64_" type="vk::Bool32" default="{}" />
      <argument name="shaderDenormFlushToZeroFloat16_" type="vk::Bool32" default="{}" />
      <argument name="shaderDenormFlushToZeroFloat32_" type="vk::Bool32" default="{}" />
      <argument name="shaderDenormFlushToZeroFloat64_" type="vk::Bool32" default="{}" />
      <argument name="shaderRoundingModeRTEFloat16_" type="vk::Bool32" default="{}" />
      <argument name="shaderRoundingModeRTEFloat32_" type="vk::Bool32" default="{}" />
      <argument name="shaderRoundingModeRTEFloat64_" type="vk::Bool32" default="{}" />
      <argument name="shaderRoundingModeRTZFloat16_" type="vk::Bool32" default="{}" />
      <argument name="shaderRoundingModeRTZFloat32_" type="vk::Bool32" default="{}" />
      <argument name="shaderRoundingModeRTZFloat64_" type="vk::Bool32" default="{}" />
      <argument name="maxUpdateAfterBindDescriptorsInAllPools_" type="uint32_t" default="{}" />
      <argument name="shaderUniformBufferArrayNonUniformIndexingNative_" type="vk::Bool32" default="{}" />
      <argument name="shaderSampledImageArrayNonUniformIndexingNative_" type="vk::Bool32" default="{}" />
      <argument name="shaderStorageBufferArrayNonUniformIndexingNative_" type="vk::Bool32" default="{}" />
      <argument name="shaderStorageImageArrayNonUniformIndexingNative_" type="vk::Bool32" default="{}" />
      <argument name="shaderInputAttachmentArrayNonUniformIndexingNative_" type="vk::Bool32" default="{}" />
      <argument name="robustBufferAccessUpdateAfterBind_" type="vk::Bool32" default="{}" />
      <argument name="quadDivergentImplicitLod_" type="vk::Bool32" default="{}" />
      <argument name="maxPerStageDescriptorUpdateAfterBindSamplers_" type="uint32_t" default="{}" />
      <argument name="maxPerStageDescriptorUpdateAfterBindUniformBuffers_" type="uint32_t" default="{}" />
      <argument name="maxPerStageDescriptorUpdateAfterBindStorageBuffers_" type="uint32_t" default="{}" />
      <argument name="maxPerStageDescriptorUpdateAfterBindSampledImages_" type="uint32_t" default="{}" />
      <argument name="maxPerStageDescriptorUpdateAfterBindStorageImages_" type="uint32_t" default="{}" />
      <argument name="maxPerStageDescriptorUpdateAfterBindInputAttachments_" type="uint32_t" default="{}" />
      <argument name="maxPerStageUpdateAfterBindResources_" type="uint32_t" default="{}" />
      <argument name="maxDescriptorSetUpdateAfterBindSamplers_" type="uint32_t" default="{}" />
      <argument name="maxDescriptorSetUpdateAfterBindUniformBuffers_" type="uint32_t" default="{}" />
      <argument name="maxDescriptorSetUpdateAfterBindUniformBuffersDynamic_" type="uint32_t" default="{}" />
      <argument name="maxDescriptorSetUpdateAfterBindStorageBuffers_" type="uint32_t" default="{}" />
      <argument name="maxDescriptorSetUpdateAfterBindStorageBuffersDynamic_" type="uint32_t" default="{}" />
      <argument name="maxDescriptorSetUpdateAfterBindSampledImages_" type="uint32_t" default="{}" />
      <argument name="maxDescriptorSetUpdateAfterBindStorageImages_" type="uint32_t" default="{}" />
      <argument name="maxDescriptorSetUpdateAfterBindInputAttachments_" type="uint32_t" default="{}" />
      <argument name="supportedDepthResolveModes_" type="vk::ResolveModeFlags" default="" />
      <argument name="supportedStencilResolveModes_" type="vk::ResolveModeFlags" default="" />
      <argument name="independentResolveNone_" type="vk::Bool32" default="{}" />
      <argument name="independentResolve_" type="vk::Bool32" default="{}" />
      <argument name="filterMinmaxSingleComponentFormats_" type="vk::Bool32" default="{}" />
      <argument name="filterMinmaxImageComponentMapping_" type="vk::Bool32" default="{}" />
      <argument name="maxTimelineSemaphoreValueDifference_" type="uint64_t" default="{}" />
      <argument name="framebufferIntegerColorSampleCounts_" type="vk::SampleCountFlags" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceVulkanMemoryModelFeatures">
    <function name="PhysicalDeviceVulkanMemoryModelFeatures">
      <argument name="vulkanMemoryModel_" type="vk::Bool32" default="{}" />
      <argument name="vulkanMemoryModelDeviceScope_" type="vk::Bool32" default="{}" />
      <argument name="vulkanMemoryModelAvailabilityVisibilityChains_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="RenderPassAttachmentBeginInfo">
    <function name="RenderPassAttachmentBeginInfo">
      <argument name="attachments_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::ImageView&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="RenderPassCreateInfo2">
    <function name="RenderPassCreateInfo2">
      <argument name="flags_" type="vk::RenderPassCreateFlags" />
      <argument name="attachments_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::AttachmentDescription2&gt; &amp;" />
      <argument name="subpasses_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::SubpassDescription2&gt; &amp;" default="" />
      <argument name="dependencies_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::SubpassDependency2&gt; &amp;" default="" />
      <argument name="correlatedViewMasks_" type="const vk::ArrayProxyNoTemporaries&lt;const uint32_t&gt; &amp;" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SamplerReductionModeCreateInfo">
    <function name="SamplerReductionModeCreateInfo">
      <argument name="reductionMode_" type="vk::SamplerReductionMode" default="vk::SamplerReductionMode::eWeightedAverage" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SemaphoreSignalInfo">
    <function name="SemaphoreSignalInfo">
      <argument name="semaphore_" type="vk::Semaphore" default="{}" />
      <argument name="value_" type="uint64_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SemaphoreTypeCreateInfo">
    <function name="SemaphoreTypeCreateInfo">
      <argument name="semaphoreType_" type="vk::SemaphoreType" default="vk::SemaphoreType::eBinary" />
      <argument name="initialValue_" type="uint64_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SemaphoreWaitInfo">
    <function name="SemaphoreWaitInfo">
      <argument name="flags_" type="vk::SemaphoreWaitFlags" />
      <argument name="semaphores_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::Semaphore&gt; &amp;" />
      <argument name="values_" type="const vk::ArrayProxyNoTemporaries&lt;const uint64_t&gt; &amp;" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SubpassBeginInfo">
    <function name="SubpassBeginInfo">
      <argument name="contents_" type="vk::SubpassContents" default="vk::SubpassContents::eInline" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SubpassDependency2">
    <function name="SubpassDependency2">
      <argument name="srcSubpass_" type="uint32_t" default="{}" />
      <argument name="dstSubpass_" type="uint32_t" default="{}" />
      <argument name="srcStageMask_" type="vk::PipelineStageFlags" default="" />
      <argument name="dstStageMask_" type="vk::PipelineStageFlags" default="" />
      <argument name="srcAccessMask_" type="vk::AccessFlags" default="" />
      <argument name="dstAccessMask_" type="vk::AccessFlags" default="" />
      <argument name="dependencyFlags_" type="vk::DependencyFlags" default="" />
      <argument name="viewOffset_" type="int32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SubpassDescription2">
    <function name="SubpassDescription2">
      <argument name="flags_" type="vk::SubpassDescriptionFlags" />
      <argument name="pipelineBindPoint_" type="vk::PipelineBindPoint" />
      <argument name="viewMask_" type="uint32_t" />
      <argument name="inputAttachments_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::AttachmentReference2&gt; &amp;" />
      <argument name="colorAttachments_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::AttachmentReference2&gt; &amp;" default="" />
      <argument name="resolveAttachments_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::AttachmentReference2&gt; &amp;" default="" />
      <argument name="pDepthStencilAttachment_" type="const vk::AttachmentReference2 *" default="{}" />
      <argument name="preserveAttachments_" type="const vk::ArrayProxyNoTemporaries&lt;const uint32_t&gt; &amp;" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SubpassDescriptionDepthStencilResolve">
    <function name="SubpassDescriptionDepthStencilResolve">
      <argument name="depthResolveMode_" type="vk::ResolveModeFlagBits" default="vk::ResolveModeFlagBits::eNone" />
      <argument name="stencilResolveMode_" type="vk::ResolveModeFlagBits" default="vk::ResolveModeFlagBits::eNone" />
      <argument name="pDepthStencilResolveAttachment_" type="const vk::AttachmentReference2 *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SubpassEndInfo">
    <function name="SubpassEndInfo">
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="TimelineSemaphoreSubmitInfo">
    <function name="TimelineSemaphoreSubmitInfo">
      <argument name="waitSemaphoreValues_" type="const vk::ArrayProxyNoTemporaries&lt;const uint64_t&gt; &amp;" />
      <argument name="signalSemaphoreValues_" type="const vk::ArrayProxyNoTemporaries&lt;const uint64_t&gt; &amp;" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="BlitImageInfo2">
    <function name="BlitImageInfo2">
      <argument name="srcImage_" type="vk::Image" />
      <argument name="srcImageLayout_" type="vk::ImageLayout" />
      <argument name="dstImage_" type="vk::Image" />
      <argument name="dstImageLayout_" type="vk::ImageLayout" />
      <argument name="regions_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::ImageBlit2&gt; &amp;" />
      <argument name="filter_" type="vk::Filter" default="vk::Filter::eNearest" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="BufferCopy2">
    <function name="BufferCopy2">
      <argument name="srcOffset_" type="vk::DeviceSize" default="{}" />
      <argument name="dstOffset_" type="vk::DeviceSize" default="{}" />
      <argument name="size_" type="vk::DeviceSize" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="BufferImageCopy2">
    <function name="BufferImageCopy2">
      <argument name="bufferOffset_" type="vk::DeviceSize" default="{}" />
      <argument name="bufferRowLength_" type="uint32_t" default="{}" />
      <argument name="bufferImageHeight_" type="uint32_t" default="{}" />
      <argument name="imageSubresource_" type="vk::ImageSubresourceLayers" default="" />
      <argument name="imageOffset_" type="vk::Offset3D" default="{}" />
      <argument name="imageExtent_" type="vk::Extent3D" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="BufferMemoryBarrier2">
    <function name="BufferMemoryBarrier2">
      <argument name="srcStageMask_" type="vk::PipelineStageFlags2" default="" />
      <argument name="srcAccessMask_" type="vk::AccessFlags2" default="" />
      <argument name="dstStageMask_" type="vk::PipelineStageFlags2" default="" />
      <argument name="dstAccessMask_" type="vk::AccessFlags2" default="" />
      <argument name="srcQueueFamilyIndex_" type="uint32_t" default="{}" />
      <argument name="dstQueueFamilyIndex_" type="uint32_t" default="{}" />
      <argument name="buffer_" type="vk::Buffer" default="{}" />
      <argument name="offset_" type="vk::DeviceSize" default="{}" />
      <argument name="size_" type="vk::DeviceSize" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="CommandBufferInheritanceRenderingInfo">
    <function name="CommandBufferInheritanceRenderingInfo">
      <argument name="flags_" type="vk::RenderingFlags" />
      <argument name="viewMask_" type="uint32_t" />
      <argument name="colorAttachmentFormats_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::Format&gt; &amp;" />
      <argument name="depthAttachmentFormat_" type="vk::Format" default="vk::Format::eUndefined" />
      <argument name="stencilAttachmentFormat_" type="vk::Format" default="vk::Format::eUndefined" />
      <argument name="rasterizationSamples_" type="vk::SampleCountFlagBits" default="vk::SampleCountFlagBits::e1" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="CommandBufferSubmitInfo">
    <function name="CommandBufferSubmitInfo">
      <argument name="commandBuffer_" type="vk::CommandBuffer" default="{}" />
      <argument name="deviceMask_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="CopyBufferInfo2">
    <function name="CopyBufferInfo2">
      <argument name="srcBuffer_" type="vk::Buffer" />
      <argument name="dstBuffer_" type="vk::Buffer" />
      <argument name="regions_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::BufferCopy2&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="CopyBufferToImageInfo2">
    <function name="CopyBufferToImageInfo2">
      <argument name="srcBuffer_" type="vk::Buffer" />
      <argument name="dstImage_" type="vk::Image" />
      <argument name="dstImageLayout_" type="vk::ImageLayout" />
      <argument name="regions_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::BufferImageCopy2&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="CopyImageInfo2">
    <function name="CopyImageInfo2">
      <argument name="srcImage_" type="vk::Image" />
      <argument name="srcImageLayout_" type="vk::ImageLayout" />
      <argument name="dstImage_" type="vk::Image" />
      <argument name="dstImageLayout_" type="vk::ImageLayout" />
      <argument name="regions_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::ImageCopy2&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="CopyImageToBufferInfo2">
    <function name="CopyImageToBufferInfo2">
      <argument name="srcImage_" type="vk::Image" />
      <argument name="srcImageLayout_" type="vk::ImageLayout" />
      <argument name="dstBuffer_" type="vk::Buffer" />
      <argument name="regions_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::BufferImageCopy2&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DependencyInfo">
    <function name="DependencyInfo">
      <argument name="dependencyFlags_" type="vk::DependencyFlags" />
      <argument name="memoryBarriers_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::MemoryBarrier2&gt; &amp;" />
      <argument name="bufferMemoryBarriers_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::BufferMemoryBarrier2&gt; &amp;" default="" />
      <argument name="imageMemoryBarriers_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::ImageMemoryBarrier2&gt; &amp;" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DescriptorPoolInlineUniformBlockCreateInfo">
    <function name="DescriptorPoolInlineUniformBlockCreateInfo">
      <argument name="maxInlineUniformBlockBindings_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DeviceBufferMemoryRequirements">
    <function name="DeviceBufferMemoryRequirements">
      <argument name="pCreateInfo_" type="const vk::BufferCreateInfo *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DeviceImageMemoryRequirements">
    <function name="DeviceImageMemoryRequirements">
      <argument name="pCreateInfo_" type="const vk::ImageCreateInfo *" default="{}" />
      <argument name="planeAspect_" type="vk::ImageAspectFlagBits" default="vk::ImageAspectFlagBits::eColor" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DevicePrivateDataCreateInfo">
    <function name="DevicePrivateDataCreateInfo">
      <argument name="privateDataSlotRequestCount_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="FormatProperties3">
    <function name="FormatProperties3">
      <argument name="linearTilingFeatures_" type="vk::FormatFeatureFlags2" default="" />
      <argument name="optimalTilingFeatures_" type="vk::FormatFeatureFlags2" default="" />
      <argument name="bufferFeatures_" type="vk::FormatFeatureFlags2" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ImageBlit2">
    <function name="ImageBlit2">
      <argument name="srcSubresource_" type="vk::ImageSubresourceLayers" default="" />
      <argument name="srcOffsets_" type="const std::array&lt;vk::Offset3D, 2&gt; &amp;" default="" />
      <argument name="dstSubresource_" type="vk::ImageSubresourceLayers" default="" />
      <argument name="dstOffsets_" type="const std::array&lt;vk::Offset3D, 2&gt; &amp;" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ImageCopy2">
    <function name="ImageCopy2">
      <argument name="srcSubresource_" type="vk::ImageSubresourceLayers" default="" />
      <argument name="srcOffset_" type="vk::Offset3D" default="{}" />
      <argument name="dstSubresource_" type="vk::ImageSubresourceLayers" default="" />
      <argument name="dstOffset_" type="vk::Offset3D" default="{}" />
      <argument name="extent_" type="vk::Extent3D" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ImageMemoryBarrier2">
    <function name="ImageMemoryBarrier2">
      <argument name="srcStageMask_" type="vk::PipelineStageFlags2" default="" />
      <argument name="srcAccessMask_" type="vk::AccessFlags2" default="" />
      <argument name="dstStageMask_" type="vk::PipelineStageFlags2" default="" />
      <argument name="dstAccessMask_" type="vk::AccessFlags2" default="" />
      <argument name="oldLayout_" type="vk::ImageLayout" default="vk::ImageLayout::eUndefined" />
      <argument name="newLayout_" type="vk::ImageLayout" default="vk::ImageLayout::eUndefined" />
      <argument name="srcQueueFamilyIndex_" type="uint32_t" default="{}" />
      <argument name="dstQueueFamilyIndex_" type="uint32_t" default="{}" />
      <argument name="image_" type="vk::Image" default="{}" />
      <argument name="subresourceRange_" type="vk::ImageSubresourceRange" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ImageResolve2">
    <function name="ImageResolve2">
      <argument name="srcSubresource_" type="vk::ImageSubresourceLayers" default="" />
      <argument name="srcOffset_" type="vk::Offset3D" default="{}" />
      <argument name="dstSubresource_" type="vk::ImageSubresourceLayers" default="" />
      <argument name="dstOffset_" type="vk::Offset3D" default="{}" />
      <argument name="extent_" type="vk::Extent3D" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="MemoryBarrier2">
    <function name="MemoryBarrier2">
      <argument name="srcStageMask_" type="vk::PipelineStageFlags2" default="" />
      <argument name="srcAccessMask_" type="vk::AccessFlags2" default="" />
      <argument name="dstStageMask_" type="vk::PipelineStageFlags2" default="" />
      <argument name="dstAccessMask_" type="vk::AccessFlags2" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceDynamicRenderingFeatures">
    <function name="PhysicalDeviceDynamicRenderingFeatures">
      <argument name="dynamicRendering_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceImageRobustnessFeatures">
    <function name="PhysicalDeviceImageRobustnessFeatures">
      <argument name="robustImageAccess_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceInlineUniformBlockFeatures">
    <function name="PhysicalDeviceInlineUniformBlockFeatures">
      <argument name="inlineUniformBlock_" type="vk::Bool32" default="{}" />
      <argument name="descriptorBindingInlineUniformBlockUpdateAfterBind_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceInlineUniformBlockProperties">
    <function name="PhysicalDeviceInlineUniformBlockProperties">
      <argument name="maxInlineUniformBlockSize_" type="uint32_t" default="{}" />
      <argument name="maxPerStageDescriptorInlineUniformBlocks_" type="uint32_t" default="{}" />
      <argument name="maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks_" type="uint32_t" default="{}" />
      <argument name="maxDescriptorSetInlineUniformBlocks_" type="uint32_t" default="{}" />
      <argument name="maxDescriptorSetUpdateAfterBindInlineUniformBlocks_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceMaintenance4Features">
    <function name="PhysicalDeviceMaintenance4Features">
      <argument name="maintenance4_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceMaintenance4Properties">
    <function name="PhysicalDeviceMaintenance4Properties">
      <argument name="maxBufferSize_" type="vk::DeviceSize" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDevicePipelineCreationCacheControlFeatures">
    <function name="PhysicalDevicePipelineCreationCacheControlFeatures">
      <argument name="pipelineCreationCacheControl_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDevicePrivateDataFeatures">
    <function name="PhysicalDevicePrivateDataFeatures">
      <argument name="privateData_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceShaderDemoteToHelperInvocationFeatures">
    <function name="PhysicalDeviceShaderDemoteToHelperInvocationFeatures">
      <argument name="shaderDemoteToHelperInvocation_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceShaderIntegerDotProductFeatures">
    <function name="PhysicalDeviceShaderIntegerDotProductFeatures">
      <argument name="shaderIntegerDotProduct_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceShaderIntegerDotProductProperties">
    <function name="PhysicalDeviceShaderIntegerDotProductProperties">
      <argument name="integerDotProduct8BitUnsignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProduct8BitSignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProduct8BitMixedSignednessAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProduct4x8BitPackedUnsignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProduct4x8BitPackedSignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProduct4x8BitPackedMixedSignednessAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProduct16BitUnsignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProduct16BitSignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProduct16BitMixedSignednessAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProduct32BitUnsignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProduct32BitSignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProduct32BitMixedSignednessAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProduct64BitUnsignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProduct64BitSignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProduct64BitMixedSignednessAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProductAccumulatingSaturating8BitUnsignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProductAccumulatingSaturating8BitSignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProductAccumulatingSaturating16BitUnsignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProductAccumulatingSaturating16BitSignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProductAccumulatingSaturating32BitUnsignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProductAccumulatingSaturating32BitSignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProductAccumulatingSaturating64BitUnsignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProductAccumulatingSaturating64BitSignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceShaderTerminateInvocationFeatures">
    <function name="PhysicalDeviceShaderTerminateInvocationFeatures">
      <argument name="shaderTerminateInvocation_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceSubgroupSizeControlFeatures">
    <function name="PhysicalDeviceSubgroupSizeControlFeatures">
      <argument name="subgroupSizeControl_" type="vk::Bool32" default="{}" />
      <argument name="computeFullSubgroups_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceSubgroupSizeControlProperties">
    <function name="PhysicalDeviceSubgroupSizeControlProperties">
      <argument name="minSubgroupSize_" type="uint32_t" default="{}" />
      <argument name="maxSubgroupSize_" type="uint32_t" default="{}" />
      <argument name="maxComputeWorkgroupSubgroups_" type="uint32_t" default="{}" />
      <argument name="requiredSubgroupSizeStages_" type="vk::ShaderStageFlags" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceSynchronization2Features">
    <function name="PhysicalDeviceSynchronization2Features">
      <argument name="synchronization2_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceTexelBufferAlignmentProperties">
    <function name="PhysicalDeviceTexelBufferAlignmentProperties">
      <argument name="storageTexelBufferOffsetAlignmentBytes_" type="vk::DeviceSize" default="{}" />
      <argument name="storageTexelBufferOffsetSingleTexelAlignment_" type="vk::Bool32" default="{}" />
      <argument name="uniformTexelBufferOffsetAlignmentBytes_" type="vk::DeviceSize" default="{}" />
      <argument name="uniformTexelBufferOffsetSingleTexelAlignment_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceTextureCompressionASTCHDRFeatures">
    <function name="PhysicalDeviceTextureCompressionASTCHDRFeatures">
      <argument name="textureCompressionASTC_HDR_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceToolProperties">
    <function name="PhysicalDeviceToolProperties">
      <argument name="name_" type="const std::array&lt;char, 256U&gt; &amp;" default="" />
      <argument name="version_" type="const std::array&lt;char, 256U&gt; &amp;" default="" />
      <argument name="purposes_" type="vk::ToolPurposeFlags" default="" />
      <argument name="description_" type="const std::array&lt;char, 256U&gt; &amp;" default="" />
      <argument name="layer_" type="const std::array&lt;char, 256U&gt; &amp;" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceVulkan13Features">
    <function name="PhysicalDeviceVulkan13Features">
      <argument name="robustImageAccess_" type="vk::Bool32" default="{}" />
      <argument name="inlineUniformBlock_" type="vk::Bool32" default="{}" />
      <argument name="descriptorBindingInlineUniformBlockUpdateAfterBind_" type="vk::Bool32" default="{}" />
      <argument name="pipelineCreationCacheControl_" type="vk::Bool32" default="{}" />
      <argument name="privateData_" type="vk::Bool32" default="{}" />
      <argument name="shaderDemoteToHelperInvocation_" type="vk::Bool32" default="{}" />
      <argument name="shaderTerminateInvocation_" type="vk::Bool32" default="{}" />
      <argument name="subgroupSizeControl_" type="vk::Bool32" default="{}" />
      <argument name="computeFullSubgroups_" type="vk::Bool32" default="{}" />
      <argument name="synchronization2_" type="vk::Bool32" default="{}" />
      <argument name="textureCompressionASTC_HDR_" type="vk::Bool32" default="{}" />
      <argument name="shaderZeroInitializeWorkgroupMemory_" type="vk::Bool32" default="{}" />
      <argument name="dynamicRendering_" type="vk::Bool32" default="{}" />
      <argument name="shaderIntegerDotProduct_" type="vk::Bool32" default="{}" />
      <argument name="maintenance4_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceVulkan13Properties">
    <function name="PhysicalDeviceVulkan13Properties">
      <argument name="minSubgroupSize_" type="uint32_t" default="{}" />
      <argument name="maxSubgroupSize_" type="uint32_t" default="{}" />
      <argument name="maxComputeWorkgroupSubgroups_" type="uint32_t" default="{}" />
      <argument name="requiredSubgroupSizeStages_" type="vk::ShaderStageFlags" default="" />
      <argument name="maxInlineUniformBlockSize_" type="uint32_t" default="{}" />
      <argument name="maxPerStageDescriptorInlineUniformBlocks_" type="uint32_t" default="{}" />
      <argument name="maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks_" type="uint32_t" default="{}" />
      <argument name="maxDescriptorSetInlineUniformBlocks_" type="uint32_t" default="{}" />
      <argument name="maxDescriptorSetUpdateAfterBindInlineUniformBlocks_" type="uint32_t" default="{}" />
      <argument name="maxInlineUniformTotalSize_" type="uint32_t" default="{}" />
      <argument name="integerDotProduct8BitUnsignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProduct8BitSignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProduct8BitMixedSignednessAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProduct4x8BitPackedUnsignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProduct4x8BitPackedSignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProduct4x8BitPackedMixedSignednessAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProduct16BitUnsignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProduct16BitSignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProduct16BitMixedSignednessAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProduct32BitUnsignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProduct32BitSignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProduct32BitMixedSignednessAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProduct64BitUnsignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProduct64BitSignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProduct64BitMixedSignednessAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProductAccumulatingSaturating8BitUnsignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProductAccumulatingSaturating8BitSignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProductAccumulatingSaturating16BitUnsignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProductAccumulatingSaturating16BitSignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProductAccumulatingSaturating32BitUnsignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProductAccumulatingSaturating32BitSignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProductAccumulatingSaturating64BitUnsignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProductAccumulatingSaturating64BitSignedAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="storageTexelBufferOffsetAlignmentBytes_" type="vk::DeviceSize" default="{}" />
      <argument name="storageTexelBufferOffsetSingleTexelAlignment_" type="vk::Bool32" default="{}" />
      <argument name="uniformTexelBufferOffsetAlignmentBytes_" type="vk::DeviceSize" default="{}" />
      <argument name="uniformTexelBufferOffsetSingleTexelAlignment_" type="vk::Bool32" default="{}" />
      <argument name="maxBufferSize_" type="vk::DeviceSize" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceZeroInitializeWorkgroupMemoryFeatures">
    <function name="PhysicalDeviceZeroInitializeWorkgroupMemoryFeatures">
      <argument name="shaderZeroInitializeWorkgroupMemory_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineCreationFeedback">
    <function name="PipelineCreationFeedback">
      <argument name="flags_" type="vk::PipelineCreationFeedbackFlags" default="" />
      <argument name="duration_" type="uint64_t" default="{}" />
    </function>
  </struct>
  <struct name="PipelineCreationFeedbackCreateInfo">
    <function name="PipelineCreationFeedbackCreateInfo">
      <argument name="pPipelineCreationFeedback_" type="vk::PipelineCreationFeedback *" />
      <argument name="pipelineStageCreationFeedbacks_" type="const vk::ArrayProxyNoTemporaries&lt;vk::PipelineCreationFeedback&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineRenderingCreateInfo">
    <function name="PipelineRenderingCreateInfo">
      <argument name="viewMask_" type="uint32_t" />
      <argument name="colorAttachmentFormats_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::Format&gt; &amp;" />
      <argument name="depthAttachmentFormat_" type="vk::Format" default="vk::Format::eUndefined" />
      <argument name="stencilAttachmentFormat_" type="vk::Format" default="vk::Format::eUndefined" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineShaderStageRequiredSubgroupSizeCreateInfo">
    <function name="PipelineShaderStageRequiredSubgroupSizeCreateInfo">
      <argument name="requiredSubgroupSize_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PrivateDataSlotCreateInfo">
    <function name="PrivateDataSlotCreateInfo">
      <argument name="flags_" type="vk::PrivateDataSlotCreateFlags" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="RenderingAttachmentInfo">
    <function name="RenderingAttachmentInfo">
      <argument name="imageView_" type="vk::ImageView" default="{}" />
      <argument name="imageLayout_" type="vk::ImageLayout" default="vk::ImageLayout::eUndefined" />
      <argument name="resolveMode_" type="vk::ResolveModeFlagBits" default="vk::ResolveModeFlagBits::eNone" />
      <argument name="resolveImageView_" type="vk::ImageView" default="{}" />
      <argument name="resolveImageLayout_" type="vk::ImageLayout" default="vk::ImageLayout::eUndefined" />
      <argument name="loadOp_" type="vk::AttachmentLoadOp" default="vk::AttachmentLoadOp::eLoad" />
      <argument name="storeOp_" type="vk::AttachmentStoreOp" default="vk::AttachmentStoreOp::eStore" />
      <argument name="clearValue_" type="vk::ClearValue" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="RenderingInfo">
    <function name="RenderingInfo">
      <argument name="flags_" type="vk::RenderingFlags" />
      <argument name="renderArea_" type="vk::Rect2D" />
      <argument name="layerCount_" type="uint32_t" />
      <argument name="viewMask_" type="uint32_t" />
      <argument name="colorAttachments_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::RenderingAttachmentInfo&gt; &amp;" />
      <argument name="pDepthAttachment_" type="const vk::RenderingAttachmentInfo *" default="{}" />
      <argument name="pStencilAttachment_" type="const vk::RenderingAttachmentInfo *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ResolveImageInfo2">
    <function name="ResolveImageInfo2">
      <argument name="srcImage_" type="vk::Image" />
      <argument name="srcImageLayout_" type="vk::ImageLayout" />
      <argument name="dstImage_" type="vk::Image" />
      <argument name="dstImageLayout_" type="vk::ImageLayout" />
      <argument name="regions_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::ImageResolve2&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SemaphoreSubmitInfo">
    <function name="SemaphoreSubmitInfo">
      <argument name="semaphore_" type="vk::Semaphore" default="{}" />
      <argument name="value_" type="uint64_t" default="{}" />
      <argument name="stageMask_" type="vk::PipelineStageFlags2" default="" />
      <argument name="deviceIndex_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SubmitInfo2">
    <function name="SubmitInfo2">
      <argument name="flags_" type="vk::SubmitFlags" />
      <argument name="waitSemaphoreInfos_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::SemaphoreSubmitInfo&gt; &amp;" />
      <argument name="commandBufferInfos_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::CommandBufferSubmitInfo&gt; &amp;" default="" />
      <argument name="signalSemaphoreInfos_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::SemaphoreSubmitInfo&gt; &amp;" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="WriteDescriptorSetInlineUniformBlock">
    <function name="WriteDescriptorSetInlineUniformBlock">
      <argument name="dataSize_" type="uint32_t" default="{}" />
      <argument name="pData_" type="const void *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SurfaceCapabilitiesKHR">
    <function name="SurfaceCapabilitiesKHR">
      <argument name="minImageCount_" type="uint32_t" default="{}" />
      <argument name="maxImageCount_" type="uint32_t" default="{}" />
      <argument name="currentExtent_" type="vk::Extent2D" default="{}" />
      <argument name="minImageExtent_" type="vk::Extent2D" default="{}" />
      <argument name="maxImageExtent_" type="vk::Extent2D" default="{}" />
      <argument name="maxImageArrayLayers_" type="uint32_t" default="{}" />
      <argument name="supportedTransforms_" type="vk::SurfaceTransformFlagsKHR" default="" />
      <argument name="currentTransform_" type="vk::SurfaceTransformFlagBitsKHR" default="vk::SurfaceTransformFlagBitsKHR::eIdentity" />
      <argument name="supportedCompositeAlpha_" type="vk::CompositeAlphaFlagsKHR" default="" />
      <argument name="supportedUsageFlags_" type="vk::ImageUsageFlags" default="" />
    </function>
  </struct>
  <struct name="SurfaceFormatKHR">
    <function name="SurfaceFormatKHR">
      <argument name="format_" type="vk::Format" default="vk::Format::eUndefined" />
      <argument name="colorSpace_" type="vk::ColorSpaceKHR" default="vk::ColorSpaceKHR::eSrgbNonlinear" />
    </function>
  </struct>
  <struct name="AcquireNextImageInfoKHR">
    <function name="AcquireNextImageInfoKHR">
      <argument name="swapchain_" type="vk::SwapchainKHR" default="{}" />
      <argument name="timeout_" type="uint64_t" default="{}" />
      <argument name="semaphore_" type="vk::Semaphore" default="{}" />
      <argument name="fence_" type="vk::Fence" default="{}" />
      <argument name="deviceMask_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="BindImageMemorySwapchainInfoKHR">
    <function name="BindImageMemorySwapchainInfoKHR">
      <argument name="swapchain_" type="vk::SwapchainKHR" default="{}" />
      <argument name="imageIndex_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DeviceGroupPresentCapabilitiesKHR">
    <function name="DeviceGroupPresentCapabilitiesKHR">
      <argument name="presentMask_" type="const std::array&lt;uint32_t, 32U&gt; &amp;" default="" />
      <argument name="modes_" type="vk::DeviceGroupPresentModeFlagsKHR" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DeviceGroupPresentInfoKHR">
    <function name="DeviceGroupPresentInfoKHR">
      <argument name="deviceMasks_" type="const vk::ArrayProxyNoTemporaries&lt;const uint32_t&gt; &amp;" />
      <argument name="mode_" type="vk::DeviceGroupPresentModeFlagBitsKHR" default="vk::DeviceGroupPresentModeFlagBitsKHR::eLocal" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DeviceGroupSwapchainCreateInfoKHR">
    <function name="DeviceGroupSwapchainCreateInfoKHR">
      <argument name="modes_" type="vk::DeviceGroupPresentModeFlagsKHR" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ImageSwapchainCreateInfoKHR">
    <function name="ImageSwapchainCreateInfoKHR">
      <argument name="swapchain_" type="vk::SwapchainKHR" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PresentInfoKHR">
    <function name="PresentInfoKHR">
      <argument name="waitSemaphores_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::Semaphore&gt; &amp;" />
      <argument name="swapchains_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::SwapchainKHR&gt; &amp;" default="" />
      <argument name="imageIndices_" type="const vk::ArrayProxyNoTemporaries&lt;const uint32_t&gt; &amp;" default="" />
      <argument name="results_" type="const vk::ArrayProxyNoTemporaries&lt;vk::Result&gt; &amp;" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SwapchainCreateInfoKHR">
    <function name="SwapchainCreateInfoKHR">
      <argument name="flags_" type="vk::SwapchainCreateFlagsKHR" />
      <argument name="surface_" type="vk::SurfaceKHR" />
      <argument name="minImageCount_" type="uint32_t" />
      <argument name="imageFormat_" type="vk::Format" />
      <argument name="imageColorSpace_" type="vk::ColorSpaceKHR" />
      <argument name="imageExtent_" type="vk::Extent2D" />
      <argument name="imageArrayLayers_" type="uint32_t" />
      <argument name="imageUsage_" type="vk::ImageUsageFlags" />
      <argument name="imageSharingMode_" type="vk::SharingMode" />
      <argument name="queueFamilyIndices_" type="const vk::ArrayProxyNoTemporaries&lt;const uint32_t&gt; &amp;" />
      <argument name="preTransform_" type="vk::SurfaceTransformFlagBitsKHR" default="vk::SurfaceTransformFlagBitsKHR::eIdentity" />
      <argument name="compositeAlpha_" type="vk::CompositeAlphaFlagBitsKHR" default="vk::CompositeAlphaFlagBitsKHR::eOpaque" />
      <argument name="presentMode_" type="vk::PresentModeKHR" default="vk::PresentModeKHR::eImmediate" />
      <argument name="clipped_" type="vk::Bool32" default="{}" />
      <argument name="oldSwapchain_" type="vk::SwapchainKHR" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DisplayModeCreateInfoKHR">
    <function name="DisplayModeCreateInfoKHR">
      <argument name="flags_" type="vk::DisplayModeCreateFlagsKHR" default="" />
      <argument name="parameters_" type="vk::DisplayModeParametersKHR" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DisplayModeParametersKHR">
    <function name="DisplayModeParametersKHR">
      <argument name="visibleRegion_" type="vk::Extent2D" default="{}" />
      <argument name="refreshRate_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <struct name="DisplayModePropertiesKHR">
    <function name="DisplayModePropertiesKHR">
      <argument name="displayMode_" type="vk::DisplayModeKHR" default="{}" />
      <argument name="parameters_" type="vk::DisplayModeParametersKHR" default="{}" />
    </function>
  </struct>
  <struct name="DisplayPlaneCapabilitiesKHR">
    <function name="DisplayPlaneCapabilitiesKHR">
      <argument name="supportedAlpha_" type="vk::DisplayPlaneAlphaFlagsKHR" default="" />
      <argument name="minSrcPosition_" type="vk::Offset2D" default="{}" />
      <argument name="maxSrcPosition_" type="vk::Offset2D" default="{}" />
      <argument name="minSrcExtent_" type="vk::Extent2D" default="{}" />
      <argument name="maxSrcExtent_" type="vk::Extent2D" default="{}" />
      <argument name="minDstPosition_" type="vk::Offset2D" default="{}" />
      <argument name="maxDstPosition_" type="vk::Offset2D" default="{}" />
      <argument name="minDstExtent_" type="vk::Extent2D" default="{}" />
      <argument name="maxDstExtent_" type="vk::Extent2D" default="{}" />
    </function>
  </struct>
  <struct name="DisplayPlanePropertiesKHR">
    <function name="DisplayPlanePropertiesKHR">
      <argument name="currentDisplay_" type="vk::DisplayKHR" default="{}" />
      <argument name="currentStackIndex_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <struct name="DisplayPropertiesKHR">
    <function name="DisplayPropertiesKHR">
      <argument name="display_" type="vk::DisplayKHR" default="{}" />
      <argument name="displayName_" type="const char *" default="{}" />
      <argument name="physicalDimensions_" type="vk::Extent2D" default="{}" />
      <argument name="physicalResolution_" type="vk::Extent2D" default="{}" />
      <argument name="supportedTransforms_" type="vk::SurfaceTransformFlagsKHR" default="" />
      <argument name="planeReorderPossible_" type="vk::Bool32" default="{}" />
      <argument name="persistentContent_" type="vk::Bool32" default="{}" />
    </function>
  </struct>
  <struct name="DisplaySurfaceCreateInfoKHR">
    <function name="DisplaySurfaceCreateInfoKHR">
      <argument name="flags_" type="vk::DisplaySurfaceCreateFlagsKHR" default="" />
      <argument name="displayMode_" type="vk::DisplayModeKHR" default="{}" />
      <argument name="planeIndex_" type="uint32_t" default="{}" />
      <argument name="planeStackIndex_" type="uint32_t" default="{}" />
      <argument name="transform_" type="vk::SurfaceTransformFlagBitsKHR" default="vk::SurfaceTransformFlagBitsKHR::eIdentity" />
      <argument name="globalAlpha_" type="float" default="{}" />
      <argument name="alphaMode_" type="vk::DisplayPlaneAlphaFlagBitsKHR" default="vk::DisplayPlaneAlphaFlagBitsKHR::eOpaque" />
      <argument name="imageExtent_" type="vk::Extent2D" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DisplayPresentInfoKHR">
    <function name="DisplayPresentInfoKHR">
      <argument name="srcRect_" type="vk::Rect2D" default="{}" />
      <argument name="dstRect_" type="vk::Rect2D" default="{}" />
      <argument name="persistent_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DebugReportCallbackCreateInfoEXT">
    <function name="DebugReportCallbackCreateInfoEXT">
      <argument name="flags_" type="vk::DebugReportFlagsEXT" default="" />
      <argument name="pfnCallback_" type="PFN_vkDebugReportCallbackEXT" default="{}" />
      <argument name="pUserData_" type="void *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineRasterizationStateRasterizationOrderAMD">
    <function name="PipelineRasterizationStateRasterizationOrderAMD">
      <argument name="rasterizationOrder_" type="vk::RasterizationOrderAMD" default="vk::RasterizationOrderAMD::eStrict" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DebugMarkerMarkerInfoEXT">
    <function name="DebugMarkerMarkerInfoEXT">
      <argument name="pMarkerName_" type="const char *" default="{}" />
      <argument name="color_" type="const std::array&lt;float, 4&gt; &amp;" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DebugMarkerObjectNameInfoEXT">
    <function name="DebugMarkerObjectNameInfoEXT">
      <argument name="objectType_" type="vk::DebugReportObjectTypeEXT" default="vk::DebugReportObjectTypeEXT::eUnknown" />
      <argument name="object_" type="uint64_t" default="{}" />
      <argument name="pObjectName_" type="const char *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DebugMarkerObjectTagInfoEXT">
    <function name="DebugMarkerObjectTagInfoEXT">
      <argument name="objectType_" type="vk::DebugReportObjectTypeEXT" default="vk::DebugReportObjectTypeEXT::eUnknown" />
      <argument name="object_" type="uint64_t" default="{}" />
      <argument name="tagName_" type="uint64_t" default="{}" />
      <argument name="tagSize_" type="size_t" default="{}" />
      <argument name="pTag_" type="const void *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="BindVideoSessionMemoryInfoKHR">
    <function name="BindVideoSessionMemoryInfoKHR">
      <argument name="memoryBindIndex_" type="uint32_t" default="{}" />
      <argument name="memory_" type="vk::DeviceMemory" default="{}" />
      <argument name="memoryOffset_" type="vk::DeviceSize" default="{}" />
      <argument name="memorySize_" type="vk::DeviceSize" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceVideoFormatInfoKHR">
    <function name="PhysicalDeviceVideoFormatInfoKHR">
      <argument name="imageUsage_" type="vk::ImageUsageFlags" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="QueueFamilyQueryResultStatusPropertiesKHR">
    <function name="QueueFamilyQueryResultStatusPropertiesKHR">
      <argument name="queryResultStatusSupport_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="QueueFamilyVideoPropertiesKHR">
    <function name="QueueFamilyVideoPropertiesKHR">
      <argument name="videoCodecOperations_" type="vk::VideoCodecOperationFlagsKHR" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoBeginCodingInfoKHR">
    <function name="VideoBeginCodingInfoKHR">
      <argument name="flags_" type="vk::VideoBeginCodingFlagsKHR" />
      <argument name="videoSession_" type="vk::VideoSessionKHR" />
      <argument name="videoSessionParameters_" type="vk::VideoSessionParametersKHR" />
      <argument name="referenceSlots_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::VideoReferenceSlotInfoKHR&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoCapabilitiesKHR">
    <function name="VideoCapabilitiesKHR">
      <argument name="flags_" type="vk::VideoCapabilityFlagsKHR" default="" />
      <argument name="minBitstreamBufferOffsetAlignment_" type="vk::DeviceSize" default="{}" />
      <argument name="minBitstreamBufferSizeAlignment_" type="vk::DeviceSize" default="{}" />
      <argument name="pictureAccessGranularity_" type="vk::Extent2D" default="{}" />
      <argument name="minCodedExtent_" type="vk::Extent2D" default="{}" />
      <argument name="maxCodedExtent_" type="vk::Extent2D" default="{}" />
      <argument name="maxDpbSlots_" type="uint32_t" default="{}" />
      <argument name="maxActiveReferencePictures_" type="uint32_t" default="{}" />
      <argument name="stdHeaderVersion_" type="vk::ExtensionProperties" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoCodingControlInfoKHR">
    <function name="VideoCodingControlInfoKHR">
      <argument name="flags_" type="vk::VideoCodingControlFlagsKHR" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEndCodingInfoKHR">
    <function name="VideoEndCodingInfoKHR">
      <argument name="flags_" type="vk::VideoEndCodingFlagsKHR" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoFormatPropertiesKHR">
    <function name="VideoFormatPropertiesKHR">
      <argument name="format_" type="vk::Format" default="vk::Format::eUndefined" />
      <argument name="componentMapping_" type="vk::ComponentMapping" default="{}" />
      <argument name="imageCreateFlags_" type="vk::ImageCreateFlags" default="" />
      <argument name="imageType_" type="vk::ImageType" default="vk::ImageType::e1D" />
      <argument name="imageTiling_" type="vk::ImageTiling" default="vk::ImageTiling::eOptimal" />
      <argument name="imageUsageFlags_" type="vk::ImageUsageFlags" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoPictureResourceInfoKHR">
    <function name="VideoPictureResourceInfoKHR">
      <argument name="codedOffset_" type="vk::Offset2D" default="{}" />
      <argument name="codedExtent_" type="vk::Extent2D" default="{}" />
      <argument name="baseArrayLayer_" type="uint32_t" default="{}" />
      <argument name="imageViewBinding_" type="vk::ImageView" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoProfileInfoKHR">
    <function name="VideoProfileInfoKHR">
      <argument name="videoCodecOperation_" type="vk::VideoCodecOperationFlagBitsKHR" default="vk::VideoCodecOperationFlagBitsKHR::eNone" />
      <argument name="chromaSubsampling_" type="vk::VideoChromaSubsamplingFlagsKHR" default="" />
      <argument name="lumaBitDepth_" type="vk::VideoComponentBitDepthFlagsKHR" default="" />
      <argument name="chromaBitDepth_" type="vk::VideoComponentBitDepthFlagsKHR" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoProfileListInfoKHR">
    <function name="VideoProfileListInfoKHR">
      <argument name="profiles_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::VideoProfileInfoKHR&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoReferenceSlotInfoKHR">
    <function name="VideoReferenceSlotInfoKHR">
      <argument name="slotIndex_" type="int32_t" default="{}" />
      <argument name="pPictureResource_" type="const vk::VideoPictureResourceInfoKHR *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoSessionCreateInfoKHR">
    <function name="VideoSessionCreateInfoKHR">
      <argument name="queueFamilyIndex_" type="uint32_t" default="{}" />
      <argument name="flags_" type="vk::VideoSessionCreateFlagsKHR" default="" />
      <argument name="pVideoProfile_" type="const vk::VideoProfileInfoKHR *" default="{}" />
      <argument name="pictureFormat_" type="vk::Format" default="vk::Format::eUndefined" />
      <argument name="maxCodedExtent_" type="vk::Extent2D" default="{}" />
      <argument name="referencePictureFormat_" type="vk::Format" default="vk::Format::eUndefined" />
      <argument name="maxDpbSlots_" type="uint32_t" default="{}" />
      <argument name="maxActiveReferencePictures_" type="uint32_t" default="{}" />
      <argument name="pStdHeaderVersion_" type="const vk::ExtensionProperties *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoSessionMemoryRequirementsKHR">
    <function name="VideoSessionMemoryRequirementsKHR">
      <argument name="memoryBindIndex_" type="uint32_t" default="{}" />
      <argument name="memoryRequirements_" type="vk::MemoryRequirements" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoSessionParametersCreateInfoKHR">
    <function name="VideoSessionParametersCreateInfoKHR">
      <argument name="flags_" type="vk::VideoSessionParametersCreateFlagsKHR" default="" />
      <argument name="videoSessionParametersTemplate_" type="vk::VideoSessionParametersKHR" default="{}" />
      <argument name="videoSession_" type="vk::VideoSessionKHR" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoSessionParametersUpdateInfoKHR">
    <function name="VideoSessionParametersUpdateInfoKHR">
      <argument name="updateSequenceCount_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoDecodeCapabilitiesKHR">
    <function name="VideoDecodeCapabilitiesKHR">
      <argument name="flags_" type="vk::VideoDecodeCapabilityFlagsKHR" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoDecodeInfoKHR">
    <function name="VideoDecodeInfoKHR">
      <argument name="flags_" type="vk::VideoDecodeFlagsKHR" />
      <argument name="srcBuffer_" type="vk::Buffer" />
      <argument name="srcBufferOffset_" type="vk::DeviceSize" />
      <argument name="srcBufferRange_" type="vk::DeviceSize" />
      <argument name="dstPictureResource_" type="vk::VideoPictureResourceInfoKHR" />
      <argument name="pSetupReferenceSlot_" type="const vk::VideoReferenceSlotInfoKHR *" />
      <argument name="referenceSlots_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::VideoReferenceSlotInfoKHR&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoDecodeUsageInfoKHR">
    <function name="VideoDecodeUsageInfoKHR">
      <argument name="videoUsageHints_" type="vk::VideoDecodeUsageFlagsKHR" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DedicatedAllocationBufferCreateInfoNV">
    <function name="DedicatedAllocationBufferCreateInfoNV">
      <argument name="dedicatedAllocation_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DedicatedAllocationImageCreateInfoNV">
    <function name="DedicatedAllocationImageCreateInfoNV">
      <argument name="dedicatedAllocation_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DedicatedAllocationMemoryAllocateInfoNV">
    <function name="DedicatedAllocationMemoryAllocateInfoNV">
      <argument name="image_" type="vk::Image" default="{}" />
      <argument name="buffer_" type="vk::Buffer" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceTransformFeedbackFeaturesEXT">
    <function name="PhysicalDeviceTransformFeedbackFeaturesEXT">
      <argument name="transformFeedback_" type="vk::Bool32" default="{}" />
      <argument name="geometryStreams_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceTransformFeedbackPropertiesEXT">
    <function name="PhysicalDeviceTransformFeedbackPropertiesEXT">
      <argument name="maxTransformFeedbackStreams_" type="uint32_t" default="{}" />
      <argument name="maxTransformFeedbackBuffers_" type="uint32_t" default="{}" />
      <argument name="maxTransformFeedbackBufferSize_" type="vk::DeviceSize" default="{}" />
      <argument name="maxTransformFeedbackStreamDataSize_" type="uint32_t" default="{}" />
      <argument name="maxTransformFeedbackBufferDataSize_" type="uint32_t" default="{}" />
      <argument name="maxTransformFeedbackBufferDataStride_" type="uint32_t" default="{}" />
      <argument name="transformFeedbackQueries_" type="vk::Bool32" default="{}" />
      <argument name="transformFeedbackStreamsLinesTriangles_" type="vk::Bool32" default="{}" />
      <argument name="transformFeedbackRasterizationStreamSelect_" type="vk::Bool32" default="{}" />
      <argument name="transformFeedbackDraw_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineRasterizationStateStreamCreateInfoEXT">
    <function name="PipelineRasterizationStateStreamCreateInfoEXT">
      <argument name="flags_" type="vk::PipelineRasterizationStateStreamCreateFlagsEXT" default="" />
      <argument name="rasterizationStream_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="CuFunctionCreateInfoNVX">
    <function name="CuFunctionCreateInfoNVX">
      <argument name="module_" type="vk::CuModuleNVX" default="{}" />
      <argument name="pName_" type="const char *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="CuLaunchInfoNVX">
    <function name="CuLaunchInfoNVX">
      <argument name="function_" type="vk::CuFunctionNVX" />
      <argument name="gridDimX_" type="uint32_t" />
      <argument name="gridDimY_" type="uint32_t" />
      <argument name="gridDimZ_" type="uint32_t" />
      <argument name="blockDimX_" type="uint32_t" />
      <argument name="blockDimY_" type="uint32_t" />
      <argument name="blockDimZ_" type="uint32_t" />
      <argument name="sharedMemBytes_" type="uint32_t" />
      <argument name="params_" type="const vk::ArrayProxyNoTemporaries&lt;const void *const&gt; &amp;" />
      <argument name="extras_" type="const vk::ArrayProxyNoTemporaries&lt;const void *const&gt; &amp;" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="CuModuleCreateInfoNVX">
    <function name="CuModuleCreateInfoNVX">
      <argument name="dataSize_" type="size_t" default="{}" />
      <argument name="pData_" type="const void *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ImageViewAddressPropertiesNVX">
    <function name="ImageViewAddressPropertiesNVX">
      <argument name="deviceAddress_" type="vk::DeviceAddress" default="{}" />
      <argument name="size_" type="vk::DeviceSize" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ImageViewHandleInfoNVX">
    <function name="ImageViewHandleInfoNVX">
      <argument name="imageView_" type="vk::ImageView" default="{}" />
      <argument name="descriptorType_" type="vk::DescriptorType" default="vk::DescriptorType::eSampler" />
      <argument name="sampler_" type="vk::Sampler" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeH264CapabilitiesKHR">
    <function name="VideoEncodeH264CapabilitiesKHR">
      <argument name="flags_" type="vk::VideoEncodeH264CapabilityFlagsKHR" default="" />
      <argument name="maxLevelIdc_" type="int" default="{}" />
      <argument name="maxSliceCount_" type="uint32_t" default="{}" />
      <argument name="maxPPictureL0ReferenceCount_" type="uint32_t" default="{}" />
      <argument name="maxBPictureL0ReferenceCount_" type="uint32_t" default="{}" />
      <argument name="maxL1ReferenceCount_" type="uint32_t" default="{}" />
      <argument name="maxTemporalLayerCount_" type="uint32_t" default="{}" />
      <argument name="expectDyadicTemporalLayerPattern_" type="vk::Bool32" default="{}" />
      <argument name="minQp_" type="int32_t" default="{}" />
      <argument name="maxQp_" type="int32_t" default="{}" />
      <argument name="prefersGopRemainingFrames_" type="vk::Bool32" default="{}" />
      <argument name="requiresGopRemainingFrames_" type="vk::Bool32" default="{}" />
      <argument name="stdSyntaxFlags_" type="vk::VideoEncodeH264StdFlagsKHR" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeH264DpbSlotInfoKHR">
    <function name="VideoEncodeH264DpbSlotInfoKHR">
      <argument name="pStdReferenceInfo_" type="const int *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeH264FrameSizeKHR">
    <function name="VideoEncodeH264FrameSizeKHR">
      <argument name="frameISize_" type="uint32_t" default="{}" />
      <argument name="framePSize_" type="uint32_t" default="{}" />
      <argument name="frameBSize_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <struct name="VideoEncodeH264GopRemainingFrameInfoKHR">
    <function name="VideoEncodeH264GopRemainingFrameInfoKHR">
      <argument name="useGopRemainingFrames_" type="vk::Bool32" default="{}" />
      <argument name="gopRemainingI_" type="uint32_t" default="{}" />
      <argument name="gopRemainingP_" type="uint32_t" default="{}" />
      <argument name="gopRemainingB_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeH264NaluSliceInfoKHR">
    <function name="VideoEncodeH264NaluSliceInfoKHR">
      <argument name="constantQp_" type="int32_t" default="{}" />
      <argument name="pStdSliceHeader_" type="const int *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeH264PictureInfoKHR">
    <function name="VideoEncodeH264PictureInfoKHR">
      <argument name="naluSliceEntries_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::VideoEncodeH264NaluSliceInfoKHR&gt; &amp;" />
      <argument name="pStdPictureInfo_" type="const int *" default="{}" />
      <argument name="generatePrefixNalu_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeH264ProfileInfoKHR">
    <function name="VideoEncodeH264ProfileInfoKHR">
      <argument name="stdProfileIdc_" type="int" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeH264QpKHR">
    <function name="VideoEncodeH264QpKHR">
      <argument name="qpI_" type="int32_t" default="{}" />
      <argument name="qpP_" type="int32_t" default="{}" />
      <argument name="qpB_" type="int32_t" default="{}" />
    </function>
  </struct>
  <struct name="VideoEncodeH264QualityLevelPropertiesKHR">
    <function name="VideoEncodeH264QualityLevelPropertiesKHR">
      <argument name="preferredRateControlFlags_" type="vk::VideoEncodeH264RateControlFlagsKHR" default="" />
      <argument name="preferredGopFrameCount_" type="uint32_t" default="{}" />
      <argument name="preferredIdrPeriod_" type="uint32_t" default="{}" />
      <argument name="preferredConsecutiveBFrameCount_" type="uint32_t" default="{}" />
      <argument name="preferredTemporalLayerCount_" type="uint32_t" default="{}" />
      <argument name="preferredConstantQp_" type="vk::VideoEncodeH264QpKHR" default="{}" />
      <argument name="preferredMaxL0ReferenceCount_" type="uint32_t" default="{}" />
      <argument name="preferredMaxL1ReferenceCount_" type="uint32_t" default="{}" />
      <argument name="preferredStdEntropyCodingModeFlag_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeH264RateControlInfoKHR">
    <function name="VideoEncodeH264RateControlInfoKHR">
      <argument name="flags_" type="vk::VideoEncodeH264RateControlFlagsKHR" default="" />
      <argument name="gopFrameCount_" type="uint32_t" default="{}" />
      <argument name="idrPeriod_" type="uint32_t" default="{}" />
      <argument name="consecutiveBFrameCount_" type="uint32_t" default="{}" />
      <argument name="temporalLayerCount_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeH264RateControlLayerInfoKHR">
    <function name="VideoEncodeH264RateControlLayerInfoKHR">
      <argument name="useMinQp_" type="vk::Bool32" default="{}" />
      <argument name="minQp_" type="vk::VideoEncodeH264QpKHR" default="{}" />
      <argument name="useMaxQp_" type="vk::Bool32" default="{}" />
      <argument name="maxQp_" type="vk::VideoEncodeH264QpKHR" default="{}" />
      <argument name="useMaxFrameSize_" type="vk::Bool32" default="{}" />
      <argument name="maxFrameSize_" type="vk::VideoEncodeH264FrameSizeKHR" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeH264SessionCreateInfoKHR">
    <function name="VideoEncodeH264SessionCreateInfoKHR">
      <argument name="useMaxLevelIdc_" type="vk::Bool32" default="{}" />
      <argument name="maxLevelIdc_" type="int" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeH264SessionParametersAddInfoKHR">
    <function name="VideoEncodeH264SessionParametersAddInfoKHR">
      <argument name="stdSPSs_" type="const int &amp;" />
      <argument name="stdPPSs_" type="const int &amp;" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeH264SessionParametersCreateInfoKHR">
    <function name="VideoEncodeH264SessionParametersCreateInfoKHR">
      <argument name="maxStdSPSCount_" type="uint32_t" default="{}" />
      <argument name="maxStdPPSCount_" type="uint32_t" default="{}" />
      <argument name="pParametersAddInfo_" type="const vk::VideoEncodeH264SessionParametersAddInfoKHR *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeH264SessionParametersFeedbackInfoKHR">
    <function name="VideoEncodeH264SessionParametersFeedbackInfoKHR">
      <argument name="hasStdSPSOverrides_" type="vk::Bool32" default="{}" />
      <argument name="hasStdPPSOverrides_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeH264SessionParametersGetInfoKHR">
    <function name="VideoEncodeH264SessionParametersGetInfoKHR">
      <argument name="writeStdSPS_" type="vk::Bool32" default="{}" />
      <argument name="writeStdPPS_" type="vk::Bool32" default="{}" />
      <argument name="stdSPSId_" type="uint32_t" default="{}" />
      <argument name="stdPPSId_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeH265CapabilitiesKHR">
    <function name="VideoEncodeH265CapabilitiesKHR">
      <argument name="flags_" type="vk::VideoEncodeH265CapabilityFlagsKHR" default="" />
      <argument name="maxLevelIdc_" type="int" default="{}" />
      <argument name="maxSliceSegmentCount_" type="uint32_t" default="{}" />
      <argument name="maxTiles_" type="vk::Extent2D" default="{}" />
      <argument name="ctbSizes_" type="vk::VideoEncodeH265CtbSizeFlagsKHR" default="" />
      <argument name="transformBlockSizes_" type="vk::VideoEncodeH265TransformBlockSizeFlagsKHR" default="" />
      <argument name="maxPPictureL0ReferenceCount_" type="uint32_t" default="{}" />
      <argument name="maxBPictureL0ReferenceCount_" type="uint32_t" default="{}" />
      <argument name="maxL1ReferenceCount_" type="uint32_t" default="{}" />
      <argument name="maxSubLayerCount_" type="uint32_t" default="{}" />
      <argument name="expectDyadicTemporalSubLayerPattern_" type="vk::Bool32" default="{}" />
      <argument name="minQp_" type="int32_t" default="{}" />
      <argument name="maxQp_" type="int32_t" default="{}" />
      <argument name="prefersGopRemainingFrames_" type="vk::Bool32" default="{}" />
      <argument name="requiresGopRemainingFrames_" type="vk::Bool32" default="{}" />
      <argument name="stdSyntaxFlags_" type="vk::VideoEncodeH265StdFlagsKHR" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeH265DpbSlotInfoKHR">
    <function name="VideoEncodeH265DpbSlotInfoKHR">
      <argument name="pStdReferenceInfo_" type="const int *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeH265FrameSizeKHR">
    <function name="VideoEncodeH265FrameSizeKHR">
      <argument name="frameISize_" type="uint32_t" default="{}" />
      <argument name="framePSize_" type="uint32_t" default="{}" />
      <argument name="frameBSize_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <struct name="VideoEncodeH265GopRemainingFrameInfoKHR">
    <function name="VideoEncodeH265GopRemainingFrameInfoKHR">
      <argument name="useGopRemainingFrames_" type="vk::Bool32" default="{}" />
      <argument name="gopRemainingI_" type="uint32_t" default="{}" />
      <argument name="gopRemainingP_" type="uint32_t" default="{}" />
      <argument name="gopRemainingB_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeH265NaluSliceSegmentInfoKHR">
    <function name="VideoEncodeH265NaluSliceSegmentInfoKHR">
      <argument name="constantQp_" type="int32_t" default="{}" />
      <argument name="pStdSliceSegmentHeader_" type="const int *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeH265PictureInfoKHR">
    <function name="VideoEncodeH265PictureInfoKHR">
      <argument name="naluSliceSegmentEntries_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::VideoEncodeH265NaluSliceSegmentInfoKHR&gt; &amp;" />
      <argument name="pStdPictureInfo_" type="const int *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeH265ProfileInfoKHR">
    <function name="VideoEncodeH265ProfileInfoKHR">
      <argument name="stdProfileIdc_" type="int" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeH265QpKHR">
    <function name="VideoEncodeH265QpKHR">
      <argument name="qpI_" type="int32_t" default="{}" />
      <argument name="qpP_" type="int32_t" default="{}" />
      <argument name="qpB_" type="int32_t" default="{}" />
    </function>
  </struct>
  <struct name="VideoEncodeH265QualityLevelPropertiesKHR">
    <function name="VideoEncodeH265QualityLevelPropertiesKHR">
      <argument name="preferredRateControlFlags_" type="vk::VideoEncodeH265RateControlFlagsKHR" default="" />
      <argument name="preferredGopFrameCount_" type="uint32_t" default="{}" />
      <argument name="preferredIdrPeriod_" type="uint32_t" default="{}" />
      <argument name="preferredConsecutiveBFrameCount_" type="uint32_t" default="{}" />
      <argument name="preferredSubLayerCount_" type="uint32_t" default="{}" />
      <argument name="preferredConstantQp_" type="vk::VideoEncodeH265QpKHR" default="{}" />
      <argument name="preferredMaxL0ReferenceCount_" type="uint32_t" default="{}" />
      <argument name="preferredMaxL1ReferenceCount_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeH265RateControlInfoKHR">
    <function name="VideoEncodeH265RateControlInfoKHR">
      <argument name="flags_" type="vk::VideoEncodeH265RateControlFlagsKHR" default="" />
      <argument name="gopFrameCount_" type="uint32_t" default="{}" />
      <argument name="idrPeriod_" type="uint32_t" default="{}" />
      <argument name="consecutiveBFrameCount_" type="uint32_t" default="{}" />
      <argument name="subLayerCount_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeH265RateControlLayerInfoKHR">
    <function name="VideoEncodeH265RateControlLayerInfoKHR">
      <argument name="useMinQp_" type="vk::Bool32" default="{}" />
      <argument name="minQp_" type="vk::VideoEncodeH265QpKHR" default="{}" />
      <argument name="useMaxQp_" type="vk::Bool32" default="{}" />
      <argument name="maxQp_" type="vk::VideoEncodeH265QpKHR" default="{}" />
      <argument name="useMaxFrameSize_" type="vk::Bool32" default="{}" />
      <argument name="maxFrameSize_" type="vk::VideoEncodeH265FrameSizeKHR" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeH265SessionCreateInfoKHR">
    <function name="VideoEncodeH265SessionCreateInfoKHR">
      <argument name="useMaxLevelIdc_" type="vk::Bool32" default="{}" />
      <argument name="maxLevelIdc_" type="int" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeH265SessionParametersAddInfoKHR">
    <function name="VideoEncodeH265SessionParametersAddInfoKHR">
      <argument name="stdVPSs_" type="const int &amp;" />
      <argument name="stdSPSs_" type="const int &amp;" default="{}" />
      <argument name="stdPPSs_" type="const int &amp;" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeH265SessionParametersCreateInfoKHR">
    <function name="VideoEncodeH265SessionParametersCreateInfoKHR">
      <argument name="maxStdVPSCount_" type="uint32_t" default="{}" />
      <argument name="maxStdSPSCount_" type="uint32_t" default="{}" />
      <argument name="maxStdPPSCount_" type="uint32_t" default="{}" />
      <argument name="pParametersAddInfo_" type="const vk::VideoEncodeH265SessionParametersAddInfoKHR *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeH265SessionParametersFeedbackInfoKHR">
    <function name="VideoEncodeH265SessionParametersFeedbackInfoKHR">
      <argument name="hasStdVPSOverrides_" type="vk::Bool32" default="{}" />
      <argument name="hasStdSPSOverrides_" type="vk::Bool32" default="{}" />
      <argument name="hasStdPPSOverrides_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeH265SessionParametersGetInfoKHR">
    <function name="VideoEncodeH265SessionParametersGetInfoKHR">
      <argument name="writeStdVPS_" type="vk::Bool32" default="{}" />
      <argument name="writeStdSPS_" type="vk::Bool32" default="{}" />
      <argument name="writeStdPPS_" type="vk::Bool32" default="{}" />
      <argument name="stdVPSId_" type="uint32_t" default="{}" />
      <argument name="stdSPSId_" type="uint32_t" default="{}" />
      <argument name="stdPPSId_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoDecodeH264CapabilitiesKHR">
    <function name="VideoDecodeH264CapabilitiesKHR">
      <argument name="maxLevelIdc_" type="int" default="{}" />
      <argument name="fieldOffsetGranularity_" type="vk::Offset2D" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoDecodeH264DpbSlotInfoKHR">
    <function name="VideoDecodeH264DpbSlotInfoKHR">
      <argument name="pStdReferenceInfo_" type="const int *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoDecodeH264PictureInfoKHR">
    <function name="VideoDecodeH264PictureInfoKHR">
      <argument name="pStdPictureInfo_" type="const int *" />
      <argument name="sliceOffsets_" type="const vk::ArrayProxyNoTemporaries&lt;const uint32_t&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoDecodeH264ProfileInfoKHR">
    <function name="VideoDecodeH264ProfileInfoKHR">
      <argument name="stdProfileIdc_" type="int" default="{}" />
      <argument name="pictureLayout_" type="vk::VideoDecodeH264PictureLayoutFlagBitsKHR" default="vk::VideoDecodeH264PictureLayoutFlagBitsKHR::eProgressive" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoDecodeH264SessionParametersAddInfoKHR">
    <function name="VideoDecodeH264SessionParametersAddInfoKHR">
      <argument name="stdSPSs_" type="const int &amp;" />
      <argument name="stdPPSs_" type="const int &amp;" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoDecodeH264SessionParametersCreateInfoKHR">
    <function name="VideoDecodeH264SessionParametersCreateInfoKHR">
      <argument name="maxStdSPSCount_" type="uint32_t" default="{}" />
      <argument name="maxStdPPSCount_" type="uint32_t" default="{}" />
      <argument name="pParametersAddInfo_" type="const vk::VideoDecodeH264SessionParametersAddInfoKHR *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="TextureLODGatherFormatPropertiesAMD">
    <function name="TextureLODGatherFormatPropertiesAMD">
      <argument name="supportsTextureGatherLODBiasAMD_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ShaderResourceUsageAMD">
    <function name="ShaderResourceUsageAMD">
      <argument name="numUsedVgprs_" type="uint32_t" default="{}" />
      <argument name="numUsedSgprs_" type="uint32_t" default="{}" />
      <argument name="ldsSizePerLocalWorkGroup_" type="uint32_t" default="{}" />
      <argument name="ldsUsageSizeInBytes_" type="size_t" default="{}" />
      <argument name="scratchMemUsageInBytes_" type="size_t" default="{}" />
    </function>
  </struct>
  <struct name="ShaderStatisticsInfoAMD">
    <function name="ShaderStatisticsInfoAMD">
      <argument name="shaderStageMask_" type="vk::ShaderStageFlags" default="" />
      <argument name="resourceUsage_" type="vk::ShaderResourceUsageAMD" default="{}" />
      <argument name="numPhysicalVgprs_" type="uint32_t" default="{}" />
      <argument name="numPhysicalSgprs_" type="uint32_t" default="{}" />
      <argument name="numAvailableVgprs_" type="uint32_t" default="{}" />
      <argument name="numAvailableSgprs_" type="uint32_t" default="{}" />
      <argument name="computeWorkGroupSize_" type="const std::array&lt;uint32_t, 3&gt; &amp;" default="" />
    </function>
  </struct>
  <struct name="AttachmentSampleCountInfoAMD">
    <function name="AttachmentSampleCountInfoAMD">
      <argument name="colorAttachmentSamples_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::SampleCountFlagBits&gt; &amp;" />
      <argument name="depthStencilAttachmentSamples_" type="vk::SampleCountFlagBits" default="vk::SampleCountFlagBits::e1" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="MultiviewPerViewAttributesInfoNVX">
    <function name="MultiviewPerViewAttributesInfoNVX">
      <argument name="perViewAttributes_" type="vk::Bool32" default="{}" />
      <argument name="perViewAttributesPositionXOnly_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="RenderingFragmentDensityMapAttachmentInfoEXT">
    <function name="RenderingFragmentDensityMapAttachmentInfoEXT">
      <argument name="imageView_" type="vk::ImageView" default="{}" />
      <argument name="imageLayout_" type="vk::ImageLayout" default="vk::ImageLayout::eUndefined" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="RenderingFragmentShadingRateAttachmentInfoKHR">
    <function name="RenderingFragmentShadingRateAttachmentInfoKHR">
      <argument name="imageView_" type="vk::ImageView" default="{}" />
      <argument name="imageLayout_" type="vk::ImageLayout" default="vk::ImageLayout::eUndefined" />
      <argument name="shadingRateAttachmentTexelSize_" type="vk::Extent2D" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceCornerSampledImageFeaturesNV">
    <function name="PhysicalDeviceCornerSampledImageFeaturesNV">
      <argument name="cornerSampledImage_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ExternalImageFormatPropertiesNV">
    <function name="ExternalImageFormatPropertiesNV">
      <argument name="imageFormatProperties_" type="vk::ImageFormatProperties" default="" />
      <argument name="externalMemoryFeatures_" type="vk::ExternalMemoryFeatureFlagsNV" default="" />
      <argument name="exportFromImportedHandleTypes_" type="vk::ExternalMemoryHandleTypeFlagsNV" default="" />
      <argument name="compatibleHandleTypes_" type="vk::ExternalMemoryHandleTypeFlagsNV" default="" />
    </function>
  </struct>
  <struct name="ExportMemoryAllocateInfoNV">
    <function name="ExportMemoryAllocateInfoNV">
      <argument name="handleTypes_" type="vk::ExternalMemoryHandleTypeFlagsNV" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ExternalMemoryImageCreateInfoNV">
    <function name="ExternalMemoryImageCreateInfoNV">
      <argument name="handleTypes_" type="vk::ExternalMemoryHandleTypeFlagsNV" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ValidationFlagsEXT">
    <function name="ValidationFlagsEXT">
      <argument name="disabledValidationChecks_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::ValidationCheckEXT&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ImageViewASTCDecodeModeEXT">
    <function name="ImageViewASTCDecodeModeEXT">
      <argument name="decodeMode_" type="vk::Format" default="vk::Format::eUndefined" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceASTCDecodeFeaturesEXT">
    <function name="PhysicalDeviceASTCDecodeFeaturesEXT">
      <argument name="decodeModeSharedExponent_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDevicePipelineRobustnessFeaturesEXT">
    <function name="PhysicalDevicePipelineRobustnessFeaturesEXT">
      <argument name="pipelineRobustness_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDevicePipelineRobustnessPropertiesEXT">
    <function name="PhysicalDevicePipelineRobustnessPropertiesEXT">
      <argument name="defaultRobustnessStorageBuffers_" type="vk::PipelineRobustnessBufferBehaviorEXT" default="vk::PipelineRobustnessBufferBehaviorEXT::eDeviceDefault" />
      <argument name="defaultRobustnessUniformBuffers_" type="vk::PipelineRobustnessBufferBehaviorEXT" default="vk::PipelineRobustnessBufferBehaviorEXT::eDeviceDefault" />
      <argument name="defaultRobustnessVertexInputs_" type="vk::PipelineRobustnessBufferBehaviorEXT" default="vk::PipelineRobustnessBufferBehaviorEXT::eDeviceDefault" />
      <argument name="defaultRobustnessImages_" type="vk::PipelineRobustnessImageBehaviorEXT" default="vk::PipelineRobustnessImageBehaviorEXT::eDeviceDefault" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineRobustnessCreateInfoEXT">
    <function name="PipelineRobustnessCreateInfoEXT">
      <argument name="storageBuffers_" type="vk::PipelineRobustnessBufferBehaviorEXT" default="vk::PipelineRobustnessBufferBehaviorEXT::eDeviceDefault" />
      <argument name="uniformBuffers_" type="vk::PipelineRobustnessBufferBehaviorEXT" default="vk::PipelineRobustnessBufferBehaviorEXT::eDeviceDefault" />
      <argument name="vertexInputs_" type="vk::PipelineRobustnessBufferBehaviorEXT" default="vk::PipelineRobustnessBufferBehaviorEXT::eDeviceDefault" />
      <argument name="images_" type="vk::PipelineRobustnessImageBehaviorEXT" default="vk::PipelineRobustnessImageBehaviorEXT::eDeviceDefault" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ImportMemoryFdInfoKHR">
    <function name="ImportMemoryFdInfoKHR">
      <argument name="handleType_" type="vk::ExternalMemoryHandleTypeFlagBits" default="vk::ExternalMemoryHandleTypeFlagBits::eOpaqueFd" />
      <argument name="fd_" type="int" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="MemoryFdPropertiesKHR">
    <function name="MemoryFdPropertiesKHR">
      <argument name="memoryTypeBits_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="MemoryGetFdInfoKHR">
    <function name="MemoryGetFdInfoKHR">
      <argument name="memory_" type="vk::DeviceMemory" default="{}" />
      <argument name="handleType_" type="vk::ExternalMemoryHandleTypeFlagBits" default="vk::ExternalMemoryHandleTypeFlagBits::eOpaqueFd" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ImportSemaphoreFdInfoKHR">
    <function name="ImportSemaphoreFdInfoKHR">
      <argument name="semaphore_" type="vk::Semaphore" default="{}" />
      <argument name="flags_" type="vk::SemaphoreImportFlags" default="" />
      <argument name="handleType_" type="vk::ExternalSemaphoreHandleTypeFlagBits" default="vk::ExternalSemaphoreHandleTypeFlagBits::eOpaqueFd" />
      <argument name="fd_" type="int" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SemaphoreGetFdInfoKHR">
    <function name="SemaphoreGetFdInfoKHR">
      <argument name="semaphore_" type="vk::Semaphore" default="{}" />
      <argument name="handleType_" type="vk::ExternalSemaphoreHandleTypeFlagBits" default="vk::ExternalSemaphoreHandleTypeFlagBits::eOpaqueFd" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDevicePushDescriptorPropertiesKHR">
    <function name="PhysicalDevicePushDescriptorPropertiesKHR">
      <argument name="maxPushDescriptors_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="CommandBufferInheritanceConditionalRenderingInfoEXT">
    <function name="CommandBufferInheritanceConditionalRenderingInfoEXT">
      <argument name="conditionalRenderingEnable_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ConditionalRenderingBeginInfoEXT">
    <function name="ConditionalRenderingBeginInfoEXT">
      <argument name="buffer_" type="vk::Buffer" default="{}" />
      <argument name="offset_" type="vk::DeviceSize" default="{}" />
      <argument name="flags_" type="vk::ConditionalRenderingFlagsEXT" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceConditionalRenderingFeaturesEXT">
    <function name="PhysicalDeviceConditionalRenderingFeaturesEXT">
      <argument name="conditionalRendering_" type="vk::Bool32" default="{}" />
      <argument name="inheritedConditionalRendering_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PresentRegionKHR">
    <function name="PresentRegionKHR">
      <argument name="rectangles_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::RectLayerKHR&gt; &amp;" />
    </function>
  </struct>
  <struct name="PresentRegionsKHR">
    <function name="PresentRegionsKHR">
      <argument name="regions_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::PresentRegionKHR&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="RectLayerKHR">
    <function name="RectLayerKHR">
      <argument name="rect2D" type="const Rect2D &amp;" />
      <argument name="layer_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <struct name="PipelineViewportWScalingStateCreateInfoNV">
    <function name="PipelineViewportWScalingStateCreateInfoNV">
      <argument name="viewportWScalingEnable_" type="vk::Bool32" />
      <argument name="viewportWScalings_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::ViewportWScalingNV&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ViewportWScalingNV">
    <function name="ViewportWScalingNV">
      <argument name="xcoeff_" type="float" default="{}" />
      <argument name="ycoeff_" type="float" default="{}" />
    </function>
  </struct>
  <struct name="SurfaceCapabilities2EXT">
    <function name="SurfaceCapabilities2EXT">
      <argument name="minImageCount_" type="uint32_t" default="{}" />
      <argument name="maxImageCount_" type="uint32_t" default="{}" />
      <argument name="currentExtent_" type="vk::Extent2D" default="{}" />
      <argument name="minImageExtent_" type="vk::Extent2D" default="{}" />
      <argument name="maxImageExtent_" type="vk::Extent2D" default="{}" />
      <argument name="maxImageArrayLayers_" type="uint32_t" default="{}" />
      <argument name="supportedTransforms_" type="vk::SurfaceTransformFlagsKHR" default="" />
      <argument name="currentTransform_" type="vk::SurfaceTransformFlagBitsKHR" default="vk::SurfaceTransformFlagBitsKHR::eIdentity" />
      <argument name="supportedCompositeAlpha_" type="vk::CompositeAlphaFlagsKHR" default="" />
      <argument name="supportedUsageFlags_" type="vk::ImageUsageFlags" default="" />
      <argument name="supportedSurfaceCounters_" type="vk::SurfaceCounterFlagsEXT" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DeviceEventInfoEXT">
    <function name="DeviceEventInfoEXT">
      <argument name="deviceEvent_" type="vk::DeviceEventTypeEXT" default="vk::DeviceEventTypeEXT::eDisplayHotplug" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DisplayEventInfoEXT">
    <function name="DisplayEventInfoEXT">
      <argument name="displayEvent_" type="vk::DisplayEventTypeEXT" default="vk::DisplayEventTypeEXT::eFirstPixelOut" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DisplayPowerInfoEXT">
    <function name="DisplayPowerInfoEXT">
      <argument name="powerState_" type="vk::DisplayPowerStateEXT" default="vk::DisplayPowerStateEXT::eOff" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SwapchainCounterCreateInfoEXT">
    <function name="SwapchainCounterCreateInfoEXT">
      <argument name="surfaceCounters_" type="vk::SurfaceCounterFlagsEXT" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PastPresentationTimingGOOGLE">
    <function name="PastPresentationTimingGOOGLE">
      <argument name="presentID_" type="uint32_t" default="{}" />
      <argument name="desiredPresentTime_" type="uint64_t" default="{}" />
      <argument name="actualPresentTime_" type="uint64_t" default="{}" />
      <argument name="earliestPresentTime_" type="uint64_t" default="{}" />
      <argument name="presentMargin_" type="uint64_t" default="{}" />
    </function>
  </struct>
  <struct name="PresentTimeGOOGLE">
    <function name="PresentTimeGOOGLE">
      <argument name="presentID_" type="uint32_t" default="{}" />
      <argument name="desiredPresentTime_" type="uint64_t" default="{}" />
    </function>
  </struct>
  <struct name="PresentTimesInfoGOOGLE">
    <function name="PresentTimesInfoGOOGLE">
      <argument name="times_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::PresentTimeGOOGLE&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="RefreshCycleDurationGOOGLE">
    <function name="RefreshCycleDurationGOOGLE">
      <argument name="refreshDuration_" type="uint64_t" default="{}" />
    </function>
  </struct>
  <struct name="PhysicalDeviceMultiviewPerViewAttributesPropertiesNVX">
    <function name="PhysicalDeviceMultiviewPerViewAttributesPropertiesNVX">
      <argument name="perViewPositionAllComponents_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineViewportSwizzleStateCreateInfoNV">
    <function name="PipelineViewportSwizzleStateCreateInfoNV">
      <argument name="flags_" type="vk::PipelineViewportSwizzleStateCreateFlagsNV" />
      <argument name="viewportSwizzles_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::ViewportSwizzleNV&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ViewportSwizzleNV">
    <function name="ViewportSwizzleNV">
      <argument name="x_" type="vk::ViewportCoordinateSwizzleNV" default="vk::ViewportCoordinateSwizzleNV::ePositiveX" />
      <argument name="y_" type="vk::ViewportCoordinateSwizzleNV" default="vk::ViewportCoordinateSwizzleNV::ePositiveX" />
      <argument name="z_" type="vk::ViewportCoordinateSwizzleNV" default="vk::ViewportCoordinateSwizzleNV::ePositiveX" />
      <argument name="w_" type="vk::ViewportCoordinateSwizzleNV" default="vk::ViewportCoordinateSwizzleNV::ePositiveX" />
    </function>
  </struct>
  <struct name="PhysicalDeviceDiscardRectanglePropertiesEXT">
    <function name="PhysicalDeviceDiscardRectanglePropertiesEXT">
      <argument name="maxDiscardRectangles_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineDiscardRectangleStateCreateInfoEXT">
    <function name="PipelineDiscardRectangleStateCreateInfoEXT">
      <argument name="flags_" type="vk::PipelineDiscardRectangleStateCreateFlagsEXT" />
      <argument name="discardRectangleMode_" type="vk::DiscardRectangleModeEXT" />
      <argument name="discardRectangles_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::Rect2D&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceConservativeRasterizationPropertiesEXT">
    <function name="PhysicalDeviceConservativeRasterizationPropertiesEXT">
      <argument name="primitiveOverestimationSize_" type="float" default="{}" />
      <argument name="maxExtraPrimitiveOverestimationSize_" type="float" default="{}" />
      <argument name="extraPrimitiveOverestimationSizeGranularity_" type="float" default="{}" />
      <argument name="primitiveUnderestimation_" type="vk::Bool32" default="{}" />
      <argument name="conservativePointAndLineRasterization_" type="vk::Bool32" default="{}" />
      <argument name="degenerateTrianglesRasterized_" type="vk::Bool32" default="{}" />
      <argument name="degenerateLinesRasterized_" type="vk::Bool32" default="{}" />
      <argument name="fullyCoveredFragmentShaderInputVariable_" type="vk::Bool32" default="{}" />
      <argument name="conservativeRasterizationPostDepthCoverage_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineRasterizationConservativeStateCreateInfoEXT">
    <function name="PipelineRasterizationConservativeStateCreateInfoEXT">
      <argument name="flags_" type="vk::PipelineRasterizationConservativeStateCreateFlagsEXT" default="" />
      <argument name="conservativeRasterizationMode_" type="vk::ConservativeRasterizationModeEXT" default="vk::ConservativeRasterizationModeEXT::eDisabled" />
      <argument name="extraPrimitiveOverestimationSize_" type="float" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceDepthClipEnableFeaturesEXT">
    <function name="PhysicalDeviceDepthClipEnableFeaturesEXT">
      <argument name="depthClipEnable_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineRasterizationDepthClipStateCreateInfoEXT">
    <function name="PipelineRasterizationDepthClipStateCreateInfoEXT">
      <argument name="flags_" type="vk::PipelineRasterizationDepthClipStateCreateFlagsEXT" default="" />
      <argument name="depthClipEnable_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="HdrMetadataEXT">
    <function name="HdrMetadataEXT">
      <argument name="displayPrimaryRed_" type="vk::XYColorEXT" default="{}" />
      <argument name="displayPrimaryGreen_" type="vk::XYColorEXT" default="{}" />
      <argument name="displayPrimaryBlue_" type="vk::XYColorEXT" default="{}" />
      <argument name="whitePoint_" type="vk::XYColorEXT" default="{}" />
      <argument name="maxLuminance_" type="float" default="{}" />
      <argument name="minLuminance_" type="float" default="{}" />
      <argument name="maxContentLightLevel_" type="float" default="{}" />
      <argument name="maxFrameAverageLightLevel_" type="float" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="XYColorEXT">
    <function name="XYColorEXT">
      <argument name="x_" type="float" default="{}" />
      <argument name="y_" type="float" default="{}" />
    </function>
  </struct>
  <struct name="PhysicalDeviceRelaxedLineRasterizationFeaturesIMG">
    <function name="PhysicalDeviceRelaxedLineRasterizationFeaturesIMG">
      <argument name="relaxedLineRasterization_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SharedPresentSurfaceCapabilitiesKHR">
    <function name="SharedPresentSurfaceCapabilitiesKHR">
      <argument name="sharedPresentSupportedUsageFlags_" type="vk::ImageUsageFlags" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="FenceGetFdInfoKHR">
    <function name="FenceGetFdInfoKHR">
      <argument name="fence_" type="vk::Fence" default="{}" />
      <argument name="handleType_" type="vk::ExternalFenceHandleTypeFlagBits" default="vk::ExternalFenceHandleTypeFlagBits::eOpaqueFd" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ImportFenceFdInfoKHR">
    <function name="ImportFenceFdInfoKHR">
      <argument name="fence_" type="vk::Fence" default="{}" />
      <argument name="flags_" type="vk::FenceImportFlags" default="" />
      <argument name="handleType_" type="vk::ExternalFenceHandleTypeFlagBits" default="vk::ExternalFenceHandleTypeFlagBits::eOpaqueFd" />
      <argument name="fd_" type="int" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="AcquireProfilingLockInfoKHR">
    <function name="AcquireProfilingLockInfoKHR">
      <argument name="flags_" type="vk::AcquireProfilingLockFlagsKHR" default="" />
      <argument name="timeout_" type="uint64_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PerformanceCounterDescriptionKHR">
    <function name="PerformanceCounterDescriptionKHR">
      <argument name="flags_" type="vk::PerformanceCounterDescriptionFlagsKHR" default="" />
      <argument name="name_" type="const std::array&lt;char, 256U&gt; &amp;" default="" />
      <argument name="category_" type="const std::array&lt;char, 256U&gt; &amp;" default="" />
      <argument name="description_" type="const std::array&lt;char, 256U&gt; &amp;" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PerformanceCounterKHR">
    <function name="PerformanceCounterKHR">
      <argument name="unit_" type="vk::PerformanceCounterUnitKHR" default="vk::PerformanceCounterUnitKHR::eGeneric" />
      <argument name="scope_" type="vk::PerformanceCounterScopeKHR" default="vk::PerformanceCounterScopeKHR::eCommandBuffer" />
      <argument name="storage_" type="vk::PerformanceCounterStorageKHR" default="vk::PerformanceCounterStorageKHR::eInt32" />
      <argument name="uuid_" type="const std::array&lt;uint8_t, 16U&gt; &amp;" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <union name="PerformanceCounterResultKHR">
    <function name="PerformanceCounterResultKHR">
      <argument name="int32_" type="int32_t" default="{}" />
    </function>
    <function name="PerformanceCounterResultKHR">
      <argument name="int64_" type="int64_t" />
    </function>
    <function name="PerformanceCounterResultKHR">
      <argument name="uint32_" type="uint32_t" />
    </function>
    <function name="PerformanceCounterResultKHR">
      <argument name="uint64_" type="uint64_t" />
    </function>
    <function name="PerformanceCounterResultKHR">
      <argument name="float32_" type="float" />
    </function>
    <function name="PerformanceCounterResultKHR">
      <argument name="float64_" type="double" />
    </function>
  </union>
  <struct name="PerformanceQuerySubmitInfoKHR">
    <function name="PerformanceQuerySubmitInfoKHR">
      <argument name="counterPassIndex_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDevicePerformanceQueryFeaturesKHR">
    <function name="PhysicalDevicePerformanceQueryFeaturesKHR">
      <argument name="performanceCounterQueryPools_" type="vk::Bool32" default="{}" />
      <argument name="performanceCounterMultipleQueryPools_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDevicePerformanceQueryPropertiesKHR">
    <function name="PhysicalDevicePerformanceQueryPropertiesKHR">
      <argument name="allowCommandBufferQueryCopies_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="QueryPoolPerformanceCreateInfoKHR">
    <function name="QueryPoolPerformanceCreateInfoKHR">
      <argument name="queueFamilyIndex_" type="uint32_t" />
      <argument name="counterIndices_" type="const vk::ArrayProxyNoTemporaries&lt;const uint32_t&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceSurfaceInfo2KHR">
    <function name="PhysicalDeviceSurfaceInfo2KHR">
      <argument name="surface_" type="vk::SurfaceKHR" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SurfaceCapabilities2KHR">
    <function name="SurfaceCapabilities2KHR">
      <argument name="surfaceCapabilities_" type="vk::SurfaceCapabilitiesKHR" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SurfaceFormat2KHR">
    <function name="SurfaceFormat2KHR">
      <argument name="surfaceFormat_" type="vk::SurfaceFormatKHR" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DisplayModeProperties2KHR">
    <function name="DisplayModeProperties2KHR">
      <argument name="displayModeProperties_" type="vk::DisplayModePropertiesKHR" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DisplayPlaneCapabilities2KHR">
    <function name="DisplayPlaneCapabilities2KHR">
      <argument name="capabilities_" type="vk::DisplayPlaneCapabilitiesKHR" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DisplayPlaneInfo2KHR">
    <function name="DisplayPlaneInfo2KHR">
      <argument name="mode_" type="vk::DisplayModeKHR" default="{}" />
      <argument name="planeIndex_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DisplayPlaneProperties2KHR">
    <function name="DisplayPlaneProperties2KHR">
      <argument name="displayPlaneProperties_" type="vk::DisplayPlanePropertiesKHR" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DisplayProperties2KHR">
    <function name="DisplayProperties2KHR">
      <argument name="displayProperties_" type="vk::DisplayPropertiesKHR" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DebugUtilsLabelEXT">
    <function name="DebugUtilsLabelEXT">
      <argument name="pLabelName_" type="const char *" default="{}" />
      <argument name="color_" type="const std::array&lt;float, 4&gt; &amp;" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DebugUtilsMessengerCallbackDataEXT">
    <function name="DebugUtilsMessengerCallbackDataEXT">
      <argument name="flags_" type="vk::DebugUtilsMessengerCallbackDataFlagsEXT" />
      <argument name="pMessageIdName_" type="const char *" />
      <argument name="messageIdNumber_" type="int32_t" />
      <argument name="pMessage_" type="const char *" />
      <argument name="queueLabels_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::DebugUtilsLabelEXT&gt; &amp;" />
      <argument name="cmdBufLabels_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::DebugUtilsLabelEXT&gt; &amp;" default="" />
      <argument name="objects_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::DebugUtilsObjectNameInfoEXT&gt; &amp;" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DebugUtilsMessengerCreateInfoEXT">
    <function name="DebugUtilsMessengerCreateInfoEXT">
      <argument name="flags_" type="vk::DebugUtilsMessengerCreateFlagsEXT" default="" />
      <argument name="messageSeverity_" type="vk::DebugUtilsMessageSeverityFlagsEXT" default="" />
      <argument name="messageType_" type="vk::DebugUtilsMessageTypeFlagsEXT" default="" />
      <argument name="pfnUserCallback_" type="PFN_vkDebugUtilsMessengerCallbackEXT" default="{}" />
      <argument name="pUserData_" type="void *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DebugUtilsObjectNameInfoEXT">
    <function name="DebugUtilsObjectNameInfoEXT">
      <argument name="objectType_" type="vk::ObjectType" default="vk::ObjectType::eUnknown" />
      <argument name="objectHandle_" type="uint64_t" default="{}" />
      <argument name="pObjectName_" type="const char *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DebugUtilsObjectTagInfoEXT">
    <function name="DebugUtilsObjectTagInfoEXT">
      <argument name="objectType_" type="vk::ObjectType" default="vk::ObjectType::eUnknown" />
      <argument name="objectHandle_" type="uint64_t" default="{}" />
      <argument name="tagName_" type="uint64_t" default="{}" />
      <argument name="tagSize_" type="size_t" default="{}" />
      <argument name="pTag_" type="const void *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="AttachmentSampleLocationsEXT">
    <function name="AttachmentSampleLocationsEXT">
      <argument name="attachmentIndex_" type="uint32_t" default="{}" />
      <argument name="sampleLocationsInfo_" type="vk::SampleLocationsInfoEXT" default="{}" />
    </function>
  </struct>
  <struct name="MultisamplePropertiesEXT">
    <function name="MultisamplePropertiesEXT">
      <argument name="maxSampleLocationGridSize_" type="vk::Extent2D" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceSampleLocationsPropertiesEXT">
    <function name="PhysicalDeviceSampleLocationsPropertiesEXT">
      <argument name="sampleLocationSampleCounts_" type="vk::SampleCountFlags" default="" />
      <argument name="maxSampleLocationGridSize_" type="vk::Extent2D" default="{}" />
      <argument name="sampleLocationCoordinateRange_" type="const std::array&lt;float, 2&gt; &amp;" default="" />
      <argument name="sampleLocationSubPixelBits_" type="uint32_t" default="{}" />
      <argument name="variableSampleLocations_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineSampleLocationsStateCreateInfoEXT">
    <function name="PipelineSampleLocationsStateCreateInfoEXT">
      <argument name="sampleLocationsEnable_" type="vk::Bool32" default="{}" />
      <argument name="sampleLocationsInfo_" type="vk::SampleLocationsInfoEXT" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="RenderPassSampleLocationsBeginInfoEXT">
    <function name="RenderPassSampleLocationsBeginInfoEXT">
      <argument name="attachmentInitialSampleLocations_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::AttachmentSampleLocationsEXT&gt; &amp;" />
      <argument name="postSubpassSampleLocations_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::SubpassSampleLocationsEXT&gt; &amp;" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SampleLocationEXT">
    <function name="SampleLocationEXT">
      <argument name="x_" type="float" default="{}" />
      <argument name="y_" type="float" default="{}" />
    </function>
  </struct>
  <struct name="SampleLocationsInfoEXT">
    <function name="SampleLocationsInfoEXT">
      <argument name="sampleLocationsPerPixel_" type="vk::SampleCountFlagBits" />
      <argument name="sampleLocationGridSize_" type="vk::Extent2D" />
      <argument name="sampleLocations_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::SampleLocationEXT&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SubpassSampleLocationsEXT">
    <function name="SubpassSampleLocationsEXT">
      <argument name="subpassIndex_" type="uint32_t" default="{}" />
      <argument name="sampleLocationsInfo_" type="vk::SampleLocationsInfoEXT" default="{}" />
    </function>
  </struct>
  <struct name="PhysicalDeviceBlendOperationAdvancedFeaturesEXT">
    <function name="PhysicalDeviceBlendOperationAdvancedFeaturesEXT">
      <argument name="advancedBlendCoherentOperations_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceBlendOperationAdvancedPropertiesEXT">
    <function name="PhysicalDeviceBlendOperationAdvancedPropertiesEXT">
      <argument name="advancedBlendMaxColorAttachments_" type="uint32_t" default="{}" />
      <argument name="advancedBlendIndependentBlend_" type="vk::Bool32" default="{}" />
      <argument name="advancedBlendNonPremultipliedSrcColor_" type="vk::Bool32" default="{}" />
      <argument name="advancedBlendNonPremultipliedDstColor_" type="vk::Bool32" default="{}" />
      <argument name="advancedBlendCorrelatedOverlap_" type="vk::Bool32" default="{}" />
      <argument name="advancedBlendAllOperations_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineColorBlendAdvancedStateCreateInfoEXT">
    <function name="PipelineColorBlendAdvancedStateCreateInfoEXT">
      <argument name="srcPremultiplied_" type="vk::Bool32" default="{}" />
      <argument name="dstPremultiplied_" type="vk::Bool32" default="{}" />
      <argument name="blendOverlap_" type="vk::BlendOverlapEXT" default="vk::BlendOverlapEXT::eUncorrelated" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineCoverageToColorStateCreateInfoNV">
    <function name="PipelineCoverageToColorStateCreateInfoNV">
      <argument name="flags_" type="vk::PipelineCoverageToColorStateCreateFlagsNV" default="" />
      <argument name="coverageToColorEnable_" type="vk::Bool32" default="{}" />
      <argument name="coverageToColorLocation_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="AabbPositionsKHR">
    <function name="AabbPositionsKHR">
      <argument name="minX_" type="float" default="{}" />
      <argument name="minY_" type="float" default="{}" />
      <argument name="minZ_" type="float" default="{}" />
      <argument name="maxX_" type="float" default="{}" />
      <argument name="maxY_" type="float" default="{}" />
      <argument name="maxZ_" type="float" default="{}" />
    </function>
  </struct>
  <struct name="AccelerationStructureBuildGeometryInfoKHR">
    <function name="AccelerationStructureBuildGeometryInfoKHR">
      <argument name="type_" type="vk::AccelerationStructureTypeKHR" />
      <argument name="flags_" type="vk::BuildAccelerationStructureFlagsKHR" />
      <argument name="mode_" type="vk::BuildAccelerationStructureModeKHR" />
      <argument name="srcAccelerationStructure_" type="vk::AccelerationStructureKHR" />
      <argument name="dstAccelerationStructure_" type="vk::AccelerationStructureKHR" />
      <argument name="geometries_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::AccelerationStructureGeometryKHR&gt; &amp;" />
      <argument name="pGeometries_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::AccelerationStructureGeometryKHR *const&gt; &amp;" default="" />
      <argument name="scratchData_" type="vk::DeviceOrHostAddressKHR" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="AccelerationStructureBuildRangeInfoKHR">
    <function name="AccelerationStructureBuildRangeInfoKHR">
      <argument name="primitiveCount_" type="uint32_t" default="{}" />
      <argument name="primitiveOffset_" type="uint32_t" default="{}" />
      <argument name="firstVertex_" type="uint32_t" default="{}" />
      <argument name="transformOffset_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <struct name="AccelerationStructureBuildSizesInfoKHR">
    <function name="AccelerationStructureBuildSizesInfoKHR">
      <argument name="accelerationStructureSize_" type="vk::DeviceSize" default="{}" />
      <argument name="updateScratchSize_" type="vk::DeviceSize" default="{}" />
      <argument name="buildScratchSize_" type="vk::DeviceSize" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="AccelerationStructureCreateInfoKHR">
    <function name="AccelerationStructureCreateInfoKHR">
      <argument name="createFlags_" type="vk::AccelerationStructureCreateFlagsKHR" default="" />
      <argument name="buffer_" type="vk::Buffer" default="{}" />
      <argument name="offset_" type="vk::DeviceSize" default="{}" />
      <argument name="size_" type="vk::DeviceSize" default="{}" />
      <argument name="type_" type="vk::AccelerationStructureTypeKHR" default="vk::AccelerationStructureTypeKHR::eTopLevel" />
      <argument name="deviceAddress_" type="vk::DeviceAddress" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="AccelerationStructureDeviceAddressInfoKHR">
    <function name="AccelerationStructureDeviceAddressInfoKHR">
      <argument name="accelerationStructure_" type="vk::AccelerationStructureKHR" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="AccelerationStructureGeometryAabbsDataKHR">
    <function name="AccelerationStructureGeometryAabbsDataKHR">
      <argument name="data_" type="vk::DeviceOrHostAddressConstKHR" default="{}" />
      <argument name="stride_" type="vk::DeviceSize" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <union name="AccelerationStructureGeometryDataKHR">
    <function name="AccelerationStructureGeometryDataKHR">
      <argument name="triangles_" type="vk::AccelerationStructureGeometryTrianglesDataKHR" default="{}" />
    </function>
    <function name="AccelerationStructureGeometryDataKHR">
      <argument name="aabbs_" type="vk::AccelerationStructureGeometryAabbsDataKHR" />
    </function>
    <function name="AccelerationStructureGeometryDataKHR">
      <argument name="instances_" type="vk::AccelerationStructureGeometryInstancesDataKHR" />
    </function>
  </union>
  <struct name="AccelerationStructureGeometryInstancesDataKHR">
    <function name="AccelerationStructureGeometryInstancesDataKHR">
      <argument name="arrayOfPointers_" type="vk::Bool32" default="{}" />
      <argument name="data_" type="vk::DeviceOrHostAddressConstKHR" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="AccelerationStructureGeometryKHR">
    <function name="AccelerationStructureGeometryKHR">
      <argument name="geometryType_" type="vk::GeometryTypeKHR" default="vk::GeometryTypeKHR::eTriangles" />
      <argument name="geometry_" type="vk::AccelerationStructureGeometryDataKHR" default="{}" />
      <argument name="flags_" type="vk::GeometryFlagsKHR" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="AccelerationStructureGeometryTrianglesDataKHR">
    <function name="AccelerationStructureGeometryTrianglesDataKHR">
      <argument name="vertexFormat_" type="vk::Format" default="vk::Format::eUndefined" />
      <argument name="vertexData_" type="vk::DeviceOrHostAddressConstKHR" default="{}" />
      <argument name="vertexStride_" type="vk::DeviceSize" default="{}" />
      <argument name="maxVertex_" type="uint32_t" default="{}" />
      <argument name="indexType_" type="vk::IndexType" default="vk::IndexType::eUint16" />
      <argument name="indexData_" type="vk::DeviceOrHostAddressConstKHR" default="{}" />
      <argument name="transformData_" type="vk::DeviceOrHostAddressConstKHR" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="AccelerationStructureInstanceKHR">
    <function name="AccelerationStructureInstanceKHR">
      <argument name="transform_" type="vk::TransformMatrixKHR" default="{}" />
      <argument name="instanceCustomIndex_" type="uint32_t" default="{}" />
      <argument name="mask_" type="uint32_t" default="{}" />
      <argument name="instanceShaderBindingTableRecordOffset_" type="uint32_t" default="{}" />
      <argument name="flags_" type="vk::GeometryInstanceFlagsKHR" default="" />
      <argument name="accelerationStructureReference_" type="uint64_t" default="{}" />
    </function>
  </struct>
  <struct name="AccelerationStructureVersionInfoKHR">
    <function name="AccelerationStructureVersionInfoKHR">
      <argument name="pVersionData_" type="const uint8_t *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="CopyAccelerationStructureInfoKHR">
    <function name="CopyAccelerationStructureInfoKHR">
      <argument name="src_" type="vk::AccelerationStructureKHR" default="{}" />
      <argument name="dst_" type="vk::AccelerationStructureKHR" default="{}" />
      <argument name="mode_" type="vk::CopyAccelerationStructureModeKHR" default="vk::CopyAccelerationStructureModeKHR::eClone" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="CopyAccelerationStructureToMemoryInfoKHR">
    <function name="CopyAccelerationStructureToMemoryInfoKHR">
      <argument name="src_" type="vk::AccelerationStructureKHR" default="{}" />
      <argument name="dst_" type="vk::DeviceOrHostAddressKHR" default="{}" />
      <argument name="mode_" type="vk::CopyAccelerationStructureModeKHR" default="vk::CopyAccelerationStructureModeKHR::eClone" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="CopyMemoryToAccelerationStructureInfoKHR">
    <function name="CopyMemoryToAccelerationStructureInfoKHR">
      <argument name="src_" type="vk::DeviceOrHostAddressConstKHR" default="{}" />
      <argument name="dst_" type="vk::AccelerationStructureKHR" default="{}" />
      <argument name="mode_" type="vk::CopyAccelerationStructureModeKHR" default="vk::CopyAccelerationStructureModeKHR::eClone" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <union name="DeviceOrHostAddressConstKHR">
    <function name="DeviceOrHostAddressConstKHR">
      <argument name="deviceAddress_" type="vk::DeviceAddress" default="{}" />
    </function>
    <function name="DeviceOrHostAddressConstKHR">
      <argument name="hostAddress_" type="const void *" />
    </function>
  </union>
  <union name="DeviceOrHostAddressKHR">
    <function name="DeviceOrHostAddressKHR">
      <argument name="deviceAddress_" type="vk::DeviceAddress" default="{}" />
    </function>
    <function name="DeviceOrHostAddressKHR">
      <argument name="hostAddress_" type="void *" />
    </function>
  </union>
  <struct name="PhysicalDeviceAccelerationStructureFeaturesKHR">
    <function name="PhysicalDeviceAccelerationStructureFeaturesKHR">
      <argument name="accelerationStructure_" type="vk::Bool32" default="{}" />
      <argument name="accelerationStructureCaptureReplay_" type="vk::Bool32" default="{}" />
      <argument name="accelerationStructureIndirectBuild_" type="vk::Bool32" default="{}" />
      <argument name="accelerationStructureHostCommands_" type="vk::Bool32" default="{}" />
      <argument name="descriptorBindingAccelerationStructureUpdateAfterBind_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceAccelerationStructurePropertiesKHR">
    <function name="PhysicalDeviceAccelerationStructurePropertiesKHR">
      <argument name="maxGeometryCount_" type="uint64_t" default="{}" />
      <argument name="maxInstanceCount_" type="uint64_t" default="{}" />
      <argument name="maxPrimitiveCount_" type="uint64_t" default="{}" />
      <argument name="maxPerStageDescriptorAccelerationStructures_" type="uint32_t" default="{}" />
      <argument name="maxPerStageDescriptorUpdateAfterBindAccelerationStructures_" type="uint32_t" default="{}" />
      <argument name="maxDescriptorSetAccelerationStructures_" type="uint32_t" default="{}" />
      <argument name="maxDescriptorSetUpdateAfterBindAccelerationStructures_" type="uint32_t" default="{}" />
      <argument name="minAccelerationStructureScratchOffsetAlignment_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="TransformMatrixKHR">
    <function name="TransformMatrixKHR">
      <argument name="matrix_" type="const std::array&lt;std::array&lt;float, 4&gt;, 3&gt; &amp;" default="" />
    </function>
  </struct>
  <struct name="WriteDescriptorSetAccelerationStructureKHR">
    <function name="WriteDescriptorSetAccelerationStructureKHR">
      <argument name="accelerationStructures_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::AccelerationStructureKHR&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceRayTracingPipelineFeaturesKHR">
    <function name="PhysicalDeviceRayTracingPipelineFeaturesKHR">
      <argument name="rayTracingPipeline_" type="vk::Bool32" default="{}" />
      <argument name="rayTracingPipelineShaderGroupHandleCaptureReplay_" type="vk::Bool32" default="{}" />
      <argument name="rayTracingPipelineShaderGroupHandleCaptureReplayMixed_" type="vk::Bool32" default="{}" />
      <argument name="rayTracingPipelineTraceRaysIndirect_" type="vk::Bool32" default="{}" />
      <argument name="rayTraversalPrimitiveCulling_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceRayTracingPipelinePropertiesKHR">
    <function name="PhysicalDeviceRayTracingPipelinePropertiesKHR">
      <argument name="shaderGroupHandleSize_" type="uint32_t" default="{}" />
      <argument name="maxRayRecursionDepth_" type="uint32_t" default="{}" />
      <argument name="maxShaderGroupStride_" type="uint32_t" default="{}" />
      <argument name="shaderGroupBaseAlignment_" type="uint32_t" default="{}" />
      <argument name="shaderGroupHandleCaptureReplaySize_" type="uint32_t" default="{}" />
      <argument name="maxRayDispatchInvocationCount_" type="uint32_t" default="{}" />
      <argument name="shaderGroupHandleAlignment_" type="uint32_t" default="{}" />
      <argument name="maxRayHitAttributeSize_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="RayTracingPipelineCreateInfoKHR">
    <function name="RayTracingPipelineCreateInfoKHR">
      <argument name="flags_" type="vk::PipelineCreateFlags" />
      <argument name="stages_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::PipelineShaderStageCreateInfo&gt; &amp;" />
      <argument name="groups_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::RayTracingShaderGroupCreateInfoKHR&gt; &amp;" default="" />
      <argument name="maxPipelineRayRecursionDepth_" type="uint32_t" default="{}" />
      <argument name="pLibraryInfo_" type="const vk::PipelineLibraryCreateInfoKHR *" default="{}" />
      <argument name="pLibraryInterface_" type="const vk::RayTracingPipelineInterfaceCreateInfoKHR *" default="{}" />
      <argument name="pDynamicState_" type="const vk::PipelineDynamicStateCreateInfo *" default="{}" />
      <argument name="layout_" type="vk::PipelineLayout" default="{}" />
      <argument name="basePipelineHandle_" type="vk::Pipeline" default="{}" />
      <argument name="basePipelineIndex_" type="int32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="RayTracingPipelineInterfaceCreateInfoKHR">
    <function name="RayTracingPipelineInterfaceCreateInfoKHR">
      <argument name="maxPipelineRayPayloadSize_" type="uint32_t" default="{}" />
      <argument name="maxPipelineRayHitAttributeSize_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="RayTracingShaderGroupCreateInfoKHR">
    <function name="RayTracingShaderGroupCreateInfoKHR">
      <argument name="type_" type="vk::RayTracingShaderGroupTypeKHR" default="vk::RayTracingShaderGroupTypeKHR::eGeneral" />
      <argument name="generalShader_" type="uint32_t" default="vk::ShaderUnusedKHR" />
      <argument name="closestHitShader_" type="uint32_t" default="vk::ShaderUnusedKHR" />
      <argument name="anyHitShader_" type="uint32_t" default="vk::ShaderUnusedKHR" />
      <argument name="intersectionShader_" type="uint32_t" default="vk::ShaderUnusedKHR" />
      <argument name="pShaderGroupCaptureReplayHandle_" type="const void *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="StridedDeviceAddressRegionKHR">
    <function name="StridedDeviceAddressRegionKHR">
      <argument name="deviceAddress_" type="vk::DeviceAddress" default="{}" />
      <argument name="stride_" type="vk::DeviceSize" default="{}" />
      <argument name="size_" type="vk::DeviceSize" default="{}" />
    </function>
  </struct>
  <struct name="TraceRaysIndirectCommandKHR">
    <function name="TraceRaysIndirectCommandKHR">
      <argument name="extent2D" type="const Extent2D &amp;" />
      <argument name="depth_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <struct name="PhysicalDeviceRayQueryFeaturesKHR">
    <function name="PhysicalDeviceRayQueryFeaturesKHR">
      <argument name="rayQuery_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineCoverageModulationStateCreateInfoNV">
    <function name="PipelineCoverageModulationStateCreateInfoNV">
      <argument name="flags_" type="vk::PipelineCoverageModulationStateCreateFlagsNV" />
      <argument name="coverageModulationMode_" type="vk::CoverageModulationModeNV" />
      <argument name="coverageModulationTableEnable_" type="vk::Bool32" />
      <argument name="coverageModulationTable_" type="const vk::ArrayProxyNoTemporaries&lt;const float&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceShaderSMBuiltinsFeaturesNV">
    <function name="PhysicalDeviceShaderSMBuiltinsFeaturesNV">
      <argument name="shaderSMBuiltins_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceShaderSMBuiltinsPropertiesNV">
    <function name="PhysicalDeviceShaderSMBuiltinsPropertiesNV">
      <argument name="shaderSMCount_" type="uint32_t" default="{}" />
      <argument name="shaderWarpsPerSM_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DrmFormatModifierProperties2EXT">
    <function name="DrmFormatModifierProperties2EXT">
      <argument name="drmFormatModifier_" type="uint64_t" default="{}" />
      <argument name="drmFormatModifierPlaneCount_" type="uint32_t" default="{}" />
      <argument name="drmFormatModifierTilingFeatures_" type="vk::FormatFeatureFlags2" default="" />
    </function>
  </struct>
  <struct name="DrmFormatModifierPropertiesEXT">
    <function name="DrmFormatModifierPropertiesEXT">
      <argument name="drmFormatModifier_" type="uint64_t" default="{}" />
      <argument name="drmFormatModifierPlaneCount_" type="uint32_t" default="{}" />
      <argument name="drmFormatModifierTilingFeatures_" type="vk::FormatFeatureFlags" default="" />
    </function>
  </struct>
  <struct name="DrmFormatModifierPropertiesList2EXT">
    <function name="DrmFormatModifierPropertiesList2EXT">
      <argument name="drmFormatModifierProperties_" type="const vk::ArrayProxyNoTemporaries&lt;vk::DrmFormatModifierProperties2EXT&gt; &amp;" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DrmFormatModifierPropertiesListEXT">
    <function name="DrmFormatModifierPropertiesListEXT">
      <argument name="drmFormatModifierProperties_" type="const vk::ArrayProxyNoTemporaries&lt;vk::DrmFormatModifierPropertiesEXT&gt; &amp;" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ImageDrmFormatModifierExplicitCreateInfoEXT">
    <function name="ImageDrmFormatModifierExplicitCreateInfoEXT">
      <argument name="drmFormatModifier_" type="uint64_t" />
      <argument name="planeLayouts_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::SubresourceLayout&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ImageDrmFormatModifierListCreateInfoEXT">
    <function name="ImageDrmFormatModifierListCreateInfoEXT">
      <argument name="drmFormatModifiers_" type="const vk::ArrayProxyNoTemporaries&lt;const uint64_t&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ImageDrmFormatModifierPropertiesEXT">
    <function name="ImageDrmFormatModifierPropertiesEXT">
      <argument name="drmFormatModifier_" type="uint64_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceImageDrmFormatModifierInfoEXT">
    <function name="PhysicalDeviceImageDrmFormatModifierInfoEXT">
      <argument name="drmFormatModifier_" type="uint64_t" />
      <argument name="sharingMode_" type="vk::SharingMode" />
      <argument name="queueFamilyIndices_" type="const vk::ArrayProxyNoTemporaries&lt;const uint32_t&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ShaderModuleValidationCacheCreateInfoEXT">
    <function name="ShaderModuleValidationCacheCreateInfoEXT">
      <argument name="validationCache_" type="vk::ValidationCacheEXT" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ValidationCacheCreateInfoEXT">
    <function name="ValidationCacheCreateInfoEXT">
      <argument name="flags_" type="vk::ValidationCacheCreateFlagsEXT" default="" />
      <argument name="initialDataSize_" type="size_t" default="{}" />
      <argument name="pInitialData_" type="const void *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="CoarseSampleLocationNV">
    <function name="CoarseSampleLocationNV">
      <argument name="pixelX_" type="uint32_t" default="{}" />
      <argument name="pixelY_" type="uint32_t" default="{}" />
      <argument name="sample_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <struct name="CoarseSampleOrderCustomNV">
    <function name="CoarseSampleOrderCustomNV">
      <argument name="shadingRate_" type="vk::ShadingRatePaletteEntryNV" />
      <argument name="sampleCount_" type="uint32_t" />
      <argument name="sampleLocations_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::CoarseSampleLocationNV&gt; &amp;" />
    </function>
  </struct>
  <struct name="PhysicalDeviceShadingRateImageFeaturesNV">
    <function name="PhysicalDeviceShadingRateImageFeaturesNV">
      <argument name="shadingRateImage_" type="vk::Bool32" default="{}" />
      <argument name="shadingRateCoarseSampleOrder_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceShadingRateImagePropertiesNV">
    <function name="PhysicalDeviceShadingRateImagePropertiesNV">
      <argument name="shadingRateTexelSize_" type="vk::Extent2D" default="{}" />
      <argument name="shadingRatePaletteSize_" type="uint32_t" default="{}" />
      <argument name="shadingRateMaxCoarseSamples_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineViewportCoarseSampleOrderStateCreateInfoNV">
    <function name="PipelineViewportCoarseSampleOrderStateCreateInfoNV">
      <argument name="sampleOrderType_" type="vk::CoarseSampleOrderTypeNV" />
      <argument name="customSampleOrders_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::CoarseSampleOrderCustomNV&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineViewportShadingRateImageStateCreateInfoNV">
    <function name="PipelineViewportShadingRateImageStateCreateInfoNV">
      <argument name="shadingRateImageEnable_" type="vk::Bool32" />
      <argument name="shadingRatePalettes_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::ShadingRatePaletteNV&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ShadingRatePaletteNV">
    <function name="ShadingRatePaletteNV">
      <argument name="shadingRatePaletteEntries_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::ShadingRatePaletteEntryNV&gt; &amp;" />
    </function>
  </struct>
  <struct name="AccelerationStructureCreateInfoNV">
    <function name="AccelerationStructureCreateInfoNV">
      <argument name="compactedSize_" type="vk::DeviceSize" default="{}" />
      <argument name="info_" type="vk::AccelerationStructureInfoNV" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="AccelerationStructureInfoNV">
    <function name="AccelerationStructureInfoNV">
      <argument name="type_" type="vk::AccelerationStructureTypeNV" />
      <argument name="flags_" type="vk::BuildAccelerationStructureFlagsNV" />
      <argument name="instanceCount_" type="uint32_t" />
      <argument name="geometries_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::GeometryNV&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="AccelerationStructureMemoryRequirementsInfoNV">
    <function name="AccelerationStructureMemoryRequirementsInfoNV">
      <argument name="type_" type="vk::AccelerationStructureMemoryRequirementsTypeNV" default="vk::AccelerationStructureMemoryRequirementsTypeNV::eObject" />
      <argument name="accelerationStructure_" type="vk::AccelerationStructureNV" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="BindAccelerationStructureMemoryInfoNV">
    <function name="BindAccelerationStructureMemoryInfoNV">
      <argument name="accelerationStructure_" type="vk::AccelerationStructureNV" />
      <argument name="memory_" type="vk::DeviceMemory" />
      <argument name="memoryOffset_" type="vk::DeviceSize" />
      <argument name="deviceIndices_" type="const vk::ArrayProxyNoTemporaries&lt;const uint32_t&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="GeometryAABBNV">
    <function name="GeometryAABBNV">
      <argument name="aabbData_" type="vk::Buffer" default="{}" />
      <argument name="numAABBs_" type="uint32_t" default="{}" />
      <argument name="stride_" type="uint32_t" default="{}" />
      <argument name="offset_" type="vk::DeviceSize" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="GeometryDataNV">
    <function name="GeometryDataNV">
      <argument name="triangles_" type="vk::GeometryTrianglesNV" default="{}" />
      <argument name="aabbs_" type="vk::GeometryAABBNV" default="{}" />
    </function>
  </struct>
  <struct name="GeometryNV">
    <function name="GeometryNV">
      <argument name="geometryType_" type="vk::GeometryTypeKHR" default="vk::GeometryTypeKHR::eTriangles" />
      <argument name="geometry_" type="vk::GeometryDataNV" default="{}" />
      <argument name="flags_" type="vk::GeometryFlagsKHR" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="GeometryTrianglesNV">
    <function name="GeometryTrianglesNV">
      <argument name="vertexData_" type="vk::Buffer" default="{}" />
      <argument name="vertexOffset_" type="vk::DeviceSize" default="{}" />
      <argument name="vertexCount_" type="uint32_t" default="{}" />
      <argument name="vertexStride_" type="vk::DeviceSize" default="{}" />
      <argument name="vertexFormat_" type="vk::Format" default="vk::Format::eUndefined" />
      <argument name="indexData_" type="vk::Buffer" default="{}" />
      <argument name="indexOffset_" type="vk::DeviceSize" default="{}" />
      <argument name="indexCount_" type="uint32_t" default="{}" />
      <argument name="indexType_" type="vk::IndexType" default="vk::IndexType::eUint16" />
      <argument name="transformData_" type="vk::Buffer" default="{}" />
      <argument name="transformOffset_" type="vk::DeviceSize" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceRayTracingPropertiesNV">
    <function name="PhysicalDeviceRayTracingPropertiesNV">
      <argument name="shaderGroupHandleSize_" type="uint32_t" default="{}" />
      <argument name="maxRecursionDepth_" type="uint32_t" default="{}" />
      <argument name="maxShaderGroupStride_" type="uint32_t" default="{}" />
      <argument name="shaderGroupBaseAlignment_" type="uint32_t" default="{}" />
      <argument name="maxGeometryCount_" type="uint64_t" default="{}" />
      <argument name="maxInstanceCount_" type="uint64_t" default="{}" />
      <argument name="maxTriangleCount_" type="uint64_t" default="{}" />
      <argument name="maxDescriptorSetAccelerationStructures_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="RayTracingPipelineCreateInfoNV">
    <function name="RayTracingPipelineCreateInfoNV">
      <argument name="flags_" type="vk::PipelineCreateFlags" />
      <argument name="stages_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::PipelineShaderStageCreateInfo&gt; &amp;" />
      <argument name="groups_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::RayTracingShaderGroupCreateInfoNV&gt; &amp;" default="" />
      <argument name="maxRecursionDepth_" type="uint32_t" default="{}" />
      <argument name="layout_" type="vk::PipelineLayout" default="{}" />
      <argument name="basePipelineHandle_" type="vk::Pipeline" default="{}" />
      <argument name="basePipelineIndex_" type="int32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="RayTracingShaderGroupCreateInfoNV">
    <function name="RayTracingShaderGroupCreateInfoNV">
      <argument name="type_" type="vk::RayTracingShaderGroupTypeKHR" default="vk::RayTracingShaderGroupTypeKHR::eGeneral" />
      <argument name="generalShader_" type="uint32_t" default="vk::ShaderUnusedNV" />
      <argument name="closestHitShader_" type="uint32_t" default="vk::ShaderUnusedNV" />
      <argument name="anyHitShader_" type="uint32_t" default="vk::ShaderUnusedNV" />
      <argument name="intersectionShader_" type="uint32_t" default="vk::ShaderUnusedNV" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="WriteDescriptorSetAccelerationStructureNV">
    <function name="WriteDescriptorSetAccelerationStructureNV">
      <argument name="accelerationStructures_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::AccelerationStructureNV&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceRepresentativeFragmentTestFeaturesNV">
    <function name="PhysicalDeviceRepresentativeFragmentTestFeaturesNV">
      <argument name="representativeFragmentTest_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineRepresentativeFragmentTestStateCreateInfoNV">
    <function name="PipelineRepresentativeFragmentTestStateCreateInfoNV">
      <argument name="representativeFragmentTestEnable_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="FilterCubicImageViewImageFormatPropertiesEXT">
    <function name="FilterCubicImageViewImageFormatPropertiesEXT">
      <argument name="filterCubic_" type="vk::Bool32" default="{}" />
      <argument name="filterCubicMinmax_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceImageViewImageFormatInfoEXT">
    <function name="PhysicalDeviceImageViewImageFormatInfoEXT">
      <argument name="imageViewType_" type="vk::ImageViewType" default="vk::ImageViewType::e1D" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ImportMemoryHostPointerInfoEXT">
    <function name="ImportMemoryHostPointerInfoEXT">
      <argument name="handleType_" type="vk::ExternalMemoryHandleTypeFlagBits" default="vk::ExternalMemoryHandleTypeFlagBits::eOpaqueFd" />
      <argument name="pHostPointer_" type="void *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="MemoryHostPointerPropertiesEXT">
    <function name="MemoryHostPointerPropertiesEXT">
      <argument name="memoryTypeBits_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceExternalMemoryHostPropertiesEXT">
    <function name="PhysicalDeviceExternalMemoryHostPropertiesEXT">
      <argument name="minImportedHostPointerAlignment_" type="vk::DeviceSize" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceShaderClockFeaturesKHR">
    <function name="PhysicalDeviceShaderClockFeaturesKHR">
      <argument name="shaderSubgroupClock_" type="vk::Bool32" default="{}" />
      <argument name="shaderDeviceClock_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineCompilerControlCreateInfoAMD">
    <function name="PipelineCompilerControlCreateInfoAMD">
      <argument name="compilerControlFlags_" type="vk::PipelineCompilerControlFlagsAMD" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceShaderCorePropertiesAMD">
    <function name="PhysicalDeviceShaderCorePropertiesAMD">
      <argument name="shaderEngineCount_" type="uint32_t" default="{}" />
      <argument name="shaderArraysPerEngineCount_" type="uint32_t" default="{}" />
      <argument name="computeUnitsPerShaderArray_" type="uint32_t" default="{}" />
      <argument name="simdPerComputeUnit_" type="uint32_t" default="{}" />
      <argument name="wavefrontsPerSimd_" type="uint32_t" default="{}" />
      <argument name="wavefrontSize_" type="uint32_t" default="{}" />
      <argument name="sgprsPerSimd_" type="uint32_t" default="{}" />
      <argument name="minSgprAllocation_" type="uint32_t" default="{}" />
      <argument name="maxSgprAllocation_" type="uint32_t" default="{}" />
      <argument name="sgprAllocationGranularity_" type="uint32_t" default="{}" />
      <argument name="vgprsPerSimd_" type="uint32_t" default="{}" />
      <argument name="minVgprAllocation_" type="uint32_t" default="{}" />
      <argument name="maxVgprAllocation_" type="uint32_t" default="{}" />
      <argument name="vgprAllocationGranularity_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoDecodeH265CapabilitiesKHR">
    <function name="VideoDecodeH265CapabilitiesKHR">
      <argument name="maxLevelIdc_" type="int" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoDecodeH265DpbSlotInfoKHR">
    <function name="VideoDecodeH265DpbSlotInfoKHR">
      <argument name="pStdReferenceInfo_" type="const int *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoDecodeH265PictureInfoKHR">
    <function name="VideoDecodeH265PictureInfoKHR">
      <argument name="pStdPictureInfo_" type="const int *" />
      <argument name="sliceSegmentOffsets_" type="const vk::ArrayProxyNoTemporaries&lt;const uint32_t&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoDecodeH265ProfileInfoKHR">
    <function name="VideoDecodeH265ProfileInfoKHR">
      <argument name="stdProfileIdc_" type="int" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoDecodeH265SessionParametersAddInfoKHR">
    <function name="VideoDecodeH265SessionParametersAddInfoKHR">
      <argument name="stdVPSs_" type="const int &amp;" />
      <argument name="stdSPSs_" type="const int &amp;" default="{}" />
      <argument name="stdPPSs_" type="const int &amp;" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoDecodeH265SessionParametersCreateInfoKHR">
    <function name="VideoDecodeH265SessionParametersCreateInfoKHR">
      <argument name="maxStdVPSCount_" type="uint32_t" default="{}" />
      <argument name="maxStdSPSCount_" type="uint32_t" default="{}" />
      <argument name="maxStdPPSCount_" type="uint32_t" default="{}" />
      <argument name="pParametersAddInfo_" type="const vk::VideoDecodeH265SessionParametersAddInfoKHR *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DeviceQueueGlobalPriorityCreateInfoKHR">
    <function name="DeviceQueueGlobalPriorityCreateInfoKHR">
      <argument name="globalPriority_" type="vk::QueueGlobalPriorityKHR" default="vk::QueueGlobalPriorityKHR::eLow" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceGlobalPriorityQueryFeaturesKHR">
    <function name="PhysicalDeviceGlobalPriorityQueryFeaturesKHR">
      <argument name="globalPriorityQuery_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="QueueFamilyGlobalPriorityPropertiesKHR">
    <function name="QueueFamilyGlobalPriorityPropertiesKHR">
      <argument name="priorityCount_" type="uint32_t" default="{}" />
      <argument name="priorities_" type="const std::array&lt;vk::QueueGlobalPriorityKHR, 16U&gt; &amp;" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DeviceMemoryOverallocationCreateInfoAMD">
    <function name="DeviceMemoryOverallocationCreateInfoAMD">
      <argument name="overallocationBehavior_" type="vk::MemoryOverallocationBehaviorAMD" default="vk::MemoryOverallocationBehaviorAMD::eDefault" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceVertexAttributeDivisorPropertiesEXT">
    <function name="PhysicalDeviceVertexAttributeDivisorPropertiesEXT">
      <argument name="maxVertexAttribDivisor_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceComputeShaderDerivativesFeaturesNV">
    <function name="PhysicalDeviceComputeShaderDerivativesFeaturesNV">
      <argument name="computeDerivativeGroupQuads_" type="vk::Bool32" default="{}" />
      <argument name="computeDerivativeGroupLinear_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DrawMeshTasksIndirectCommandNV">
    <function name="DrawMeshTasksIndirectCommandNV">
      <argument name="taskCount_" type="uint32_t" default="{}" />
      <argument name="firstTask_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <struct name="PhysicalDeviceMeshShaderFeaturesNV">
    <function name="PhysicalDeviceMeshShaderFeaturesNV">
      <argument name="taskShader_" type="vk::Bool32" default="{}" />
      <argument name="meshShader_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceMeshShaderPropertiesNV">
    <function name="PhysicalDeviceMeshShaderPropertiesNV">
      <argument name="maxDrawMeshTasksCount_" type="uint32_t" default="{}" />
      <argument name="maxTaskWorkGroupInvocations_" type="uint32_t" default="{}" />
      <argument name="maxTaskWorkGroupSize_" type="const std::array&lt;uint32_t, 3&gt; &amp;" default="" />
      <argument name="maxTaskTotalMemorySize_" type="uint32_t" default="{}" />
      <argument name="maxTaskOutputCount_" type="uint32_t" default="{}" />
      <argument name="maxMeshWorkGroupInvocations_" type="uint32_t" default="{}" />
      <argument name="maxMeshWorkGroupSize_" type="const std::array&lt;uint32_t, 3&gt; &amp;" default="" />
      <argument name="maxMeshTotalMemorySize_" type="uint32_t" default="{}" />
      <argument name="maxMeshOutputVertices_" type="uint32_t" default="{}" />
      <argument name="maxMeshOutputPrimitives_" type="uint32_t" default="{}" />
      <argument name="maxMeshMultiviewViewCount_" type="uint32_t" default="{}" />
      <argument name="meshOutputPerVertexGranularity_" type="uint32_t" default="{}" />
      <argument name="meshOutputPerPrimitiveGranularity_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceShaderImageFootprintFeaturesNV">
    <function name="PhysicalDeviceShaderImageFootprintFeaturesNV">
      <argument name="imageFootprint_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceExclusiveScissorFeaturesNV">
    <function name="PhysicalDeviceExclusiveScissorFeaturesNV">
      <argument name="exclusiveScissor_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineViewportExclusiveScissorStateCreateInfoNV">
    <function name="PipelineViewportExclusiveScissorStateCreateInfoNV">
      <argument name="exclusiveScissors_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::Rect2D&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="CheckpointDataNV">
    <function name="CheckpointDataNV">
      <argument name="stage_" type="vk::PipelineStageFlagBits" default="vk::PipelineStageFlagBits::eTopOfPipe" />
      <argument name="pCheckpointMarker_" type="void *" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="QueueFamilyCheckpointPropertiesNV">
    <function name="QueueFamilyCheckpointPropertiesNV">
      <argument name="checkpointExecutionStageMask_" type="vk::PipelineStageFlags" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceShaderIntegerFunctions2FeaturesINTEL">
    <function name="PhysicalDeviceShaderIntegerFunctions2FeaturesINTEL">
      <argument name="shaderIntegerFunctions2_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="InitializePerformanceApiInfoINTEL">
    <function name="InitializePerformanceApiInfoINTEL">
      <argument name="pUserData_" type="void *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PerformanceConfigurationAcquireInfoINTEL">
    <function name="PerformanceConfigurationAcquireInfoINTEL">
      <argument name="type_" type="vk::PerformanceConfigurationTypeINTEL" default="vk::PerformanceConfigurationTypeINTEL::eCommandQueueMetricsDiscoveryActivated" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PerformanceMarkerInfoINTEL">
    <function name="PerformanceMarkerInfoINTEL">
      <argument name="marker_" type="uint64_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PerformanceOverrideInfoINTEL">
    <function name="PerformanceOverrideInfoINTEL">
      <argument name="type_" type="vk::PerformanceOverrideTypeINTEL" default="vk::PerformanceOverrideTypeINTEL::eNullHardware" />
      <argument name="enable_" type="vk::Bool32" default="{}" />
      <argument name="parameter_" type="uint64_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PerformanceStreamMarkerInfoINTEL">
    <function name="PerformanceStreamMarkerInfoINTEL">
      <argument name="marker_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <union name="PerformanceValueDataINTEL">
    <function name="PerformanceValueDataINTEL">
      <argument name="value32_" type="uint32_t" default="{}" />
    </function>
    <function name="PerformanceValueDataINTEL">
      <argument name="value64_" type="uint64_t" />
    </function>
    <function name="PerformanceValueDataINTEL">
      <argument name="valueFloat_" type="float" />
    </function>
    <function name="PerformanceValueDataINTEL">
      <argument name="valueString_" type="const char *" />
    </function>
  </union>
  <struct name="PerformanceValueINTEL">
    <function name="PerformanceValueINTEL">
      <argument name="type_" type="vk::PerformanceValueTypeINTEL" default="vk::PerformanceValueTypeINTEL::eUint32" />
      <argument name="data_" type="vk::PerformanceValueDataINTEL" default="{}" />
    </function>
  </struct>
  <struct name="QueryPoolPerformanceQueryCreateInfoINTEL">
    <function name="QueryPoolPerformanceQueryCreateInfoINTEL">
      <argument name="performanceCountersSampling_" type="vk::QueryPoolSamplingModeINTEL" default="vk::QueryPoolSamplingModeINTEL::eManual" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDevicePCIBusInfoPropertiesEXT">
    <function name="PhysicalDevicePCIBusInfoPropertiesEXT">
      <argument name="pciDomain_" type="uint32_t" default="{}" />
      <argument name="pciBus_" type="uint32_t" default="{}" />
      <argument name="pciDevice_" type="uint32_t" default="{}" />
      <argument name="pciFunction_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DisplayNativeHdrSurfaceCapabilitiesAMD">
    <function name="DisplayNativeHdrSurfaceCapabilitiesAMD">
      <argument name="localDimmingSupport_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SwapchainDisplayNativeHdrCreateInfoAMD">
    <function name="SwapchainDisplayNativeHdrCreateInfoAMD">
      <argument name="localDimmingEnable_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceFragmentDensityMapFeaturesEXT">
    <function name="PhysicalDeviceFragmentDensityMapFeaturesEXT">
      <argument name="fragmentDensityMap_" type="vk::Bool32" default="{}" />
      <argument name="fragmentDensityMapDynamic_" type="vk::Bool32" default="{}" />
      <argument name="fragmentDensityMapNonSubsampledImages_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceFragmentDensityMapPropertiesEXT">
    <function name="PhysicalDeviceFragmentDensityMapPropertiesEXT">
      <argument name="minFragmentDensityTexelSize_" type="vk::Extent2D" default="{}" />
      <argument name="maxFragmentDensityTexelSize_" type="vk::Extent2D" default="{}" />
      <argument name="fragmentDensityInvocations_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="RenderPassFragmentDensityMapCreateInfoEXT">
    <function name="RenderPassFragmentDensityMapCreateInfoEXT">
      <argument name="fragmentDensityMapAttachment_" type="vk::AttachmentReference" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="FragmentShadingRateAttachmentInfoKHR">
    <function name="FragmentShadingRateAttachmentInfoKHR">
      <argument name="pFragmentShadingRateAttachment_" type="const vk::AttachmentReference2 *" default="{}" />
      <argument name="shadingRateAttachmentTexelSize_" type="vk::Extent2D" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceFragmentShadingRateFeaturesKHR">
    <function name="PhysicalDeviceFragmentShadingRateFeaturesKHR">
      <argument name="pipelineFragmentShadingRate_" type="vk::Bool32" default="{}" />
      <argument name="primitiveFragmentShadingRate_" type="vk::Bool32" default="{}" />
      <argument name="attachmentFragmentShadingRate_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceFragmentShadingRateKHR">
    <function name="PhysicalDeviceFragmentShadingRateKHR">
      <argument name="sampleCounts_" type="vk::SampleCountFlags" default="" />
      <argument name="fragmentSize_" type="vk::Extent2D" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceFragmentShadingRatePropertiesKHR">
    <function name="PhysicalDeviceFragmentShadingRatePropertiesKHR">
      <argument name="minFragmentShadingRateAttachmentTexelSize_" type="vk::Extent2D" default="{}" />
      <argument name="maxFragmentShadingRateAttachmentTexelSize_" type="vk::Extent2D" default="{}" />
      <argument name="maxFragmentShadingRateAttachmentTexelSizeAspectRatio_" type="uint32_t" default="{}" />
      <argument name="primitiveFragmentShadingRateWithMultipleViewports_" type="vk::Bool32" default="{}" />
      <argument name="layeredShadingRateAttachments_" type="vk::Bool32" default="{}" />
      <argument name="fragmentShadingRateNonTrivialCombinerOps_" type="vk::Bool32" default="{}" />
      <argument name="maxFragmentSize_" type="vk::Extent2D" default="{}" />
      <argument name="maxFragmentSizeAspectRatio_" type="uint32_t" default="{}" />
      <argument name="maxFragmentShadingRateCoverageSamples_" type="uint32_t" default="{}" />
      <argument name="maxFragmentShadingRateRasterizationSamples_" type="vk::SampleCountFlagBits" default="vk::SampleCountFlagBits::e1" />
      <argument name="fragmentShadingRateWithShaderDepthStencilWrites_" type="vk::Bool32" default="{}" />
      <argument name="fragmentShadingRateWithSampleMask_" type="vk::Bool32" default="{}" />
      <argument name="fragmentShadingRateWithShaderSampleMask_" type="vk::Bool32" default="{}" />
      <argument name="fragmentShadingRateWithConservativeRasterization_" type="vk::Bool32" default="{}" />
      <argument name="fragmentShadingRateWithFragmentShaderInterlock_" type="vk::Bool32" default="{}" />
      <argument name="fragmentShadingRateWithCustomSampleLocations_" type="vk::Bool32" default="{}" />
      <argument name="fragmentShadingRateStrictMultiplyCombiner_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineFragmentShadingRateStateCreateInfoKHR">
    <function name="PipelineFragmentShadingRateStateCreateInfoKHR">
      <argument name="fragmentSize_" type="vk::Extent2D" default="{}" />
      <argument name="combinerOps_" type="const std::array&lt;vk::FragmentShadingRateCombinerOpKHR, 2&gt; &amp;" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceShaderCoreProperties2AMD">
    <function name="PhysicalDeviceShaderCoreProperties2AMD">
      <argument name="shaderCoreFeatures_" type="vk::ShaderCorePropertiesFlagsAMD" default="" />
      <argument name="activeComputeUnitCount_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceCoherentMemoryFeaturesAMD">
    <function name="PhysicalDeviceCoherentMemoryFeaturesAMD">
      <argument name="deviceCoherentMemory_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceShaderImageAtomicInt64FeaturesEXT">
    <function name="PhysicalDeviceShaderImageAtomicInt64FeaturesEXT">
      <argument name="shaderImageInt64Atomics_" type="vk::Bool32" default="{}" />
      <argument name="sparseImageInt64Atomics_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceMemoryBudgetPropertiesEXT">
    <function name="PhysicalDeviceMemoryBudgetPropertiesEXT">
      <argument name="heapBudget_" type="const std::array&lt;vk::DeviceSize, 16U&gt; &amp;" default="" />
      <argument name="heapUsage_" type="const std::array&lt;vk::DeviceSize, 16U&gt; &amp;" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="MemoryPriorityAllocateInfoEXT">
    <function name="MemoryPriorityAllocateInfoEXT">
      <argument name="priority_" type="float" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceMemoryPriorityFeaturesEXT">
    <function name="PhysicalDeviceMemoryPriorityFeaturesEXT">
      <argument name="memoryPriority_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SurfaceProtectedCapabilitiesKHR">
    <function name="SurfaceProtectedCapabilitiesKHR">
      <argument name="supportsProtected_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV">
    <function name="PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV">
      <argument name="dedicatedAllocationImageAliasing_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="BufferDeviceAddressCreateInfoEXT">
    <function name="BufferDeviceAddressCreateInfoEXT">
      <argument name="deviceAddress_" type="vk::DeviceAddress" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceBufferDeviceAddressFeaturesEXT">
    <function name="PhysicalDeviceBufferDeviceAddressFeaturesEXT">
      <argument name="bufferDeviceAddress_" type="vk::Bool32" default="{}" />
      <argument name="bufferDeviceAddressCaptureReplay_" type="vk::Bool32" default="{}" />
      <argument name="bufferDeviceAddressMultiDevice_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ValidationFeaturesEXT">
    <function name="ValidationFeaturesEXT">
      <argument name="enabledValidationFeatures_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::ValidationFeatureEnableEXT&gt; &amp;" />
      <argument name="disabledValidationFeatures_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::ValidationFeatureDisableEXT&gt; &amp;" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDevicePresentWaitFeaturesKHR">
    <function name="PhysicalDevicePresentWaitFeaturesKHR">
      <argument name="presentWait_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="CooperativeMatrixPropertiesNV">
    <function name="CooperativeMatrixPropertiesNV">
      <argument name="MSize_" type="uint32_t" default="{}" />
      <argument name="NSize_" type="uint32_t" default="{}" />
      <argument name="KSize_" type="uint32_t" default="{}" />
      <argument name="AType_" type="vk::ComponentTypeNV" default="{}" />
      <argument name="BType_" type="vk::ComponentTypeNV" default="{}" />
      <argument name="CType_" type="vk::ComponentTypeNV" default="{}" />
      <argument name="DType_" type="vk::ComponentTypeNV" default="{}" />
      <argument name="scope_" type="vk::ScopeNV" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceCooperativeMatrixFeaturesNV">
    <function name="PhysicalDeviceCooperativeMatrixFeaturesNV">
      <argument name="cooperativeMatrix_" type="vk::Bool32" default="{}" />
      <argument name="cooperativeMatrixRobustBufferAccess_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceCooperativeMatrixPropertiesNV">
    <function name="PhysicalDeviceCooperativeMatrixPropertiesNV">
      <argument name="cooperativeMatrixSupportedStages_" type="vk::ShaderStageFlags" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="FramebufferMixedSamplesCombinationNV">
    <function name="FramebufferMixedSamplesCombinationNV">
      <argument name="coverageReductionMode_" type="vk::CoverageReductionModeNV" default="vk::CoverageReductionModeNV::eMerge" />
      <argument name="rasterizationSamples_" type="vk::SampleCountFlagBits" default="vk::SampleCountFlagBits::e1" />
      <argument name="depthStencilSamples_" type="vk::SampleCountFlags" default="" />
      <argument name="colorSamples_" type="vk::SampleCountFlags" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceCoverageReductionModeFeaturesNV">
    <function name="PhysicalDeviceCoverageReductionModeFeaturesNV">
      <argument name="coverageReductionMode_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineCoverageReductionStateCreateInfoNV">
    <function name="PipelineCoverageReductionStateCreateInfoNV">
      <argument name="flags_" type="vk::PipelineCoverageReductionStateCreateFlagsNV" default="" />
      <argument name="coverageReductionMode_" type="vk::CoverageReductionModeNV" default="vk::CoverageReductionModeNV::eMerge" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceFragmentShaderInterlockFeaturesEXT">
    <function name="PhysicalDeviceFragmentShaderInterlockFeaturesEXT">
      <argument name="fragmentShaderSampleInterlock_" type="vk::Bool32" default="{}" />
      <argument name="fragmentShaderPixelInterlock_" type="vk::Bool32" default="{}" />
      <argument name="fragmentShaderShadingRateInterlock_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceYcbcrImageArraysFeaturesEXT">
    <function name="PhysicalDeviceYcbcrImageArraysFeaturesEXT">
      <argument name="ycbcrImageArrays_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceProvokingVertexFeaturesEXT">
    <function name="PhysicalDeviceProvokingVertexFeaturesEXT">
      <argument name="provokingVertexLast_" type="vk::Bool32" default="{}" />
      <argument name="transformFeedbackPreservesProvokingVertex_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceProvokingVertexPropertiesEXT">
    <function name="PhysicalDeviceProvokingVertexPropertiesEXT">
      <argument name="provokingVertexModePerPipeline_" type="vk::Bool32" default="{}" />
      <argument name="transformFeedbackPreservesTriangleFanProvokingVertex_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineRasterizationProvokingVertexStateCreateInfoEXT">
    <function name="PipelineRasterizationProvokingVertexStateCreateInfoEXT">
      <argument name="provokingVertexMode_" type="vk::ProvokingVertexModeEXT" default="vk::ProvokingVertexModeEXT::eFirstVertex" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="HeadlessSurfaceCreateInfoEXT">
    <function name="HeadlessSurfaceCreateInfoEXT">
      <argument name="flags_" type="vk::HeadlessSurfaceCreateFlagsEXT" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceLineRasterizationFeaturesEXT">
    <function name="PhysicalDeviceLineRasterizationFeaturesEXT">
      <argument name="rectangularLines_" type="vk::Bool32" default="{}" />
      <argument name="bresenhamLines_" type="vk::Bool32" default="{}" />
      <argument name="smoothLines_" type="vk::Bool32" default="{}" />
      <argument name="stippledRectangularLines_" type="vk::Bool32" default="{}" />
      <argument name="stippledBresenhamLines_" type="vk::Bool32" default="{}" />
      <argument name="stippledSmoothLines_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceLineRasterizationPropertiesEXT">
    <function name="PhysicalDeviceLineRasterizationPropertiesEXT">
      <argument name="lineSubPixelPrecisionBits_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineRasterizationLineStateCreateInfoEXT">
    <function name="PipelineRasterizationLineStateCreateInfoEXT">
      <argument name="lineRasterizationMode_" type="vk::LineRasterizationModeEXT" default="vk::LineRasterizationModeEXT::eDefault" />
      <argument name="stippledLineEnable_" type="vk::Bool32" default="{}" />
      <argument name="lineStippleFactor_" type="uint32_t" default="{}" />
      <argument name="lineStipplePattern_" type="uint16_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceShaderAtomicFloatFeaturesEXT">
    <function name="PhysicalDeviceShaderAtomicFloatFeaturesEXT">
      <argument name="shaderBufferFloat32Atomics_" type="vk::Bool32" default="{}" />
      <argument name="shaderBufferFloat32AtomicAdd_" type="vk::Bool32" default="{}" />
      <argument name="shaderBufferFloat64Atomics_" type="vk::Bool32" default="{}" />
      <argument name="shaderBufferFloat64AtomicAdd_" type="vk::Bool32" default="{}" />
      <argument name="shaderSharedFloat32Atomics_" type="vk::Bool32" default="{}" />
      <argument name="shaderSharedFloat32AtomicAdd_" type="vk::Bool32" default="{}" />
      <argument name="shaderSharedFloat64Atomics_" type="vk::Bool32" default="{}" />
      <argument name="shaderSharedFloat64AtomicAdd_" type="vk::Bool32" default="{}" />
      <argument name="shaderImageFloat32Atomics_" type="vk::Bool32" default="{}" />
      <argument name="shaderImageFloat32AtomicAdd_" type="vk::Bool32" default="{}" />
      <argument name="sparseImageFloat32Atomics_" type="vk::Bool32" default="{}" />
      <argument name="sparseImageFloat32AtomicAdd_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceIndexTypeUint8FeaturesEXT">
    <function name="PhysicalDeviceIndexTypeUint8FeaturesEXT">
      <argument name="indexTypeUint8_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceExtendedDynamicStateFeaturesEXT">
    <function name="PhysicalDeviceExtendedDynamicStateFeaturesEXT">
      <argument name="extendedDynamicState_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDevicePipelineExecutablePropertiesFeaturesKHR">
    <function name="PhysicalDevicePipelineExecutablePropertiesFeaturesKHR">
      <argument name="pipelineExecutableInfo_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineExecutableInfoKHR">
    <function name="PipelineExecutableInfoKHR">
      <argument name="pipeline_" type="vk::Pipeline" default="{}" />
      <argument name="executableIndex_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineExecutableInternalRepresentationKHR">
    <function name="PipelineExecutableInternalRepresentationKHR">
      <argument name="name_" type="const std::array&lt;char, 256U&gt; &amp;" default="" />
      <argument name="description_" type="const std::array&lt;char, 256U&gt; &amp;" default="" />
      <argument name="isText_" type="vk::Bool32" default="{}" />
      <argument name="dataSize_" type="size_t" default="{}" />
      <argument name="pData_" type="void *" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineExecutablePropertiesKHR">
    <function name="PipelineExecutablePropertiesKHR">
      <argument name="stages_" type="vk::ShaderStageFlags" default="" />
      <argument name="name_" type="const std::array&lt;char, 256U&gt; &amp;" default="" />
      <argument name="description_" type="const std::array&lt;char, 256U&gt; &amp;" default="" />
      <argument name="subgroupSize_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineExecutableStatisticKHR">
    <function name="PipelineExecutableStatisticKHR">
      <argument name="name_" type="const std::array&lt;char, 256U&gt; &amp;" default="" />
      <argument name="description_" type="const std::array&lt;char, 256U&gt; &amp;" default="" />
      <argument name="format_" type="vk::PipelineExecutableStatisticFormatKHR" default="vk::PipelineExecutableStatisticFormatKHR::eBool32" />
      <argument name="value_" type="vk::PipelineExecutableStatisticValueKHR" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <union name="PipelineExecutableStatisticValueKHR">
    <function name="PipelineExecutableStatisticValueKHR">
      <argument name="b32_" type="vk::Bool32" default="{}" />
    </function>
    <function name="PipelineExecutableStatisticValueKHR">
      <argument name="i64_" type="int64_t" />
    </function>
    <function name="PipelineExecutableStatisticValueKHR">
      <argument name="u64_" type="uint64_t" />
    </function>
    <function name="PipelineExecutableStatisticValueKHR">
      <argument name="f64_" type="double" />
    </function>
  </union>
  <struct name="PipelineInfoKHR">
    <function name="PipelineInfoKHR">
      <argument name="pipeline_" type="vk::Pipeline" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="CopyImageToImageInfoEXT">
    <function name="CopyImageToImageInfoEXT">
      <argument name="flags_" type="vk::HostImageCopyFlagsEXT" />
      <argument name="srcImage_" type="vk::Image" />
      <argument name="srcImageLayout_" type="vk::ImageLayout" />
      <argument name="dstImage_" type="vk::Image" />
      <argument name="dstImageLayout_" type="vk::ImageLayout" />
      <argument name="regions_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::ImageCopy2&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="CopyImageToMemoryInfoEXT">
    <function name="CopyImageToMemoryInfoEXT">
      <argument name="flags_" type="vk::HostImageCopyFlagsEXT" />
      <argument name="srcImage_" type="vk::Image" />
      <argument name="srcImageLayout_" type="vk::ImageLayout" />
      <argument name="regions_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::ImageToMemoryCopyEXT&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="CopyMemoryToImageInfoEXT">
    <function name="CopyMemoryToImageInfoEXT">
      <argument name="flags_" type="vk::HostImageCopyFlagsEXT" />
      <argument name="dstImage_" type="vk::Image" />
      <argument name="dstImageLayout_" type="vk::ImageLayout" />
      <argument name="regions_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::MemoryToImageCopyEXT&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="HostImageCopyDevicePerformanceQueryEXT">
    <function name="HostImageCopyDevicePerformanceQueryEXT">
      <argument name="optimalDeviceAccess_" type="vk::Bool32" default="{}" />
      <argument name="identicalMemoryLayout_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="HostImageLayoutTransitionInfoEXT">
    <function name="HostImageLayoutTransitionInfoEXT">
      <argument name="image_" type="vk::Image" default="{}" />
      <argument name="oldLayout_" type="vk::ImageLayout" default="vk::ImageLayout::eUndefined" />
      <argument name="newLayout_" type="vk::ImageLayout" default="vk::ImageLayout::eUndefined" />
      <argument name="subresourceRange_" type="vk::ImageSubresourceRange" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ImageToMemoryCopyEXT">
    <function name="ImageToMemoryCopyEXT">
      <argument name="pHostPointer_" type="void *" default="{}" />
      <argument name="memoryRowLength_" type="uint32_t" default="{}" />
      <argument name="memoryImageHeight_" type="uint32_t" default="{}" />
      <argument name="imageSubresource_" type="vk::ImageSubresourceLayers" default="" />
      <argument name="imageOffset_" type="vk::Offset3D" default="{}" />
      <argument name="imageExtent_" type="vk::Extent3D" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="MemoryToImageCopyEXT">
    <function name="MemoryToImageCopyEXT">
      <argument name="pHostPointer_" type="const void *" default="{}" />
      <argument name="memoryRowLength_" type="uint32_t" default="{}" />
      <argument name="memoryImageHeight_" type="uint32_t" default="{}" />
      <argument name="imageSubresource_" type="vk::ImageSubresourceLayers" default="" />
      <argument name="imageOffset_" type="vk::Offset3D" default="{}" />
      <argument name="imageExtent_" type="vk::Extent3D" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceHostImageCopyFeaturesEXT">
    <function name="PhysicalDeviceHostImageCopyFeaturesEXT">
      <argument name="hostImageCopy_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceHostImageCopyPropertiesEXT">
    <function name="PhysicalDeviceHostImageCopyPropertiesEXT">
      <argument name="copySrcLayouts_" type="const vk::ArrayProxyNoTemporaries&lt;vk::ImageLayout&gt; &amp;" />
      <argument name="copyDstLayouts_" type="const vk::ArrayProxyNoTemporaries&lt;vk::ImageLayout&gt; &amp;" default="" />
      <argument name="optimalTilingLayoutUUID_" type="const std::array&lt;uint8_t, 16U&gt; &amp;" default="" />
      <argument name="identicalMemoryTypeRequirements_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SubresourceHostMemcpySizeEXT">
    <function name="SubresourceHostMemcpySizeEXT">
      <argument name="size_" type="vk::DeviceSize" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="MemoryMapInfoKHR">
    <function name="MemoryMapInfoKHR">
      <argument name="flags_" type="vk::MemoryMapFlags" default="" />
      <argument name="memory_" type="vk::DeviceMemory" default="{}" />
      <argument name="offset_" type="vk::DeviceSize" default="{}" />
      <argument name="size_" type="vk::DeviceSize" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="MemoryUnmapInfoKHR">
    <function name="MemoryUnmapInfoKHR">
      <argument name="flags_" type="vk::MemoryUnmapFlagsKHR" default="" />
      <argument name="memory_" type="vk::DeviceMemory" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceShaderAtomicFloat2FeaturesEXT">
    <function name="PhysicalDeviceShaderAtomicFloat2FeaturesEXT">
      <argument name="shaderBufferFloat16Atomics_" type="vk::Bool32" default="{}" />
      <argument name="shaderBufferFloat16AtomicAdd_" type="vk::Bool32" default="{}" />
      <argument name="shaderBufferFloat16AtomicMinMax_" type="vk::Bool32" default="{}" />
      <argument name="shaderBufferFloat32AtomicMinMax_" type="vk::Bool32" default="{}" />
      <argument name="shaderBufferFloat64AtomicMinMax_" type="vk::Bool32" default="{}" />
      <argument name="shaderSharedFloat16Atomics_" type="vk::Bool32" default="{}" />
      <argument name="shaderSharedFloat16AtomicAdd_" type="vk::Bool32" default="{}" />
      <argument name="shaderSharedFloat16AtomicMinMax_" type="vk::Bool32" default="{}" />
      <argument name="shaderSharedFloat32AtomicMinMax_" type="vk::Bool32" default="{}" />
      <argument name="shaderSharedFloat64AtomicMinMax_" type="vk::Bool32" default="{}" />
      <argument name="shaderImageFloat32AtomicMinMax_" type="vk::Bool32" default="{}" />
      <argument name="sparseImageFloat32AtomicMinMax_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SurfacePresentModeCompatibilityEXT">
    <function name="SurfacePresentModeCompatibilityEXT">
      <argument name="presentModes_" type="const vk::ArrayProxyNoTemporaries&lt;vk::PresentModeKHR&gt; &amp;" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SurfacePresentModeEXT">
    <function name="SurfacePresentModeEXT">
      <argument name="presentMode_" type="vk::PresentModeKHR" default="vk::PresentModeKHR::eImmediate" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SurfacePresentScalingCapabilitiesEXT">
    <function name="SurfacePresentScalingCapabilitiesEXT">
      <argument name="supportedPresentScaling_" type="vk::PresentScalingFlagsEXT" default="" />
      <argument name="supportedPresentGravityX_" type="vk::PresentGravityFlagsEXT" default="" />
      <argument name="supportedPresentGravityY_" type="vk::PresentGravityFlagsEXT" default="" />
      <argument name="minScaledImageExtent_" type="vk::Extent2D" default="{}" />
      <argument name="maxScaledImageExtent_" type="vk::Extent2D" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceSwapchainMaintenance1FeaturesEXT">
    <function name="PhysicalDeviceSwapchainMaintenance1FeaturesEXT">
      <argument name="swapchainMaintenance1_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ReleaseSwapchainImagesInfoEXT">
    <function name="ReleaseSwapchainImagesInfoEXT">
      <argument name="swapchain_" type="vk::SwapchainKHR" />
      <argument name="imageIndices_" type="const vk::ArrayProxyNoTemporaries&lt;const uint32_t&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SwapchainPresentFenceInfoEXT">
    <function name="SwapchainPresentFenceInfoEXT">
      <argument name="fences_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::Fence&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SwapchainPresentModeInfoEXT">
    <function name="SwapchainPresentModeInfoEXT">
      <argument name="presentModes_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::PresentModeKHR&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SwapchainPresentModesCreateInfoEXT">
    <function name="SwapchainPresentModesCreateInfoEXT">
      <argument name="presentModes_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::PresentModeKHR&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SwapchainPresentScalingCreateInfoEXT">
    <function name="SwapchainPresentScalingCreateInfoEXT">
      <argument name="scalingBehavior_" type="vk::PresentScalingFlagsEXT" default="" />
      <argument name="presentGravityX_" type="vk::PresentGravityFlagsEXT" default="" />
      <argument name="presentGravityY_" type="vk::PresentGravityFlagsEXT" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="BindIndexBufferIndirectCommandNV">
    <function name="BindIndexBufferIndirectCommandNV">
      <argument name="bufferAddress_" type="vk::DeviceAddress" default="{}" />
      <argument name="size_" type="uint32_t" default="{}" />
      <argument name="indexType_" type="vk::IndexType" default="vk::IndexType::eUint16" />
    </function>
  </struct>
  <struct name="BindShaderGroupIndirectCommandNV">
    <function name="BindShaderGroupIndirectCommandNV">
      <argument name="groupIndex_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <struct name="BindVertexBufferIndirectCommandNV">
    <function name="BindVertexBufferIndirectCommandNV">
      <argument name="bufferAddress_" type="vk::DeviceAddress" default="{}" />
      <argument name="size_" type="uint32_t" default="{}" />
      <argument name="stride_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <struct name="GeneratedCommandsInfoNV">
    <function name="GeneratedCommandsInfoNV">
      <argument name="pipelineBindPoint_" type="vk::PipelineBindPoint" />
      <argument name="pipeline_" type="vk::Pipeline" />
      <argument name="indirectCommandsLayout_" type="vk::IndirectCommandsLayoutNV" />
      <argument name="streams_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::IndirectCommandsStreamNV&gt; &amp;" />
      <argument name="sequencesCount_" type="uint32_t" default="{}" />
      <argument name="preprocessBuffer_" type="vk::Buffer" default="{}" />
      <argument name="preprocessOffset_" type="vk::DeviceSize" default="{}" />
      <argument name="preprocessSize_" type="vk::DeviceSize" default="{}" />
      <argument name="sequencesCountBuffer_" type="vk::Buffer" default="{}" />
      <argument name="sequencesCountOffset_" type="vk::DeviceSize" default="{}" />
      <argument name="sequencesIndexBuffer_" type="vk::Buffer" default="{}" />
      <argument name="sequencesIndexOffset_" type="vk::DeviceSize" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="GeneratedCommandsMemoryRequirementsInfoNV">
    <function name="GeneratedCommandsMemoryRequirementsInfoNV">
      <argument name="pipelineBindPoint_" type="vk::PipelineBindPoint" default="vk::PipelineBindPoint::eGraphics" />
      <argument name="pipeline_" type="vk::Pipeline" default="{}" />
      <argument name="indirectCommandsLayout_" type="vk::IndirectCommandsLayoutNV" default="{}" />
      <argument name="maxSequencesCount_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="GraphicsPipelineShaderGroupsCreateInfoNV">
    <function name="GraphicsPipelineShaderGroupsCreateInfoNV">
      <argument name="groups_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::GraphicsShaderGroupCreateInfoNV&gt; &amp;" />
      <argument name="pipelines_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::Pipeline&gt; &amp;" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="GraphicsShaderGroupCreateInfoNV">
    <function name="GraphicsShaderGroupCreateInfoNV">
      <argument name="stages_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::PipelineShaderStageCreateInfo&gt; &amp;" />
      <argument name="pVertexInputState_" type="const vk::PipelineVertexInputStateCreateInfo *" default="{}" />
      <argument name="pTessellationState_" type="const vk::PipelineTessellationStateCreateInfo *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="IndirectCommandsLayoutCreateInfoNV">
    <function name="IndirectCommandsLayoutCreateInfoNV">
      <argument name="flags_" type="vk::IndirectCommandsLayoutUsageFlagsNV" />
      <argument name="pipelineBindPoint_" type="vk::PipelineBindPoint" />
      <argument name="tokens_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::IndirectCommandsLayoutTokenNV&gt; &amp;" />
      <argument name="streamStrides_" type="const vk::ArrayProxyNoTemporaries&lt;const uint32_t&gt; &amp;" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="IndirectCommandsLayoutTokenNV">
    <function name="IndirectCommandsLayoutTokenNV">
      <argument name="tokenType_" type="vk::IndirectCommandsTokenTypeNV" />
      <argument name="stream_" type="uint32_t" />
      <argument name="offset_" type="uint32_t" />
      <argument name="vertexBindingUnit_" type="uint32_t" />
      <argument name="vertexDynamicStride_" type="vk::Bool32" />
      <argument name="pushconstantPipelineLayout_" type="vk::PipelineLayout" />
      <argument name="pushconstantShaderStageFlags_" type="vk::ShaderStageFlags" />
      <argument name="pushconstantOffset_" type="uint32_t" />
      <argument name="pushconstantSize_" type="uint32_t" />
      <argument name="indirectStateFlags_" type="vk::IndirectStateFlagsNV" />
      <argument name="indexTypes_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::IndexType&gt; &amp;" />
      <argument name="indexTypeValues_" type="const vk::ArrayProxyNoTemporaries&lt;const uint32_t&gt; &amp;" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="IndirectCommandsStreamNV">
    <function name="IndirectCommandsStreamNV">
      <argument name="buffer_" type="vk::Buffer" default="{}" />
      <argument name="offset_" type="vk::DeviceSize" default="{}" />
    </function>
  </struct>
  <struct name="PhysicalDeviceDeviceGeneratedCommandsFeaturesNV">
    <function name="PhysicalDeviceDeviceGeneratedCommandsFeaturesNV">
      <argument name="deviceGeneratedCommands_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceDeviceGeneratedCommandsPropertiesNV">
    <function name="PhysicalDeviceDeviceGeneratedCommandsPropertiesNV">
      <argument name="maxGraphicsShaderGroupCount_" type="uint32_t" default="{}" />
      <argument name="maxIndirectSequenceCount_" type="uint32_t" default="{}" />
      <argument name="maxIndirectCommandsTokenCount_" type="uint32_t" default="{}" />
      <argument name="maxIndirectCommandsStreamCount_" type="uint32_t" default="{}" />
      <argument name="maxIndirectCommandsTokenOffset_" type="uint32_t" default="{}" />
      <argument name="maxIndirectCommandsStreamStride_" type="uint32_t" default="{}" />
      <argument name="minSequencesCountBufferOffsetAlignment_" type="uint32_t" default="{}" />
      <argument name="minSequencesIndexBufferOffsetAlignment_" type="uint32_t" default="{}" />
      <argument name="minIndirectCommandsBufferOffsetAlignment_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SetStateFlagsIndirectCommandNV">
    <function name="SetStateFlagsIndirectCommandNV">
      <argument name="data_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <struct name="CommandBufferInheritanceViewportScissorInfoNV">
    <function name="CommandBufferInheritanceViewportScissorInfoNV">
      <argument name="viewportScissor2D_" type="vk::Bool32" default="{}" />
      <argument name="viewportDepthCount_" type="uint32_t" default="{}" />
      <argument name="pViewportDepths_" type="const vk::Viewport *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceInheritedViewportScissorFeaturesNV">
    <function name="PhysicalDeviceInheritedViewportScissorFeaturesNV">
      <argument name="inheritedViewportScissor2D_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceTexelBufferAlignmentFeaturesEXT">
    <function name="PhysicalDeviceTexelBufferAlignmentFeaturesEXT">
      <argument name="texelBufferAlignment_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="CommandBufferInheritanceRenderPassTransformInfoQCOM">
    <function name="CommandBufferInheritanceRenderPassTransformInfoQCOM">
      <argument name="transform_" type="vk::SurfaceTransformFlagBitsKHR" default="vk::SurfaceTransformFlagBitsKHR::eIdentity" />
      <argument name="renderArea_" type="vk::Rect2D" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="RenderPassTransformBeginInfoQCOM">
    <function name="RenderPassTransformBeginInfoQCOM">
      <argument name="transform_" type="vk::SurfaceTransformFlagBitsKHR" default="vk::SurfaceTransformFlagBitsKHR::eIdentity" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DepthBiasInfoEXT">
    <function name="DepthBiasInfoEXT">
      <argument name="depthBiasConstantFactor_" type="float" default="{}" />
      <argument name="depthBiasClamp_" type="float" default="{}" />
      <argument name="depthBiasSlopeFactor_" type="float" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DepthBiasRepresentationInfoEXT">
    <function name="DepthBiasRepresentationInfoEXT">
      <argument name="depthBiasRepresentation_" type="vk::DepthBiasRepresentationEXT" default="vk::DepthBiasRepresentationEXT::eLeastRepresentableValueFormat" />
      <argument name="depthBiasExact_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceDepthBiasControlFeaturesEXT">
    <function name="PhysicalDeviceDepthBiasControlFeaturesEXT">
      <argument name="depthBiasControl_" type="vk::Bool32" default="{}" />
      <argument name="leastRepresentableValueForceUnormRepresentation_" type="vk::Bool32" default="{}" />
      <argument name="floatRepresentation_" type="vk::Bool32" default="{}" />
      <argument name="depthBiasExact_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DeviceDeviceMemoryReportCreateInfoEXT">
    <function name="DeviceDeviceMemoryReportCreateInfoEXT">
      <argument name="flags_" type="vk::DeviceMemoryReportFlagsEXT" default="" />
      <argument name="pfnUserCallback_" type="PFN_vkDeviceMemoryReportCallbackEXT" default="{}" />
      <argument name="pUserData_" type="void *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DeviceMemoryReportCallbackDataEXT">
    <function name="DeviceMemoryReportCallbackDataEXT">
      <argument name="flags_" type="vk::DeviceMemoryReportFlagsEXT" default="" />
      <argument name="type_" type="vk::DeviceMemoryReportEventTypeEXT" default="vk::DeviceMemoryReportEventTypeEXT::eAllocate" />
      <argument name="memoryObjectId_" type="uint64_t" default="{}" />
      <argument name="size_" type="vk::DeviceSize" default="{}" />
      <argument name="objectType_" type="vk::ObjectType" default="vk::ObjectType::eUnknown" />
      <argument name="objectHandle_" type="uint64_t" default="{}" />
      <argument name="heapIndex_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceDeviceMemoryReportFeaturesEXT">
    <function name="PhysicalDeviceDeviceMemoryReportFeaturesEXT">
      <argument name="deviceMemoryReport_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceRobustness2FeaturesEXT">
    <function name="PhysicalDeviceRobustness2FeaturesEXT">
      <argument name="robustBufferAccess2_" type="vk::Bool32" default="{}" />
      <argument name="robustImageAccess2_" type="vk::Bool32" default="{}" />
      <argument name="nullDescriptor_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceRobustness2PropertiesEXT">
    <function name="PhysicalDeviceRobustness2PropertiesEXT">
      <argument name="robustStorageBufferAccessSizeAlignment_" type="vk::DeviceSize" default="{}" />
      <argument name="robustUniformBufferAccessSizeAlignment_" type="vk::DeviceSize" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceCustomBorderColorFeaturesEXT">
    <function name="PhysicalDeviceCustomBorderColorFeaturesEXT">
      <argument name="customBorderColors_" type="vk::Bool32" default="{}" />
      <argument name="customBorderColorWithoutFormat_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceCustomBorderColorPropertiesEXT">
    <function name="PhysicalDeviceCustomBorderColorPropertiesEXT">
      <argument name="maxCustomBorderColorSamplers_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SamplerCustomBorderColorCreateInfoEXT">
    <function name="SamplerCustomBorderColorCreateInfoEXT">
      <argument name="customBorderColor_" type="vk::ClearColorValue" default="{}" />
      <argument name="format_" type="vk::Format" default="vk::Format::eUndefined" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineLibraryCreateInfoKHR">
    <function name="PipelineLibraryCreateInfoKHR">
      <argument name="libraries_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::Pipeline&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDevicePresentBarrierFeaturesNV">
    <function name="PhysicalDevicePresentBarrierFeaturesNV">
      <argument name="presentBarrier_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SurfaceCapabilitiesPresentBarrierNV">
    <function name="SurfaceCapabilitiesPresentBarrierNV">
      <argument name="presentBarrierSupported_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SwapchainPresentBarrierCreateInfoNV">
    <function name="SwapchainPresentBarrierCreateInfoNV">
      <argument name="presentBarrierEnable_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDevicePresentIdFeaturesKHR">
    <function name="PhysicalDevicePresentIdFeaturesKHR">
      <argument name="presentId_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PresentIdKHR">
    <function name="PresentIdKHR">
      <argument name="presentIds_" type="const vk::ArrayProxyNoTemporaries&lt;const uint64_t&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceVideoEncodeQualityLevelInfoKHR">
    <function name="PhysicalDeviceVideoEncodeQualityLevelInfoKHR">
      <argument name="pVideoProfile_" type="const vk::VideoProfileInfoKHR *" default="{}" />
      <argument name="qualityLevel_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="QueryPoolVideoEncodeFeedbackCreateInfoKHR">
    <function name="QueryPoolVideoEncodeFeedbackCreateInfoKHR">
      <argument name="encodeFeedbackFlags_" type="vk::VideoEncodeFeedbackFlagsKHR" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeCapabilitiesKHR">
    <function name="VideoEncodeCapabilitiesKHR">
      <argument name="flags_" type="vk::VideoEncodeCapabilityFlagsKHR" default="" />
      <argument name="rateControlModes_" type="vk::VideoEncodeRateControlModeFlagsKHR" default="" />
      <argument name="maxRateControlLayers_" type="uint32_t" default="{}" />
      <argument name="maxBitrate_" type="uint64_t" default="{}" />
      <argument name="maxQualityLevels_" type="uint32_t" default="{}" />
      <argument name="encodeInputPictureGranularity_" type="vk::Extent2D" default="{}" />
      <argument name="supportedEncodeFeedbackFlags_" type="vk::VideoEncodeFeedbackFlagsKHR" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeInfoKHR">
    <function name="VideoEncodeInfoKHR">
      <argument name="flags_" type="vk::VideoEncodeFlagsKHR" />
      <argument name="dstBuffer_" type="vk::Buffer" />
      <argument name="dstBufferOffset_" type="vk::DeviceSize" />
      <argument name="dstBufferRange_" type="vk::DeviceSize" />
      <argument name="srcPictureResource_" type="vk::VideoPictureResourceInfoKHR" />
      <argument name="pSetupReferenceSlot_" type="const vk::VideoReferenceSlotInfoKHR *" />
      <argument name="referenceSlots_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::VideoReferenceSlotInfoKHR&gt; &amp;" />
      <argument name="precedingExternallyEncodedBytes_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeQualityLevelInfoKHR">
    <function name="VideoEncodeQualityLevelInfoKHR">
      <argument name="qualityLevel_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeQualityLevelPropertiesKHR">
    <function name="VideoEncodeQualityLevelPropertiesKHR">
      <argument name="preferredRateControlMode_" type="vk::VideoEncodeRateControlModeFlagBitsKHR" default="vk::VideoEncodeRateControlModeFlagBitsKHR::eDefault" />
      <argument name="preferredRateControlLayerCount_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeRateControlInfoKHR">
    <function name="VideoEncodeRateControlInfoKHR">
      <argument name="flags_" type="vk::VideoEncodeRateControlFlagsKHR" />
      <argument name="rateControlMode_" type="vk::VideoEncodeRateControlModeFlagBitsKHR" />
      <argument name="layers_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::VideoEncodeRateControlLayerInfoKHR&gt; &amp;" />
      <argument name="virtualBufferSizeInMs_" type="uint32_t" default="{}" />
      <argument name="initialVirtualBufferSizeInMs_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeRateControlLayerInfoKHR">
    <function name="VideoEncodeRateControlLayerInfoKHR">
      <argument name="averageBitrate_" type="uint64_t" default="{}" />
      <argument name="maxBitrate_" type="uint64_t" default="{}" />
      <argument name="frameRateNumerator_" type="uint32_t" default="{}" />
      <argument name="frameRateDenominator_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeSessionParametersFeedbackInfoKHR">
    <function name="VideoEncodeSessionParametersFeedbackInfoKHR">
      <argument name="hasOverrides_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeSessionParametersGetInfoKHR">
    <function name="VideoEncodeSessionParametersGetInfoKHR">
      <argument name="videoSessionParameters_" type="vk::VideoSessionParametersKHR" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoEncodeUsageInfoKHR">
    <function name="VideoEncodeUsageInfoKHR">
      <argument name="videoUsageHints_" type="vk::VideoEncodeUsageFlagsKHR" default="" />
      <argument name="videoContentHints_" type="vk::VideoEncodeContentFlagsKHR" default="" />
      <argument name="tuningMode_" type="vk::VideoEncodeTuningModeKHR" default="vk::VideoEncodeTuningModeKHR::eDefault" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DeviceDiagnosticsConfigCreateInfoNV">
    <function name="DeviceDiagnosticsConfigCreateInfoNV">
      <argument name="flags_" type="vk::DeviceDiagnosticsConfigFlagsNV" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceDiagnosticsConfigFeaturesNV">
    <function name="PhysicalDeviceDiagnosticsConfigFeaturesNV">
      <argument name="diagnosticsConfig_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="QueryLowLatencySupportNV">
    <function name="QueryLowLatencySupportNV">
      <argument name="pQueriedLowLatencyData_" type="void *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="CheckpointData2NV">
    <function name="CheckpointData2NV">
      <argument name="stage_" type="vk::PipelineStageFlags2" default="" />
      <argument name="pCheckpointMarker_" type="void *" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="QueueFamilyCheckpointProperties2NV">
    <function name="QueueFamilyCheckpointProperties2NV">
      <argument name="checkpointExecutionStageMask_" type="vk::PipelineStageFlags2" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="AccelerationStructureCaptureDescriptorDataInfoEXT">
    <function name="AccelerationStructureCaptureDescriptorDataInfoEXT">
      <argument name="accelerationStructure_" type="vk::AccelerationStructureKHR" default="{}" />
      <argument name="accelerationStructureNV_" type="vk::AccelerationStructureNV" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="BufferCaptureDescriptorDataInfoEXT">
    <function name="BufferCaptureDescriptorDataInfoEXT">
      <argument name="buffer_" type="vk::Buffer" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DescriptorAddressInfoEXT">
    <function name="DescriptorAddressInfoEXT">
      <argument name="address_" type="vk::DeviceAddress" default="{}" />
      <argument name="range_" type="vk::DeviceSize" default="{}" />
      <argument name="format_" type="vk::Format" default="vk::Format::eUndefined" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DescriptorBufferBindingInfoEXT">
    <function name="DescriptorBufferBindingInfoEXT">
      <argument name="address_" type="vk::DeviceAddress" default="{}" />
      <argument name="usage_" type="vk::BufferUsageFlags" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DescriptorBufferBindingPushDescriptorBufferHandleEXT">
    <function name="DescriptorBufferBindingPushDescriptorBufferHandleEXT">
      <argument name="buffer_" type="vk::Buffer" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <union name="DescriptorDataEXT">
    <function name="DescriptorDataEXT">
      <argument name="pSampler_" type="const vk::Sampler *" default="{}" />
    </function>
    <function name="DescriptorDataEXT">
      <argument name="pDescriptorImageInfo_" type="const vk::DescriptorImageInfo *" />
    </function>
    <function name="DescriptorDataEXT">
      <argument name="pDescriptorAddressInfoEXT_" type="const vk::DescriptorAddressInfoEXT *" />
    </function>
    <function name="DescriptorDataEXT">
      <argument name="accelerationStructure_" type="vk::DeviceAddress" />
    </function>
  </union>
  <struct name="DescriptorGetInfoEXT">
    <function name="DescriptorGetInfoEXT">
      <argument name="type_" type="vk::DescriptorType" default="vk::DescriptorType::eSampler" />
      <argument name="data_" type="vk::DescriptorDataEXT" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ImageCaptureDescriptorDataInfoEXT">
    <function name="ImageCaptureDescriptorDataInfoEXT">
      <argument name="image_" type="vk::Image" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ImageViewCaptureDescriptorDataInfoEXT">
    <function name="ImageViewCaptureDescriptorDataInfoEXT">
      <argument name="imageView_" type="vk::ImageView" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="OpaqueCaptureDescriptorDataCreateInfoEXT">
    <function name="OpaqueCaptureDescriptorDataCreateInfoEXT">
      <argument name="opaqueCaptureDescriptorData_" type="const void *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceDescriptorBufferDensityMapPropertiesEXT">
    <function name="PhysicalDeviceDescriptorBufferDensityMapPropertiesEXT">
      <argument name="combinedImageSamplerDensityMapDescriptorSize_" type="size_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceDescriptorBufferFeaturesEXT">
    <function name="PhysicalDeviceDescriptorBufferFeaturesEXT">
      <argument name="descriptorBuffer_" type="vk::Bool32" default="{}" />
      <argument name="descriptorBufferCaptureReplay_" type="vk::Bool32" default="{}" />
      <argument name="descriptorBufferImageLayoutIgnored_" type="vk::Bool32" default="{}" />
      <argument name="descriptorBufferPushDescriptors_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceDescriptorBufferPropertiesEXT">
    <function name="PhysicalDeviceDescriptorBufferPropertiesEXT">
      <argument name="combinedImageSamplerDescriptorSingleArray_" type="vk::Bool32" default="{}" />
      <argument name="bufferlessPushDescriptors_" type="vk::Bool32" default="{}" />
      <argument name="allowSamplerImageViewPostSubmitCreation_" type="vk::Bool32" default="{}" />
      <argument name="descriptorBufferOffsetAlignment_" type="vk::DeviceSize" default="{}" />
      <argument name="maxDescriptorBufferBindings_" type="uint32_t" default="{}" />
      <argument name="maxResourceDescriptorBufferBindings_" type="uint32_t" default="{}" />
      <argument name="maxSamplerDescriptorBufferBindings_" type="uint32_t" default="{}" />
      <argument name="maxEmbeddedImmutableSamplerBindings_" type="uint32_t" default="{}" />
      <argument name="maxEmbeddedImmutableSamplers_" type="uint32_t" default="{}" />
      <argument name="bufferCaptureReplayDescriptorDataSize_" type="size_t" default="{}" />
      <argument name="imageCaptureReplayDescriptorDataSize_" type="size_t" default="{}" />
      <argument name="imageViewCaptureReplayDescriptorDataSize_" type="size_t" default="{}" />
      <argument name="samplerCaptureReplayDescriptorDataSize_" type="size_t" default="{}" />
      <argument name="accelerationStructureCaptureReplayDescriptorDataSize_" type="size_t" default="{}" />
      <argument name="samplerDescriptorSize_" type="size_t" default="{}" />
      <argument name="combinedImageSamplerDescriptorSize_" type="size_t" default="{}" />
      <argument name="sampledImageDescriptorSize_" type="size_t" default="{}" />
      <argument name="storageImageDescriptorSize_" type="size_t" default="{}" />
      <argument name="uniformTexelBufferDescriptorSize_" type="size_t" default="{}" />
      <argument name="robustUniformTexelBufferDescriptorSize_" type="size_t" default="{}" />
      <argument name="storageTexelBufferDescriptorSize_" type="size_t" default="{}" />
      <argument name="robustStorageTexelBufferDescriptorSize_" type="size_t" default="{}" />
      <argument name="uniformBufferDescriptorSize_" type="size_t" default="{}" />
      <argument name="robustUniformBufferDescriptorSize_" type="size_t" default="{}" />
      <argument name="storageBufferDescriptorSize_" type="size_t" default="{}" />
      <argument name="robustStorageBufferDescriptorSize_" type="size_t" default="{}" />
      <argument name="inputAttachmentDescriptorSize_" type="size_t" default="{}" />
      <argument name="accelerationStructureDescriptorSize_" type="size_t" default="{}" />
      <argument name="maxSamplerDescriptorBufferRange_" type="vk::DeviceSize" default="{}" />
      <argument name="maxResourceDescriptorBufferRange_" type="vk::DeviceSize" default="{}" />
      <argument name="samplerDescriptorBufferAddressSpaceSize_" type="vk::DeviceSize" default="{}" />
      <argument name="resourceDescriptorBufferAddressSpaceSize_" type="vk::DeviceSize" default="{}" />
      <argument name="descriptorBufferAddressSpaceSize_" type="vk::DeviceSize" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SamplerCaptureDescriptorDataInfoEXT">
    <function name="SamplerCaptureDescriptorDataInfoEXT">
      <argument name="sampler_" type="vk::Sampler" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="GraphicsPipelineLibraryCreateInfoEXT">
    <function name="GraphicsPipelineLibraryCreateInfoEXT">
      <argument name="flags_" type="vk::GraphicsPipelineLibraryFlagsEXT" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceGraphicsPipelineLibraryFeaturesEXT">
    <function name="PhysicalDeviceGraphicsPipelineLibraryFeaturesEXT">
      <argument name="graphicsPipelineLibrary_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceGraphicsPipelineLibraryPropertiesEXT">
    <function name="PhysicalDeviceGraphicsPipelineLibraryPropertiesEXT">
      <argument name="graphicsPipelineLibraryFastLinking_" type="vk::Bool32" default="{}" />
      <argument name="graphicsPipelineLibraryIndependentInterpolationDecoration_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD">
    <function name="PhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD">
      <argument name="shaderEarlyAndLateFragmentTests_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceFragmentShaderBarycentricFeaturesKHR">
    <function name="PhysicalDeviceFragmentShaderBarycentricFeaturesKHR">
      <argument name="fragmentShaderBarycentric_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceFragmentShaderBarycentricPropertiesKHR">
    <function name="PhysicalDeviceFragmentShaderBarycentricPropertiesKHR">
      <argument name="triStripVertexOrderIndependentOfProvokingVertex_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR">
    <function name="PhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR">
      <argument name="shaderSubgroupUniformControlFlow_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceFragmentShadingRateEnumsFeaturesNV">
    <function name="PhysicalDeviceFragmentShadingRateEnumsFeaturesNV">
      <argument name="fragmentShadingRateEnums_" type="vk::Bool32" default="{}" />
      <argument name="supersampleFragmentShadingRates_" type="vk::Bool32" default="{}" />
      <argument name="noInvocationFragmentShadingRates_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceFragmentShadingRateEnumsPropertiesNV">
    <function name="PhysicalDeviceFragmentShadingRateEnumsPropertiesNV">
      <argument name="maxFragmentShadingRateInvocationCount_" type="vk::SampleCountFlagBits" default="vk::SampleCountFlagBits::e1" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineFragmentShadingRateEnumStateCreateInfoNV">
    <function name="PipelineFragmentShadingRateEnumStateCreateInfoNV">
      <argument name="shadingRateType_" type="vk::FragmentShadingRateTypeNV" default="vk::FragmentShadingRateTypeNV::eFragmentSize" />
      <argument name="shadingRate_" type="vk::FragmentShadingRateNV" default="vk::FragmentShadingRateNV::e1InvocationPerPixel" />
      <argument name="combinerOps_" type="const std::array&lt;vk::FragmentShadingRateCombinerOpKHR, 2&gt; &amp;" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="AccelerationStructureGeometryMotionTrianglesDataNV">
    <function name="AccelerationStructureGeometryMotionTrianglesDataNV">
      <argument name="vertexData_" type="vk::DeviceOrHostAddressConstKHR" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="AccelerationStructureMatrixMotionInstanceNV">
    <function name="AccelerationStructureMatrixMotionInstanceNV">
      <argument name="transformT0_" type="vk::TransformMatrixKHR" default="{}" />
      <argument name="transformT1_" type="vk::TransformMatrixKHR" default="{}" />
      <argument name="instanceCustomIndex_" type="uint32_t" default="{}" />
      <argument name="mask_" type="uint32_t" default="{}" />
      <argument name="instanceShaderBindingTableRecordOffset_" type="uint32_t" default="{}" />
      <argument name="flags_" type="vk::GeometryInstanceFlagsKHR" default="" />
      <argument name="accelerationStructureReference_" type="uint64_t" default="{}" />
    </function>
  </struct>
  <struct name="AccelerationStructureMotionInfoNV">
    <function name="AccelerationStructureMotionInfoNV">
      <argument name="maxInstances_" type="uint32_t" default="{}" />
      <argument name="flags_" type="vk::AccelerationStructureMotionInfoFlagsNV" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <union name="AccelerationStructureMotionInstanceDataNV">
    <function name="AccelerationStructureMotionInstanceDataNV">
      <argument name="staticInstance_" type="vk::AccelerationStructureInstanceKHR" default="" />
    </function>
    <function name="AccelerationStructureMotionInstanceDataNV">
      <argument name="matrixMotionInstance_" type="vk::AccelerationStructureMatrixMotionInstanceNV" />
    </function>
    <function name="AccelerationStructureMotionInstanceDataNV">
      <argument name="srtMotionInstance_" type="vk::AccelerationStructureSRTMotionInstanceNV" />
    </function>
  </union>
  <struct name="AccelerationStructureMotionInstanceNV">
    <function name="AccelerationStructureMotionInstanceNV">
      <argument name="type_" type="vk::AccelerationStructureMotionInstanceTypeNV" default="vk::AccelerationStructureMotionInstanceTypeNV::eStatic" />
      <argument name="flags_" type="vk::AccelerationStructureMotionInstanceFlagsNV" default="" />
      <argument name="data_" type="vk::AccelerationStructureMotionInstanceDataNV" default="{}" />
    </function>
  </struct>
  <struct name="AccelerationStructureSRTMotionInstanceNV">
    <function name="AccelerationStructureSRTMotionInstanceNV">
      <argument name="transformT0_" type="vk::SRTDataNV" default="{}" />
      <argument name="transformT1_" type="vk::SRTDataNV" default="{}" />
      <argument name="instanceCustomIndex_" type="uint32_t" default="{}" />
      <argument name="mask_" type="uint32_t" default="{}" />
      <argument name="instanceShaderBindingTableRecordOffset_" type="uint32_t" default="{}" />
      <argument name="flags_" type="vk::GeometryInstanceFlagsKHR" default="" />
      <argument name="accelerationStructureReference_" type="uint64_t" default="{}" />
    </function>
  </struct>
  <struct name="PhysicalDeviceRayTracingMotionBlurFeaturesNV">
    <function name="PhysicalDeviceRayTracingMotionBlurFeaturesNV">
      <argument name="rayTracingMotionBlur_" type="vk::Bool32" default="{}" />
      <argument name="rayTracingMotionBlurPipelineTraceRaysIndirect_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SRTDataNV">
    <function name="SRTDataNV">
      <argument name="sx_" type="float" default="{}" />
      <argument name="a_" type="float" default="{}" />
      <argument name="b_" type="float" default="{}" />
      <argument name="pvx_" type="float" default="{}" />
      <argument name="sy_" type="float" default="{}" />
      <argument name="c_" type="float" default="{}" />
      <argument name="pvy_" type="float" default="{}" />
      <argument name="sz_" type="float" default="{}" />
      <argument name="pvz_" type="float" default="{}" />
      <argument name="qx_" type="float" default="{}" />
      <argument name="qy_" type="float" default="{}" />
      <argument name="qz_" type="float" default="{}" />
      <argument name="qw_" type="float" default="{}" />
      <argument name="tx_" type="float" default="{}" />
      <argument name="ty_" type="float" default="{}" />
      <argument name="tz_" type="float" default="{}" />
    </function>
  </struct>
  <struct name="DrawMeshTasksIndirectCommandEXT">
    <function name="DrawMeshTasksIndirectCommandEXT">
      <argument name="groupCountX_" type="uint32_t" default="{}" />
      <argument name="groupCountY_" type="uint32_t" default="{}" />
      <argument name="groupCountZ_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <struct name="PhysicalDeviceMeshShaderFeaturesEXT">
    <function name="PhysicalDeviceMeshShaderFeaturesEXT">
      <argument name="taskShader_" type="vk::Bool32" default="{}" />
      <argument name="meshShader_" type="vk::Bool32" default="{}" />
      <argument name="multiviewMeshShader_" type="vk::Bool32" default="{}" />
      <argument name="primitiveFragmentShadingRateMeshShader_" type="vk::Bool32" default="{}" />
      <argument name="meshShaderQueries_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceMeshShaderPropertiesEXT">
    <function name="PhysicalDeviceMeshShaderPropertiesEXT">
      <argument name="maxTaskWorkGroupTotalCount_" type="uint32_t" default="{}" />
      <argument name="maxTaskWorkGroupCount_" type="const std::array&lt;uint32_t, 3&gt; &amp;" default="" />
      <argument name="maxTaskWorkGroupInvocations_" type="uint32_t" default="{}" />
      <argument name="maxTaskWorkGroupSize_" type="const std::array&lt;uint32_t, 3&gt; &amp;" default="" />
      <argument name="maxTaskPayloadSize_" type="uint32_t" default="{}" />
      <argument name="maxTaskSharedMemorySize_" type="uint32_t" default="{}" />
      <argument name="maxTaskPayloadAndSharedMemorySize_" type="uint32_t" default="{}" />
      <argument name="maxMeshWorkGroupTotalCount_" type="uint32_t" default="{}" />
      <argument name="maxMeshWorkGroupCount_" type="const std::array&lt;uint32_t, 3&gt; &amp;" default="" />
      <argument name="maxMeshWorkGroupInvocations_" type="uint32_t" default="{}" />
      <argument name="maxMeshWorkGroupSize_" type="const std::array&lt;uint32_t, 3&gt; &amp;" default="" />
      <argument name="maxMeshSharedMemorySize_" type="uint32_t" default="{}" />
      <argument name="maxMeshPayloadAndSharedMemorySize_" type="uint32_t" default="{}" />
      <argument name="maxMeshOutputMemorySize_" type="uint32_t" default="{}" />
      <argument name="maxMeshPayloadAndOutputMemorySize_" type="uint32_t" default="{}" />
      <argument name="maxMeshOutputComponents_" type="uint32_t" default="{}" />
      <argument name="maxMeshOutputVertices_" type="uint32_t" default="{}" />
      <argument name="maxMeshOutputPrimitives_" type="uint32_t" default="{}" />
      <argument name="maxMeshOutputLayers_" type="uint32_t" default="{}" />
      <argument name="maxMeshMultiviewViewCount_" type="uint32_t" default="{}" />
      <argument name="meshOutputPerVertexGranularity_" type="uint32_t" default="{}" />
      <argument name="meshOutputPerPrimitiveGranularity_" type="uint32_t" default="{}" />
      <argument name="maxPreferredTaskWorkGroupInvocations_" type="uint32_t" default="{}" />
      <argument name="maxPreferredMeshWorkGroupInvocations_" type="uint32_t" default="{}" />
      <argument name="prefersLocalInvocationVertexOutput_" type="vk::Bool32" default="{}" />
      <argument name="prefersLocalInvocationPrimitiveOutput_" type="vk::Bool32" default="{}" />
      <argument name="prefersCompactVertexOutput_" type="vk::Bool32" default="{}" />
      <argument name="prefersCompactPrimitiveOutput_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT">
    <function name="PhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT">
      <argument name="ycbcr2plane444Formats_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceFragmentDensityMap2FeaturesEXT">
    <function name="PhysicalDeviceFragmentDensityMap2FeaturesEXT">
      <argument name="fragmentDensityMapDeferred_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceFragmentDensityMap2PropertiesEXT">
    <function name="PhysicalDeviceFragmentDensityMap2PropertiesEXT">
      <argument name="subsampledLoads_" type="vk::Bool32" default="{}" />
      <argument name="subsampledCoarseReconstructionEarlyAccess_" type="vk::Bool32" default="{}" />
      <argument name="maxSubsampledArrayLayers_" type="uint32_t" default="{}" />
      <argument name="maxDescriptorSetSubsampledSamplers_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="CopyCommandTransformInfoQCOM">
    <function name="CopyCommandTransformInfoQCOM">
      <argument name="transform_" type="vk::SurfaceTransformFlagBitsKHR" default="vk::SurfaceTransformFlagBitsKHR::eIdentity" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR">
    <function name="PhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR">
      <argument name="workgroupMemoryExplicitLayout_" type="vk::Bool32" default="{}" />
      <argument name="workgroupMemoryExplicitLayoutScalarBlockLayout_" type="vk::Bool32" default="{}" />
      <argument name="workgroupMemoryExplicitLayout8BitAccess_" type="vk::Bool32" default="{}" />
      <argument name="workgroupMemoryExplicitLayout16BitAccess_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ImageCompressionControlEXT">
    <function name="ImageCompressionControlEXT">
      <argument name="flags_" type="vk::ImageCompressionFlagsEXT" />
      <argument name="fixedRateFlags_" type="const vk::ArrayProxyNoTemporaries&lt;vk::ImageCompressionFixedRateFlagsEXT&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ImageCompressionPropertiesEXT">
    <function name="ImageCompressionPropertiesEXT">
      <argument name="imageCompressionFlags_" type="vk::ImageCompressionFlagsEXT" default="" />
      <argument name="imageCompressionFixedRateFlags_" type="vk::ImageCompressionFixedRateFlagsEXT" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceImageCompressionControlFeaturesEXT">
    <function name="PhysicalDeviceImageCompressionControlFeaturesEXT">
      <argument name="imageCompressionControl_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT">
    <function name="PhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT">
      <argument name="attachmentFeedbackLoopLayout_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDevice4444FormatsFeaturesEXT">
    <function name="PhysicalDevice4444FormatsFeaturesEXT">
      <argument name="formatA4R4G4B4_" type="vk::Bool32" default="{}" />
      <argument name="formatA4B4G4R4_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DeviceFaultAddressInfoEXT">
    <function name="DeviceFaultAddressInfoEXT">
      <argument name="addressType_" type="vk::DeviceFaultAddressTypeEXT" default="vk::DeviceFaultAddressTypeEXT::eNone" />
      <argument name="reportedAddress_" type="vk::DeviceAddress" default="{}" />
      <argument name="addressPrecision_" type="vk::DeviceSize" default="{}" />
    </function>
  </struct>
  <struct name="DeviceFaultCountsEXT">
    <function name="DeviceFaultCountsEXT">
      <argument name="addressInfoCount_" type="uint32_t" default="{}" />
      <argument name="vendorInfoCount_" type="uint32_t" default="{}" />
      <argument name="vendorBinarySize_" type="vk::DeviceSize" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DeviceFaultInfoEXT">
    <function name="DeviceFaultInfoEXT">
      <argument name="description_" type="const std::array&lt;char, 256U&gt; &amp;" default="" />
      <argument name="pAddressInfos_" type="vk::DeviceFaultAddressInfoEXT *" default="{}" />
      <argument name="pVendorInfos_" type="vk::DeviceFaultVendorInfoEXT *" default="{}" />
      <argument name="pVendorBinaryData_" type="void *" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DeviceFaultVendorBinaryHeaderVersionOneEXT">
    <function name="DeviceFaultVendorBinaryHeaderVersionOneEXT">
      <argument name="headerSize_" type="uint32_t" default="{}" />
      <argument name="headerVersion_" type="vk::DeviceFaultVendorBinaryHeaderVersionEXT" default="vk::DeviceFaultVendorBinaryHeaderVersionEXT::eOne" />
      <argument name="vendorID_" type="uint32_t" default="{}" />
      <argument name="deviceID_" type="uint32_t" default="{}" />
      <argument name="driverVersion_" type="uint32_t" default="{}" />
      <argument name="pipelineCacheUUID_" type="const std::array&lt;uint8_t, 16U&gt; &amp;" default="" />
      <argument name="applicationNameOffset_" type="uint32_t" default="{}" />
      <argument name="applicationVersion_" type="uint32_t" default="{}" />
      <argument name="engineNameOffset_" type="uint32_t" default="{}" />
      <argument name="engineVersion_" type="uint32_t" default="{}" />
      <argument name="apiVersion_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <struct name="DeviceFaultVendorInfoEXT">
    <function name="DeviceFaultVendorInfoEXT">
      <argument name="description_" type="const std::array&lt;char, 256U&gt; &amp;" default="" />
      <argument name="vendorFaultCode_" type="uint64_t" default="{}" />
      <argument name="vendorFaultData_" type="uint64_t" default="{}" />
    </function>
  </struct>
  <struct name="PhysicalDeviceFaultFeaturesEXT">
    <function name="PhysicalDeviceFaultFeaturesEXT">
      <argument name="deviceFault_" type="vk::Bool32" default="{}" />
      <argument name="deviceFaultVendorBinary_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceRGBA10X6FormatsFeaturesEXT">
    <function name="PhysicalDeviceRGBA10X6FormatsFeaturesEXT">
      <argument name="formatRgba10x6WithoutYCbCrSampler_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceVertexInputDynamicStateFeaturesEXT">
    <function name="PhysicalDeviceVertexInputDynamicStateFeaturesEXT">
      <argument name="vertexInputDynamicState_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VertexInputAttributeDescription2EXT">
    <function name="VertexInputAttributeDescription2EXT">
      <argument name="location_" type="uint32_t" default="{}" />
      <argument name="binding_" type="uint32_t" default="{}" />
      <argument name="format_" type="vk::Format" default="vk::Format::eUndefined" />
      <argument name="offset_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VertexInputBindingDescription2EXT">
    <function name="VertexInputBindingDescription2EXT">
      <argument name="binding_" type="uint32_t" default="{}" />
      <argument name="stride_" type="uint32_t" default="{}" />
      <argument name="inputRate_" type="vk::VertexInputRate" default="vk::VertexInputRate::eVertex" />
      <argument name="divisor_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceDrmPropertiesEXT">
    <function name="PhysicalDeviceDrmPropertiesEXT">
      <argument name="hasPrimary_" type="vk::Bool32" default="{}" />
      <argument name="hasRender_" type="vk::Bool32" default="{}" />
      <argument name="primaryMajor_" type="int64_t" default="{}" />
      <argument name="primaryMinor_" type="int64_t" default="{}" />
      <argument name="renderMajor_" type="int64_t" default="{}" />
      <argument name="renderMinor_" type="int64_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DeviceAddressBindingCallbackDataEXT">
    <function name="DeviceAddressBindingCallbackDataEXT">
      <argument name="flags_" type="vk::DeviceAddressBindingFlagsEXT" default="" />
      <argument name="baseAddress_" type="vk::DeviceAddress" default="{}" />
      <argument name="size_" type="vk::DeviceSize" default="{}" />
      <argument name="bindingType_" type="vk::DeviceAddressBindingTypeEXT" default="vk::DeviceAddressBindingTypeEXT::eBind" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceAddressBindingReportFeaturesEXT">
    <function name="PhysicalDeviceAddressBindingReportFeaturesEXT">
      <argument name="reportAddressBinding_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceDepthClipControlFeaturesEXT">
    <function name="PhysicalDeviceDepthClipControlFeaturesEXT">
      <argument name="depthClipControl_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineViewportDepthClipControlCreateInfoEXT">
    <function name="PipelineViewportDepthClipControlCreateInfoEXT">
      <argument name="negativeOneToOne_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDevicePrimitiveTopologyListRestartFeaturesEXT">
    <function name="PhysicalDevicePrimitiveTopologyListRestartFeaturesEXT">
      <argument name="primitiveTopologyListRestart_" type="vk::Bool32" default="{}" />
      <argument name="primitiveTopologyPatchListRestart_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceSubpassShadingFeaturesHUAWEI">
    <function name="PhysicalDeviceSubpassShadingFeaturesHUAWEI">
      <argument name="subpassShading_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceSubpassShadingPropertiesHUAWEI">
    <function name="PhysicalDeviceSubpassShadingPropertiesHUAWEI">
      <argument name="maxSubpassShadingWorkgroupSizeAspectRatio_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SubpassShadingPipelineCreateInfoHUAWEI">
    <function name="SubpassShadingPipelineCreateInfoHUAWEI">
      <argument name="renderPass_" type="vk::RenderPass" default="{}" />
      <argument name="subpass_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceInvocationMaskFeaturesHUAWEI">
    <function name="PhysicalDeviceInvocationMaskFeaturesHUAWEI">
      <argument name="invocationMask_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="MemoryGetRemoteAddressInfoNV">
    <function name="MemoryGetRemoteAddressInfoNV">
      <argument name="memory_" type="vk::DeviceMemory" default="{}" />
      <argument name="handleType_" type="vk::ExternalMemoryHandleTypeFlagBits" default="vk::ExternalMemoryHandleTypeFlagBits::eOpaqueFd" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceExternalMemoryRDMAFeaturesNV">
    <function name="PhysicalDeviceExternalMemoryRDMAFeaturesNV">
      <argument name="externalMemoryRDMA_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDevicePipelinePropertiesFeaturesEXT">
    <function name="PhysicalDevicePipelinePropertiesFeaturesEXT">
      <argument name="pipelinePropertiesIdentifier_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelinePropertiesIdentifierEXT">
    <function name="PipelinePropertiesIdentifierEXT">
      <argument name="pipelineIdentifier_" type="const std::array&lt;uint8_t, 16U&gt; &amp;" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="FrameBoundaryEXT">
    <function name="FrameBoundaryEXT">
      <argument name="flags_" type="vk::FrameBoundaryFlagsEXT" default="" />
      <argument name="frameID_" type="uint64_t" default="{}" />
      <argument name="imageCount_" type="uint32_t" default="{}" />
      <argument name="pImages_" type="const vk::Image *" default="{}" />
      <argument name="bufferCount_" type="uint32_t" default="{}" />
      <argument name="pBuffers_" type="const vk::Buffer *" default="{}" />
      <argument name="tagName_" type="uint64_t" default="{}" />
      <argument name="tagSize_" type="size_t" default="{}" />
      <argument name="pTag_" type="const void *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceFrameBoundaryFeaturesEXT">
    <function name="PhysicalDeviceFrameBoundaryFeaturesEXT">
      <argument name="frameBoundary_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="MultisampledRenderToSingleSampledInfoEXT">
    <function name="MultisampledRenderToSingleSampledInfoEXT">
      <argument name="multisampledRenderToSingleSampledEnable_" type="vk::Bool32" default="{}" />
      <argument name="rasterizationSamples_" type="vk::SampleCountFlagBits" default="vk::SampleCountFlagBits::e1" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT">
    <function name="PhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT">
      <argument name="multisampledRenderToSingleSampled_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SubpassResolvePerformanceQueryEXT">
    <function name="SubpassResolvePerformanceQueryEXT">
      <argument name="optimal_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceExtendedDynamicState2FeaturesEXT">
    <function name="PhysicalDeviceExtendedDynamicState2FeaturesEXT">
      <argument name="extendedDynamicState2_" type="vk::Bool32" default="{}" />
      <argument name="extendedDynamicState2LogicOp_" type="vk::Bool32" default="{}" />
      <argument name="extendedDynamicState2PatchControlPoints_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceColorWriteEnableFeaturesEXT">
    <function name="PhysicalDeviceColorWriteEnableFeaturesEXT">
      <argument name="colorWriteEnable_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineColorWriteCreateInfoEXT">
    <function name="PipelineColorWriteCreateInfoEXT">
      <argument name="colorWriteEnables_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::Bool32&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDevicePrimitivesGeneratedQueryFeaturesEXT">
    <function name="PhysicalDevicePrimitivesGeneratedQueryFeaturesEXT">
      <argument name="primitivesGeneratedQuery_" type="vk::Bool32" default="{}" />
      <argument name="primitivesGeneratedQueryWithRasterizerDiscard_" type="vk::Bool32" default="{}" />
      <argument name="primitivesGeneratedQueryWithNonZeroStreams_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceRayTracingMaintenance1FeaturesKHR">
    <function name="PhysicalDeviceRayTracingMaintenance1FeaturesKHR">
      <argument name="rayTracingMaintenance1_" type="vk::Bool32" default="{}" />
      <argument name="rayTracingPipelineTraceRaysIndirect2_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="TraceRaysIndirectCommand2KHR">
    <function name="TraceRaysIndirectCommand2KHR">
      <argument name="raygenShaderRecordAddress_" type="vk::DeviceAddress" default="{}" />
      <argument name="raygenShaderRecordSize_" type="vk::DeviceSize" default="{}" />
      <argument name="missShaderBindingTableAddress_" type="vk::DeviceAddress" default="{}" />
      <argument name="missShaderBindingTableSize_" type="vk::DeviceSize" default="{}" />
      <argument name="missShaderBindingTableStride_" type="vk::DeviceSize" default="{}" />
      <argument name="hitShaderBindingTableAddress_" type="vk::DeviceAddress" default="{}" />
      <argument name="hitShaderBindingTableSize_" type="vk::DeviceSize" default="{}" />
      <argument name="hitShaderBindingTableStride_" type="vk::DeviceSize" default="{}" />
      <argument name="callableShaderBindingTableAddress_" type="vk::DeviceAddress" default="{}" />
      <argument name="callableShaderBindingTableSize_" type="vk::DeviceSize" default="{}" />
      <argument name="callableShaderBindingTableStride_" type="vk::DeviceSize" default="{}" />
      <argument name="width_" type="uint32_t" default="{}" />
      <argument name="height_" type="uint32_t" default="{}" />
      <argument name="depth_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <struct name="ImageViewMinLodCreateInfoEXT">
    <function name="ImageViewMinLodCreateInfoEXT">
      <argument name="minLod_" type="float" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceImageViewMinLodFeaturesEXT">
    <function name="PhysicalDeviceImageViewMinLodFeaturesEXT">
      <argument name="minLod_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="MultiDrawIndexedInfoEXT">
    <function name="MultiDrawIndexedInfoEXT">
      <argument name="firstIndex_" type="uint32_t" default="{}" />
      <argument name="indexCount_" type="uint32_t" default="{}" />
      <argument name="vertexOffset_" type="int32_t" default="{}" />
    </function>
  </struct>
  <struct name="MultiDrawInfoEXT">
    <function name="MultiDrawInfoEXT">
      <argument name="firstVertex_" type="uint32_t" default="{}" />
      <argument name="vertexCount_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <struct name="PhysicalDeviceMultiDrawFeaturesEXT">
    <function name="PhysicalDeviceMultiDrawFeaturesEXT">
      <argument name="multiDraw_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceMultiDrawPropertiesEXT">
    <function name="PhysicalDeviceMultiDrawPropertiesEXT">
      <argument name="maxMultiDrawCount_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceImage2DViewOf3DFeaturesEXT">
    <function name="PhysicalDeviceImage2DViewOf3DFeaturesEXT">
      <argument name="image2DViewOf3D_" type="vk::Bool32" default="{}" />
      <argument name="sampler2DViewOf3D_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceShaderTileImageFeaturesEXT">
    <function name="PhysicalDeviceShaderTileImageFeaturesEXT">
      <argument name="shaderTileImageColorReadAccess_" type="vk::Bool32" default="{}" />
      <argument name="shaderTileImageDepthReadAccess_" type="vk::Bool32" default="{}" />
      <argument name="shaderTileImageStencilReadAccess_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceShaderTileImagePropertiesEXT">
    <function name="PhysicalDeviceShaderTileImagePropertiesEXT">
      <argument name="shaderTileImageCoherentReadAccelerated_" type="vk::Bool32" default="{}" />
      <argument name="shaderTileImageReadSampleFromPixelRateInvocation_" type="vk::Bool32" default="{}" />
      <argument name="shaderTileImageReadFromHelperInvocation_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="AccelerationStructureTrianglesOpacityMicromapEXT">
    <function name="AccelerationStructureTrianglesOpacityMicromapEXT">
      <argument name="indexType_" type="vk::IndexType" />
      <argument name="indexBuffer_" type="vk::DeviceOrHostAddressConstKHR" />
      <argument name="indexStride_" type="vk::DeviceSize" />
      <argument name="baseTriangle_" type="uint32_t" />
      <argument name="usageCounts_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::MicromapUsageEXT&gt; &amp;" />
      <argument name="pUsageCounts_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::MicromapUsageEXT *const&gt; &amp;" default="" />
      <argument name="micromap_" type="vk::MicromapEXT" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="CopyMemoryToMicromapInfoEXT">
    <function name="CopyMemoryToMicromapInfoEXT">
      <argument name="src_" type="vk::DeviceOrHostAddressConstKHR" default="{}" />
      <argument name="dst_" type="vk::MicromapEXT" default="{}" />
      <argument name="mode_" type="vk::CopyMicromapModeEXT" default="vk::CopyMicromapModeEXT::eClone" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="CopyMicromapInfoEXT">
    <function name="CopyMicromapInfoEXT">
      <argument name="src_" type="vk::MicromapEXT" default="{}" />
      <argument name="dst_" type="vk::MicromapEXT" default="{}" />
      <argument name="mode_" type="vk::CopyMicromapModeEXT" default="vk::CopyMicromapModeEXT::eClone" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="CopyMicromapToMemoryInfoEXT">
    <function name="CopyMicromapToMemoryInfoEXT">
      <argument name="src_" type="vk::MicromapEXT" default="{}" />
      <argument name="dst_" type="vk::DeviceOrHostAddressKHR" default="{}" />
      <argument name="mode_" type="vk::CopyMicromapModeEXT" default="vk::CopyMicromapModeEXT::eClone" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="MicromapBuildInfoEXT">
    <function name="MicromapBuildInfoEXT">
      <argument name="type_" type="vk::MicromapTypeEXT" />
      <argument name="flags_" type="vk::BuildMicromapFlagsEXT" />
      <argument name="mode_" type="vk::BuildMicromapModeEXT" />
      <argument name="dstMicromap_" type="vk::MicromapEXT" />
      <argument name="usageCounts_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::MicromapUsageEXT&gt; &amp;" />
      <argument name="pUsageCounts_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::MicromapUsageEXT *const&gt; &amp;" default="" />
      <argument name="data_" type="vk::DeviceOrHostAddressConstKHR" default="{}" />
      <argument name="scratchData_" type="vk::DeviceOrHostAddressKHR" default="{}" />
      <argument name="triangleArray_" type="vk::DeviceOrHostAddressConstKHR" default="{}" />
      <argument name="triangleArrayStride_" type="vk::DeviceSize" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="MicromapBuildSizesInfoEXT">
    <function name="MicromapBuildSizesInfoEXT">
      <argument name="micromapSize_" type="vk::DeviceSize" default="{}" />
      <argument name="buildScratchSize_" type="vk::DeviceSize" default="{}" />
      <argument name="discardable_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="MicromapCreateInfoEXT">
    <function name="MicromapCreateInfoEXT">
      <argument name="createFlags_" type="vk::MicromapCreateFlagsEXT" default="" />
      <argument name="buffer_" type="vk::Buffer" default="{}" />
      <argument name="offset_" type="vk::DeviceSize" default="{}" />
      <argument name="size_" type="vk::DeviceSize" default="{}" />
      <argument name="type_" type="vk::MicromapTypeEXT" default="vk::MicromapTypeEXT::eOpacityMicromap" />
      <argument name="deviceAddress_" type="vk::DeviceAddress" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="MicromapTriangleEXT">
    <function name="MicromapTriangleEXT">
      <argument name="dataOffset_" type="uint32_t" default="{}" />
      <argument name="subdivisionLevel_" type="uint16_t" default="{}" />
      <argument name="format_" type="uint16_t" default="{}" />
    </function>
  </struct>
  <struct name="MicromapUsageEXT">
    <function name="MicromapUsageEXT">
      <argument name="count_" type="uint32_t" default="{}" />
      <argument name="subdivisionLevel_" type="uint32_t" default="{}" />
      <argument name="format_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <struct name="MicromapVersionInfoEXT">
    <function name="MicromapVersionInfoEXT">
      <argument name="pVersionData_" type="const uint8_t *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceOpacityMicromapFeaturesEXT">
    <function name="PhysicalDeviceOpacityMicromapFeaturesEXT">
      <argument name="micromap_" type="vk::Bool32" default="{}" />
      <argument name="micromapCaptureReplay_" type="vk::Bool32" default="{}" />
      <argument name="micromapHostCommands_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceOpacityMicromapPropertiesEXT">
    <function name="PhysicalDeviceOpacityMicromapPropertiesEXT">
      <argument name="maxOpacity2StateSubdivisionLevel_" type="uint32_t" default="{}" />
      <argument name="maxOpacity4StateSubdivisionLevel_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceClusterCullingShaderFeaturesHUAWEI">
    <function name="PhysicalDeviceClusterCullingShaderFeaturesHUAWEI">
      <argument name="clustercullingShader_" type="vk::Bool32" default="{}" />
      <argument name="multiviewClusterCullingShader_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceClusterCullingShaderPropertiesHUAWEI">
    <function name="PhysicalDeviceClusterCullingShaderPropertiesHUAWEI">
      <argument name="maxWorkGroupCount_" type="const std::array&lt;uint32_t, 3&gt; &amp;" default="" />
      <argument name="maxWorkGroupSize_" type="const std::array&lt;uint32_t, 3&gt; &amp;" default="" />
      <argument name="maxOutputClusterCount_" type="uint32_t" default="{}" />
      <argument name="indirectBufferOffsetAlignment_" type="vk::DeviceSize" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceClusterCullingShaderVrsFeaturesHUAWEI">
    <function name="PhysicalDeviceClusterCullingShaderVrsFeaturesHUAWEI">
      <argument name="clusterShadingRate_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceBorderColorSwizzleFeaturesEXT">
    <function name="PhysicalDeviceBorderColorSwizzleFeaturesEXT">
      <argument name="borderColorSwizzle_" type="vk::Bool32" default="{}" />
      <argument name="borderColorSwizzleFromImage_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SamplerBorderColorComponentMappingCreateInfoEXT">
    <function name="SamplerBorderColorComponentMappingCreateInfoEXT">
      <argument name="components_" type="vk::ComponentMapping" default="{}" />
      <argument name="srgb_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDevicePageableDeviceLocalMemoryFeaturesEXT">
    <function name="PhysicalDevicePageableDeviceLocalMemoryFeaturesEXT">
      <argument name="pageableDeviceLocalMemory_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceShaderCorePropertiesARM">
    <function name="PhysicalDeviceShaderCorePropertiesARM">
      <argument name="pixelRate_" type="uint32_t" default="{}" />
      <argument name="texelRate_" type="uint32_t" default="{}" />
      <argument name="fmaRate_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DeviceQueueShaderCoreControlCreateInfoARM">
    <function name="DeviceQueueShaderCoreControlCreateInfoARM">
      <argument name="shaderCoreCount_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceSchedulingControlsFeaturesARM">
    <function name="PhysicalDeviceSchedulingControlsFeaturesARM">
      <argument name="schedulingControls_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceSchedulingControlsPropertiesARM">
    <function name="PhysicalDeviceSchedulingControlsPropertiesARM">
      <argument name="schedulingControlsFlags_" type="vk::PhysicalDeviceSchedulingControlsFlagsARM" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ImageViewSlicedCreateInfoEXT">
    <function name="ImageViewSlicedCreateInfoEXT">
      <argument name="sliceOffset_" type="uint32_t" default="{}" />
      <argument name="sliceCount_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceImageSlicedViewOf3DFeaturesEXT">
    <function name="PhysicalDeviceImageSlicedViewOf3DFeaturesEXT">
      <argument name="imageSlicedViewOf3D_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DescriptorSetBindingReferenceVALVE">
    <function name="DescriptorSetBindingReferenceVALVE">
      <argument name="descriptorSetLayout_" type="vk::DescriptorSetLayout" default="{}" />
      <argument name="binding_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DescriptorSetLayoutHostMappingInfoVALVE">
    <function name="DescriptorSetLayoutHostMappingInfoVALVE">
      <argument name="descriptorOffset_" type="size_t" default="{}" />
      <argument name="descriptorSize_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceDescriptorSetHostMappingFeaturesVALVE">
    <function name="PhysicalDeviceDescriptorSetHostMappingFeaturesVALVE">
      <argument name="descriptorSetHostMapping_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceDepthClampZeroOneFeaturesEXT">
    <function name="PhysicalDeviceDepthClampZeroOneFeaturesEXT">
      <argument name="depthClampZeroOne_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceNonSeamlessCubeMapFeaturesEXT">
    <function name="PhysicalDeviceNonSeamlessCubeMapFeaturesEXT">
      <argument name="nonSeamlessCubeMap_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceRenderPassStripedFeaturesARM">
    <function name="PhysicalDeviceRenderPassStripedFeaturesARM">
      <argument name="renderPassStriped_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceRenderPassStripedPropertiesARM">
    <function name="PhysicalDeviceRenderPassStripedPropertiesARM">
      <argument name="renderPassStripeGranularity_" type="vk::Extent2D" default="{}" />
      <argument name="maxRenderPassStripes_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="RenderPassStripeBeginInfoARM">
    <function name="RenderPassStripeBeginInfoARM">
      <argument name="stripeInfos_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::RenderPassStripeInfoARM&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="RenderPassStripeInfoARM">
    <function name="RenderPassStripeInfoARM">
      <argument name="stripeArea_" type="vk::Rect2D" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="RenderPassStripeSubmitInfoARM">
    <function name="RenderPassStripeSubmitInfoARM">
      <argument name="stripeSemaphoreInfos_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::SemaphoreSubmitInfo&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM">
    <function name="PhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM">
      <argument name="fragmentDensityMapOffset_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM">
    <function name="PhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM">
      <argument name="fragmentDensityOffsetGranularity_" type="vk::Extent2D" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SubpassFragmentDensityMapOffsetEndInfoQCOM">
    <function name="SubpassFragmentDensityMapOffsetEndInfoQCOM">
      <argument name="fragmentDensityOffsets_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::Offset2D&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="CopyMemoryIndirectCommandNV">
    <function name="CopyMemoryIndirectCommandNV">
      <argument name="srcAddress_" type="vk::DeviceAddress" default="{}" />
      <argument name="dstAddress_" type="vk::DeviceAddress" default="{}" />
      <argument name="size_" type="vk::DeviceSize" default="{}" />
    </function>
  </struct>
  <struct name="CopyMemoryToImageIndirectCommandNV">
    <function name="CopyMemoryToImageIndirectCommandNV">
      <argument name="srcAddress_" type="vk::DeviceAddress" default="{}" />
      <argument name="bufferRowLength_" type="uint32_t" default="{}" />
      <argument name="bufferImageHeight_" type="uint32_t" default="{}" />
      <argument name="imageSubresource_" type="vk::ImageSubresourceLayers" default="" />
      <argument name="imageOffset_" type="vk::Offset3D" default="{}" />
      <argument name="imageExtent_" type="vk::Extent3D" default="{}" />
    </function>
  </struct>
  <struct name="PhysicalDeviceCopyMemoryIndirectFeaturesNV">
    <function name="PhysicalDeviceCopyMemoryIndirectFeaturesNV">
      <argument name="indirectCopy_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceCopyMemoryIndirectPropertiesNV">
    <function name="PhysicalDeviceCopyMemoryIndirectPropertiesNV">
      <argument name="supportedQueues_" type="vk::QueueFlags" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DecompressMemoryRegionNV">
    <function name="DecompressMemoryRegionNV">
      <argument name="srcAddress_" type="vk::DeviceAddress" default="{}" />
      <argument name="dstAddress_" type="vk::DeviceAddress" default="{}" />
      <argument name="compressedSize_" type="vk::DeviceSize" default="{}" />
      <argument name="decompressedSize_" type="vk::DeviceSize" default="{}" />
      <argument name="decompressionMethod_" type="vk::MemoryDecompressionMethodFlagsNV" default="" />
    </function>
  </struct>
  <struct name="PhysicalDeviceMemoryDecompressionFeaturesNV">
    <function name="PhysicalDeviceMemoryDecompressionFeaturesNV">
      <argument name="memoryDecompression_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceMemoryDecompressionPropertiesNV">
    <function name="PhysicalDeviceMemoryDecompressionPropertiesNV">
      <argument name="decompressionMethods_" type="vk::MemoryDecompressionMethodFlagsNV" default="" />
      <argument name="maxDecompressionIndirectCount_" type="uint64_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="BindPipelineIndirectCommandNV">
    <function name="BindPipelineIndirectCommandNV">
      <argument name="pipelineAddress_" type="vk::DeviceAddress" default="{}" />
    </function>
  </struct>
  <struct name="ComputePipelineIndirectBufferInfoNV">
    <function name="ComputePipelineIndirectBufferInfoNV">
      <argument name="deviceAddress_" type="vk::DeviceAddress" default="{}" />
      <argument name="size_" type="vk::DeviceSize" default="{}" />
      <argument name="pipelineDeviceAddressCaptureReplay_" type="vk::DeviceAddress" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV">
    <function name="PhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV">
      <argument name="deviceGeneratedCompute_" type="vk::Bool32" default="{}" />
      <argument name="deviceGeneratedComputePipelines_" type="vk::Bool32" default="{}" />
      <argument name="deviceGeneratedComputeCaptureReplay_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineIndirectDeviceAddressInfoNV">
    <function name="PipelineIndirectDeviceAddressInfoNV">
      <argument name="pipelineBindPoint_" type="vk::PipelineBindPoint" default="vk::PipelineBindPoint::eGraphics" />
      <argument name="pipeline_" type="vk::Pipeline" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceLinearColorAttachmentFeaturesNV">
    <function name="PhysicalDeviceLinearColorAttachmentFeaturesNV">
      <argument name="linearColorAttachment_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceImageCompressionControlSwapchainFeaturesEXT">
    <function name="PhysicalDeviceImageCompressionControlSwapchainFeaturesEXT">
      <argument name="imageCompressionControlSwapchain_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ImageViewSampleWeightCreateInfoQCOM">
    <function name="ImageViewSampleWeightCreateInfoQCOM">
      <argument name="filterCenter_" type="vk::Offset2D" default="{}" />
      <argument name="filterSize_" type="vk::Extent2D" default="{}" />
      <argument name="numPhases_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceImageProcessingFeaturesQCOM">
    <function name="PhysicalDeviceImageProcessingFeaturesQCOM">
      <argument name="textureSampleWeighted_" type="vk::Bool32" default="{}" />
      <argument name="textureBoxFilter_" type="vk::Bool32" default="{}" />
      <argument name="textureBlockMatch_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceImageProcessingPropertiesQCOM">
    <function name="PhysicalDeviceImageProcessingPropertiesQCOM">
      <argument name="maxWeightFilterPhases_" type="uint32_t" default="{}" />
      <argument name="maxWeightFilterDimension_" type="vk::Extent2D" default="{}" />
      <argument name="maxBlockMatchRegion_" type="vk::Extent2D" default="{}" />
      <argument name="maxBoxFilterBlockSize_" type="vk::Extent2D" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceNestedCommandBufferFeaturesEXT">
    <function name="PhysicalDeviceNestedCommandBufferFeaturesEXT">
      <argument name="nestedCommandBuffer_" type="vk::Bool32" default="{}" />
      <argument name="nestedCommandBufferRendering_" type="vk::Bool32" default="{}" />
      <argument name="nestedCommandBufferSimultaneousUse_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceNestedCommandBufferPropertiesEXT">
    <function name="PhysicalDeviceNestedCommandBufferPropertiesEXT">
      <argument name="maxCommandBufferNestingLevel_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ExternalMemoryAcquireUnmodifiedEXT">
    <function name="ExternalMemoryAcquireUnmodifiedEXT">
      <argument name="acquireUnmodifiedMemory_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ColorBlendAdvancedEXT">
    <function name="ColorBlendAdvancedEXT">
      <argument name="advancedBlendOp_" type="vk::BlendOp" default="vk::BlendOp::eAdd" />
      <argument name="srcPremultiplied_" type="vk::Bool32" default="{}" />
      <argument name="dstPremultiplied_" type="vk::Bool32" default="{}" />
      <argument name="blendOverlap_" type="vk::BlendOverlapEXT" default="vk::BlendOverlapEXT::eUncorrelated" />
      <argument name="clampResults_" type="vk::Bool32" default="{}" />
    </function>
  </struct>
  <struct name="ColorBlendEquationEXT">
    <function name="ColorBlendEquationEXT">
      <argument name="srcColorBlendFactor_" type="vk::BlendFactor" default="vk::BlendFactor::eZero" />
      <argument name="dstColorBlendFactor_" type="vk::BlendFactor" default="vk::BlendFactor::eZero" />
      <argument name="colorBlendOp_" type="vk::BlendOp" default="vk::BlendOp::eAdd" />
      <argument name="srcAlphaBlendFactor_" type="vk::BlendFactor" default="vk::BlendFactor::eZero" />
      <argument name="dstAlphaBlendFactor_" type="vk::BlendFactor" default="vk::BlendFactor::eZero" />
      <argument name="alphaBlendOp_" type="vk::BlendOp" default="vk::BlendOp::eAdd" />
    </function>
  </struct>
  <struct name="PhysicalDeviceExtendedDynamicState3FeaturesEXT">
    <function name="PhysicalDeviceExtendedDynamicState3FeaturesEXT">
      <argument name="extendedDynamicState3TessellationDomainOrigin_" type="vk::Bool32" default="{}" />
      <argument name="extendedDynamicState3DepthClampEnable_" type="vk::Bool32" default="{}" />
      <argument name="extendedDynamicState3PolygonMode_" type="vk::Bool32" default="{}" />
      <argument name="extendedDynamicState3RasterizationSamples_" type="vk::Bool32" default="{}" />
      <argument name="extendedDynamicState3SampleMask_" type="vk::Bool32" default="{}" />
      <argument name="extendedDynamicState3AlphaToCoverageEnable_" type="vk::Bool32" default="{}" />
      <argument name="extendedDynamicState3AlphaToOneEnable_" type="vk::Bool32" default="{}" />
      <argument name="extendedDynamicState3LogicOpEnable_" type="vk::Bool32" default="{}" />
      <argument name="extendedDynamicState3ColorBlendEnable_" type="vk::Bool32" default="{}" />
      <argument name="extendedDynamicState3ColorBlendEquation_" type="vk::Bool32" default="{}" />
      <argument name="extendedDynamicState3ColorWriteMask_" type="vk::Bool32" default="{}" />
      <argument name="extendedDynamicState3RasterizationStream_" type="vk::Bool32" default="{}" />
      <argument name="extendedDynamicState3ConservativeRasterizationMode_" type="vk::Bool32" default="{}" />
      <argument name="extendedDynamicState3ExtraPrimitiveOverestimationSize_" type="vk::Bool32" default="{}" />
      <argument name="extendedDynamicState3DepthClipEnable_" type="vk::Bool32" default="{}" />
      <argument name="extendedDynamicState3SampleLocationsEnable_" type="vk::Bool32" default="{}" />
      <argument name="extendedDynamicState3ColorBlendAdvanced_" type="vk::Bool32" default="{}" />
      <argument name="extendedDynamicState3ProvokingVertexMode_" type="vk::Bool32" default="{}" />
      <argument name="extendedDynamicState3LineRasterizationMode_" type="vk::Bool32" default="{}" />
      <argument name="extendedDynamicState3LineStippleEnable_" type="vk::Bool32" default="{}" />
      <argument name="extendedDynamicState3DepthClipNegativeOneToOne_" type="vk::Bool32" default="{}" />
      <argument name="extendedDynamicState3ViewportWScalingEnable_" type="vk::Bool32" default="{}" />
      <argument name="extendedDynamicState3ViewportSwizzle_" type="vk::Bool32" default="{}" />
      <argument name="extendedDynamicState3CoverageToColorEnable_" type="vk::Bool32" default="{}" />
      <argument name="extendedDynamicState3CoverageToColorLocation_" type="vk::Bool32" default="{}" />
      <argument name="extendedDynamicState3CoverageModulationMode_" type="vk::Bool32" default="{}" />
      <argument name="extendedDynamicState3CoverageModulationTableEnable_" type="vk::Bool32" default="{}" />
      <argument name="extendedDynamicState3CoverageModulationTable_" type="vk::Bool32" default="{}" />
      <argument name="extendedDynamicState3CoverageReductionMode_" type="vk::Bool32" default="{}" />
      <argument name="extendedDynamicState3RepresentativeFragmentTestEnable_" type="vk::Bool32" default="{}" />
      <argument name="extendedDynamicState3ShadingRateImageEnable_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceExtendedDynamicState3PropertiesEXT">
    <function name="PhysicalDeviceExtendedDynamicState3PropertiesEXT">
      <argument name="dynamicPrimitiveTopologyUnrestricted_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceSubpassMergeFeedbackFeaturesEXT">
    <function name="PhysicalDeviceSubpassMergeFeedbackFeaturesEXT">
      <argument name="subpassMergeFeedback_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="RenderPassCreationControlEXT">
    <function name="RenderPassCreationControlEXT">
      <argument name="disallowMerging_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="RenderPassCreationFeedbackCreateInfoEXT">
    <function name="RenderPassCreationFeedbackCreateInfoEXT">
      <argument name="pRenderPassFeedback_" type="vk::RenderPassCreationFeedbackInfoEXT *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="RenderPassCreationFeedbackInfoEXT">
    <function name="RenderPassCreationFeedbackInfoEXT">
      <argument name="postMergeSubpassCount_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <struct name="RenderPassSubpassFeedbackCreateInfoEXT">
    <function name="RenderPassSubpassFeedbackCreateInfoEXT">
      <argument name="pSubpassFeedback_" type="vk::RenderPassSubpassFeedbackInfoEXT *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="RenderPassSubpassFeedbackInfoEXT">
    <function name="RenderPassSubpassFeedbackInfoEXT">
      <argument name="subpassMergeStatus_" type="vk::SubpassMergeStatusEXT" default="vk::SubpassMergeStatusEXT::eMerged" />
      <argument name="description_" type="const std::array&lt;char, 256U&gt; &amp;" default="" />
      <argument name="postMergeIndex_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <struct name="DirectDriverLoadingInfoLUNARG">
    <function name="DirectDriverLoadingInfoLUNARG">
      <argument name="flags_" type="vk::DirectDriverLoadingFlagsLUNARG" default="" />
      <argument name="pfnGetInstanceProcAddr_" type="PFN_vkGetInstanceProcAddrLUNARG" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DirectDriverLoadingListLUNARG">
    <function name="DirectDriverLoadingListLUNARG">
      <argument name="mode_" type="vk::DirectDriverLoadingModeLUNARG" />
      <argument name="drivers_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::DirectDriverLoadingInfoLUNARG&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceShaderModuleIdentifierFeaturesEXT">
    <function name="PhysicalDeviceShaderModuleIdentifierFeaturesEXT">
      <argument name="shaderModuleIdentifier_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceShaderModuleIdentifierPropertiesEXT">
    <function name="PhysicalDeviceShaderModuleIdentifierPropertiesEXT">
      <argument name="shaderModuleIdentifierAlgorithmUUID_" type="const std::array&lt;uint8_t, 16U&gt; &amp;" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineShaderStageModuleIdentifierCreateInfoEXT">
    <function name="PipelineShaderStageModuleIdentifierCreateInfoEXT">
      <argument name="identifier_" type="const vk::ArrayProxyNoTemporaries&lt;const uint8_t&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ShaderModuleIdentifierEXT">
    <function name="ShaderModuleIdentifierEXT">
      <argument name="identifierSize_" type="uint32_t" default="{}" />
      <argument name="identifier_" type="const std::array&lt;uint8_t, 32U&gt; &amp;" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT">
    <function name="PhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT">
      <argument name="rasterizationOrderColorAttachmentAccess_" type="vk::Bool32" default="{}" />
      <argument name="rasterizationOrderDepthAttachmentAccess_" type="vk::Bool32" default="{}" />
      <argument name="rasterizationOrderStencilAttachmentAccess_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="OpticalFlowExecuteInfoNV">
    <function name="OpticalFlowExecuteInfoNV">
      <argument name="flags_" type="vk::OpticalFlowExecuteFlagsNV" />
      <argument name="regions_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::Rect2D&gt; &amp;" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="OpticalFlowImageFormatInfoNV">
    <function name="OpticalFlowImageFormatInfoNV">
      <argument name="usage_" type="vk::OpticalFlowUsageFlagsNV" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="OpticalFlowImageFormatPropertiesNV">
    <function name="OpticalFlowImageFormatPropertiesNV">
      <argument name="format_" type="vk::Format" default="vk::Format::eUndefined" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="OpticalFlowSessionCreateInfoNV">
    <function name="OpticalFlowSessionCreateInfoNV">
      <argument name="width_" type="uint32_t" default="{}" />
      <argument name="height_" type="uint32_t" default="{}" />
      <argument name="imageFormat_" type="vk::Format" default="vk::Format::eUndefined" />
      <argument name="flowVectorFormat_" type="vk::Format" default="vk::Format::eUndefined" />
      <argument name="costFormat_" type="vk::Format" default="vk::Format::eUndefined" />
      <argument name="outputGridSize_" type="vk::OpticalFlowGridSizeFlagsNV" default="" />
      <argument name="hintGridSize_" type="vk::OpticalFlowGridSizeFlagsNV" default="" />
      <argument name="performanceLevel_" type="vk::OpticalFlowPerformanceLevelNV" default="vk::OpticalFlowPerformanceLevelNV::eUnknown" />
      <argument name="flags_" type="vk::OpticalFlowSessionCreateFlagsNV" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="OpticalFlowSessionCreatePrivateDataInfoNV">
    <function name="OpticalFlowSessionCreatePrivateDataInfoNV">
      <argument name="id_" type="uint32_t" default="{}" />
      <argument name="size_" type="uint32_t" default="{}" />
      <argument name="pPrivateData_" type="const void *" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceOpticalFlowFeaturesNV">
    <function name="PhysicalDeviceOpticalFlowFeaturesNV">
      <argument name="opticalFlow_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceOpticalFlowPropertiesNV">
    <function name="PhysicalDeviceOpticalFlowPropertiesNV">
      <argument name="supportedOutputGridSizes_" type="vk::OpticalFlowGridSizeFlagsNV" default="" />
      <argument name="supportedHintGridSizes_" type="vk::OpticalFlowGridSizeFlagsNV" default="" />
      <argument name="hintSupported_" type="vk::Bool32" default="{}" />
      <argument name="costSupported_" type="vk::Bool32" default="{}" />
      <argument name="bidirectionalFlowSupported_" type="vk::Bool32" default="{}" />
      <argument name="globalFlowSupported_" type="vk::Bool32" default="{}" />
      <argument name="minWidth_" type="uint32_t" default="{}" />
      <argument name="minHeight_" type="uint32_t" default="{}" />
      <argument name="maxWidth_" type="uint32_t" default="{}" />
      <argument name="maxHeight_" type="uint32_t" default="{}" />
      <argument name="maxNumRegionsOfInterest_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceLegacyDitheringFeaturesEXT">
    <function name="PhysicalDeviceLegacyDitheringFeaturesEXT">
      <argument name="legacyDithering_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDevicePipelineProtectedAccessFeaturesEXT">
    <function name="PhysicalDevicePipelineProtectedAccessFeaturesEXT">
      <argument name="pipelineProtectedAccess_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="BufferUsageFlags2CreateInfoKHR">
    <function name="BufferUsageFlags2CreateInfoKHR">
      <argument name="usage_" type="vk::BufferUsageFlags2KHR" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="DeviceImageSubresourceInfoKHR">
    <function name="DeviceImageSubresourceInfoKHR">
      <argument name="pCreateInfo_" type="const vk::ImageCreateInfo *" default="{}" />
      <argument name="pSubresource_" type="const vk::ImageSubresource2KHR *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ImageSubresource2KHR">
    <function name="ImageSubresource2KHR">
      <argument name="imageSubresource_" type="vk::ImageSubresource" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceMaintenance5FeaturesKHR">
    <function name="PhysicalDeviceMaintenance5FeaturesKHR">
      <argument name="maintenance5_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceMaintenance5PropertiesKHR">
    <function name="PhysicalDeviceMaintenance5PropertiesKHR">
      <argument name="earlyFragmentMultisampleCoverageAfterSampleCounting_" type="vk::Bool32" default="{}" />
      <argument name="earlyFragmentSampleMaskTestBeforeSampleCounting_" type="vk::Bool32" default="{}" />
      <argument name="depthStencilSwizzleOneSupport_" type="vk::Bool32" default="{}" />
      <argument name="polygonModePointSize_" type="vk::Bool32" default="{}" />
      <argument name="nonStrictSinglePixelWideLinesUseParallelogram_" type="vk::Bool32" default="{}" />
      <argument name="nonStrictWideLinesUseParallelogram_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineCreateFlags2CreateInfoKHR">
    <function name="PipelineCreateFlags2CreateInfoKHR">
      <argument name="flags_" type="vk::PipelineCreateFlags2KHR" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="RenderingAreaInfoKHR">
    <function name="RenderingAreaInfoKHR">
      <argument name="viewMask_" type="uint32_t" />
      <argument name="colorAttachmentFormats_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::Format&gt; &amp;" />
      <argument name="depthAttachmentFormat_" type="vk::Format" default="vk::Format::eUndefined" />
      <argument name="stencilAttachmentFormat_" type="vk::Format" default="vk::Format::eUndefined" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SubresourceLayout2KHR">
    <function name="SubresourceLayout2KHR">
      <argument name="subresourceLayout_" type="vk::SubresourceLayout" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceRayTracingPositionFetchFeaturesKHR">
    <function name="PhysicalDeviceRayTracingPositionFetchFeaturesKHR">
      <argument name="rayTracingPositionFetch_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceShaderObjectFeaturesEXT">
    <function name="PhysicalDeviceShaderObjectFeaturesEXT">
      <argument name="shaderObject_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceShaderObjectPropertiesEXT">
    <function name="PhysicalDeviceShaderObjectPropertiesEXT">
      <argument name="shaderBinaryUUID_" type="const std::array&lt;uint8_t, 16U&gt; &amp;" default="" />
      <argument name="shaderBinaryVersion_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="ShaderCreateInfoEXT">
    <function name="ShaderCreateInfoEXT">
      <argument name="flags_" type="vk::ShaderCreateFlagsEXT" default="" />
      <argument name="stage_" type="vk::ShaderStageFlagBits" default="vk::ShaderStageFlagBits::eVertex" />
      <argument name="nextStage_" type="vk::ShaderStageFlags" default="" />
      <argument name="codeType_" type="vk::ShaderCodeTypeEXT" default="vk::ShaderCodeTypeEXT::eBinary" />
      <argument name="codeSize_" type="size_t" default="{}" />
      <argument name="pCode_" type="const void *" default="{}" />
      <argument name="pName_" type="const char *" default="{}" />
      <argument name="setLayoutCount_" type="uint32_t" default="{}" />
      <argument name="pSetLayouts_" type="const vk::DescriptorSetLayout *" default="{}" />
      <argument name="pushConstantRangeCount_" type="uint32_t" default="{}" />
      <argument name="pPushConstantRanges_" type="const vk::PushConstantRange *" default="{}" />
      <argument name="pSpecializationInfo_" type="const vk::SpecializationInfo *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceTilePropertiesFeaturesQCOM">
    <function name="PhysicalDeviceTilePropertiesFeaturesQCOM">
      <argument name="tileProperties_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="TilePropertiesQCOM">
    <function name="TilePropertiesQCOM">
      <argument name="tileSize_" type="vk::Extent3D" default="{}" />
      <argument name="apronSize_" type="vk::Extent2D" default="{}" />
      <argument name="origin_" type="vk::Offset2D" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="AmigoProfilingSubmitInfoSEC">
    <function name="AmigoProfilingSubmitInfoSEC">
      <argument name="firstDrawTimestamp_" type="uint64_t" default="{}" />
      <argument name="swapBufferTimestamp_" type="uint64_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceAmigoProfilingFeaturesSEC">
    <function name="PhysicalDeviceAmigoProfilingFeaturesSEC">
      <argument name="amigoProfiling_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM">
    <function name="PhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM">
      <argument name="multiviewPerViewViewports_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceRayTracingInvocationReorderFeaturesNV">
    <function name="PhysicalDeviceRayTracingInvocationReorderFeaturesNV">
      <argument name="rayTracingInvocationReorder_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceRayTracingInvocationReorderPropertiesNV">
    <function name="PhysicalDeviceRayTracingInvocationReorderPropertiesNV">
      <argument name="rayTracingInvocationReorderReorderingHint_" type="vk::RayTracingInvocationReorderModeNV" default="vk::RayTracingInvocationReorderModeNV::eNone" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceExtendedSparseAddressSpaceFeaturesNV">
    <function name="PhysicalDeviceExtendedSparseAddressSpaceFeaturesNV">
      <argument name="extendedSparseAddressSpace_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceExtendedSparseAddressSpacePropertiesNV">
    <function name="PhysicalDeviceExtendedSparseAddressSpacePropertiesNV">
      <argument name="extendedSparseAddressSpaceSize_" type="vk::DeviceSize" default="{}" />
      <argument name="extendedSparseImageUsageFlags_" type="vk::ImageUsageFlags" default="" />
      <argument name="extendedSparseBufferUsageFlags_" type="vk::BufferUsageFlags" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="MutableDescriptorTypeCreateInfoEXT">
    <function name="MutableDescriptorTypeCreateInfoEXT">
      <argument name="mutableDescriptorTypeLists_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::MutableDescriptorTypeListEXT&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="MutableDescriptorTypeListEXT">
    <function name="MutableDescriptorTypeListEXT">
      <argument name="descriptorTypes_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::DescriptorType&gt; &amp;" />
    </function>
  </struct>
  <struct name="PhysicalDeviceMutableDescriptorTypeFeaturesEXT">
    <function name="PhysicalDeviceMutableDescriptorTypeFeaturesEXT">
      <argument name="mutableDescriptorType_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="LayerSettingEXT">
    <function name="LayerSettingEXT">
      <argument name="pLayerName_" type="const char *" default="{}" />
      <argument name="pSettingName_" type="const char *" default="{}" />
      <argument name="type_" type="vk::LayerSettingTypeEXT" default="vk::LayerSettingTypeEXT::eBool32" />
      <argument name="valueCount_" type="uint32_t" default="{}" />
      <argument name="pValues_" type="const void *" default="{}" />
    </function>
  </struct>
  <struct name="LayerSettingsCreateInfoEXT">
    <function name="LayerSettingsCreateInfoEXT">
      <argument name="settings_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::LayerSettingEXT&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceShaderCoreBuiltinsFeaturesARM">
    <function name="PhysicalDeviceShaderCoreBuiltinsFeaturesARM">
      <argument name="shaderCoreBuiltins_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceShaderCoreBuiltinsPropertiesARM">
    <function name="PhysicalDeviceShaderCoreBuiltinsPropertiesARM">
      <argument name="shaderCoreMask_" type="uint64_t" default="{}" />
      <argument name="shaderCoreCount_" type="uint32_t" default="{}" />
      <argument name="shaderWarpsPerCore_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT">
    <function name="PhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT">
      <argument name="pipelineLibraryGroupHandles_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT">
    <function name="PhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT">
      <argument name="dynamicRenderingUnusedAttachments_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="GetLatencyMarkerInfoNV">
    <function name="GetLatencyMarkerInfoNV">
      <argument name="timings_" type="const vk::ArrayProxyNoTemporaries&lt;vk::LatencyTimingsFrameReportNV&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="LatencySleepInfoNV">
    <function name="LatencySleepInfoNV">
      <argument name="signalSemaphore_" type="vk::Semaphore" default="{}" />
      <argument name="value_" type="uint64_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="LatencySleepModeInfoNV">
    <function name="LatencySleepModeInfoNV">
      <argument name="lowLatencyMode_" type="vk::Bool32" default="{}" />
      <argument name="lowLatencyBoost_" type="vk::Bool32" default="{}" />
      <argument name="minimumIntervalUs_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="LatencySubmissionPresentIdNV">
    <function name="LatencySubmissionPresentIdNV">
      <argument name="presentID_" type="uint64_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="LatencySurfaceCapabilitiesNV">
    <function name="LatencySurfaceCapabilitiesNV">
      <argument name="presentModes_" type="const vk::ArrayProxyNoTemporaries&lt;vk::PresentModeKHR&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="LatencyTimingsFrameReportNV">
    <function name="LatencyTimingsFrameReportNV">
      <argument name="presentID_" type="uint64_t" default="{}" />
      <argument name="inputSampleTimeUs_" type="uint64_t" default="{}" />
      <argument name="simStartTimeUs_" type="uint64_t" default="{}" />
      <argument name="simEndTimeUs_" type="uint64_t" default="{}" />
      <argument name="renderSubmitStartTimeUs_" type="uint64_t" default="{}" />
      <argument name="renderSubmitEndTimeUs_" type="uint64_t" default="{}" />
      <argument name="presentStartTimeUs_" type="uint64_t" default="{}" />
      <argument name="presentEndTimeUs_" type="uint64_t" default="{}" />
      <argument name="driverStartTimeUs_" type="uint64_t" default="{}" />
      <argument name="driverEndTimeUs_" type="uint64_t" default="{}" />
      <argument name="osRenderQueueStartTimeUs_" type="uint64_t" default="{}" />
      <argument name="osRenderQueueEndTimeUs_" type="uint64_t" default="{}" />
      <argument name="gpuRenderStartTimeUs_" type="uint64_t" default="{}" />
      <argument name="gpuRenderEndTimeUs_" type="uint64_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="OutOfBandQueueTypeInfoNV">
    <function name="OutOfBandQueueTypeInfoNV">
      <argument name="queueType_" type="vk::OutOfBandQueueTypeNV" default="vk::OutOfBandQueueTypeNV::eRender" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SetLatencyMarkerInfoNV">
    <function name="SetLatencyMarkerInfoNV">
      <argument name="presentID_" type="uint64_t" default="{}" />
      <argument name="marker_" type="vk::LatencyMarkerNV" default="vk::LatencyMarkerNV::eSimulationStart" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SwapchainLatencyCreateInfoNV">
    <function name="SwapchainLatencyCreateInfoNV">
      <argument name="latencyModeEnable_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="CooperativeMatrixPropertiesKHR">
    <function name="CooperativeMatrixPropertiesKHR">
      <argument name="MSize_" type="uint32_t" default="{}" />
      <argument name="NSize_" type="uint32_t" default="{}" />
      <argument name="KSize_" type="uint32_t" default="{}" />
      <argument name="AType_" type="vk::ComponentTypeKHR" default="vk::ComponentTypeKHR::eFloat16" />
      <argument name="BType_" type="vk::ComponentTypeKHR" default="vk::ComponentTypeKHR::eFloat16" />
      <argument name="CType_" type="vk::ComponentTypeKHR" default="vk::ComponentTypeKHR::eFloat16" />
      <argument name="ResultType_" type="vk::ComponentTypeKHR" default="vk::ComponentTypeKHR::eFloat16" />
      <argument name="saturatingAccumulation_" type="vk::Bool32" default="{}" />
      <argument name="scope_" type="vk::ScopeKHR" default="vk::ScopeKHR::eDevice" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceCooperativeMatrixFeaturesKHR">
    <function name="PhysicalDeviceCooperativeMatrixFeaturesKHR">
      <argument name="cooperativeMatrix_" type="vk::Bool32" default="{}" />
      <argument name="cooperativeMatrixRobustBufferAccess_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceCooperativeMatrixPropertiesKHR">
    <function name="PhysicalDeviceCooperativeMatrixPropertiesKHR">
      <argument name="cooperativeMatrixSupportedStages_" type="vk::ShaderStageFlags" default="" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="MultiviewPerViewRenderAreasRenderPassBeginInfoQCOM">
    <function name="MultiviewPerViewRenderAreasRenderPassBeginInfoQCOM">
      <argument name="perViewRenderAreas_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::Rect2D&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM">
    <function name="PhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM">
      <argument name="multiviewPerViewRenderAreas_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceVideoMaintenance1FeaturesKHR">
    <function name="PhysicalDeviceVideoMaintenance1FeaturesKHR">
      <argument name="videoMaintenance1_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VideoInlineQueryInfoKHR">
    <function name="VideoInlineQueryInfoKHR">
      <argument name="queryPool_" type="vk::QueryPool" default="{}" />
      <argument name="firstQuery_" type="uint32_t" default="{}" />
      <argument name="queryCount_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDevicePerStageDescriptorSetFeaturesNV">
    <function name="PhysicalDevicePerStageDescriptorSetFeaturesNV">
      <argument name="perStageDescriptorSet_" type="vk::Bool32" default="{}" />
      <argument name="dynamicPipelineLayout_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceImageProcessing2FeaturesQCOM">
    <function name="PhysicalDeviceImageProcessing2FeaturesQCOM">
      <argument name="textureBlockMatch2_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceImageProcessing2PropertiesQCOM">
    <function name="PhysicalDeviceImageProcessing2PropertiesQCOM">
      <argument name="maxBlockMatchWindow_" type="vk::Extent2D" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SamplerBlockMatchWindowCreateInfoQCOM">
    <function name="SamplerBlockMatchWindowCreateInfoQCOM">
      <argument name="windowExtent_" type="vk::Extent2D" default="{}" />
      <argument name="windowCompareMode_" type="vk::BlockMatchWindowCompareModeQCOM" default="vk::BlockMatchWindowCompareModeQCOM::eMin" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="BlitImageCubicWeightsInfoQCOM">
    <function name="BlitImageCubicWeightsInfoQCOM">
      <argument name="cubicWeights_" type="vk::CubicFilterWeightsQCOM" default="vk::CubicFilterWeightsQCOM::eCatmullRom" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceCubicWeightsFeaturesQCOM">
    <function name="PhysicalDeviceCubicWeightsFeaturesQCOM">
      <argument name="selectableCubicWeights_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SamplerCubicWeightsCreateInfoQCOM">
    <function name="SamplerCubicWeightsCreateInfoQCOM">
      <argument name="cubicWeights_" type="vk::CubicFilterWeightsQCOM" default="vk::CubicFilterWeightsQCOM::eCatmullRom" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceYcbcrDegammaFeaturesQCOM">
    <function name="PhysicalDeviceYcbcrDegammaFeaturesQCOM">
      <argument name="ycbcrDegamma_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM">
    <function name="SamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM">
      <argument name="enableYDegamma_" type="vk::Bool32" default="{}" />
      <argument name="enableCbCrDegamma_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceCubicClampFeaturesQCOM">
    <function name="PhysicalDeviceCubicClampFeaturesQCOM">
      <argument name="cubicRangeClamp_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT">
    <function name="PhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT">
      <argument name="attachmentFeedbackLoopDynamicState_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceVertexAttributeDivisorFeaturesKHR">
    <function name="PhysicalDeviceVertexAttributeDivisorFeaturesKHR">
      <argument name="vertexAttributeInstanceRateDivisor_" type="vk::Bool32" default="{}" />
      <argument name="vertexAttributeInstanceRateZeroDivisor_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceVertexAttributeDivisorPropertiesKHR">
    <function name="PhysicalDeviceVertexAttributeDivisorPropertiesKHR">
      <argument name="maxVertexAttribDivisor_" type="uint32_t" default="{}" />
      <argument name="supportsNonZeroFirstInstance_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PipelineVertexInputDivisorStateCreateInfoKHR">
    <function name="PipelineVertexInputDivisorStateCreateInfoKHR">
      <argument name="vertexBindingDivisors_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::VertexInputBindingDivisorDescriptionKHR&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="VertexInputBindingDivisorDescriptionKHR">
    <function name="VertexInputBindingDivisorDescriptionKHR">
      <argument name="binding_" type="uint32_t" default="{}" />
      <argument name="divisor_" type="uint32_t" default="{}" />
    </function>
  </struct>
  <struct name="PhysicalDeviceLayeredDriverPropertiesMSFT">
    <function name="PhysicalDeviceLayeredDriverPropertiesMSFT">
      <argument name="underlyingAPI_" type="vk::LayeredDriverUnderlyingApiMSFT" default="vk::LayeredDriverUnderlyingApiMSFT::eNone" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="CalibratedTimestampInfoKHR">
    <function name="CalibratedTimestampInfoKHR">
      <argument name="timeDomain_" type="vk::TimeDomainKHR" default="vk::TimeDomainKHR::eDevice" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="BindDescriptorBufferEmbeddedSamplersInfoEXT">
    <function name="BindDescriptorBufferEmbeddedSamplersInfoEXT">
      <argument name="stageFlags_" type="vk::ShaderStageFlags" default="" />
      <argument name="layout_" type="vk::PipelineLayout" default="{}" />
      <argument name="set_" type="uint32_t" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="BindDescriptorSetsInfoKHR">
    <function name="BindDescriptorSetsInfoKHR">
      <argument name="stageFlags_" type="vk::ShaderStageFlags" />
      <argument name="layout_" type="vk::PipelineLayout" />
      <argument name="firstSet_" type="uint32_t" />
      <argument name="descriptorSets_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::DescriptorSet&gt; &amp;" />
      <argument name="dynamicOffsets_" type="const vk::ArrayProxyNoTemporaries&lt;const uint32_t&gt; &amp;" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="BindMemoryStatusKHR">
    <function name="BindMemoryStatusKHR">
      <argument name="pResult_" type="vk::Result *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceMaintenance6FeaturesKHR">
    <function name="PhysicalDeviceMaintenance6FeaturesKHR">
      <argument name="maintenance6_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceMaintenance6PropertiesKHR">
    <function name="PhysicalDeviceMaintenance6PropertiesKHR">
      <argument name="blockTexelViewCompatibleMultipleLayers_" type="vk::Bool32" default="{}" />
      <argument name="maxCombinedImageSamplerDescriptorCount_" type="uint32_t" default="{}" />
      <argument name="fragmentShadingRateClampCombinerInputs_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PushConstantsInfoKHR">
    <function name="PushConstantsInfoKHR">
      <argument name="layout_" type="vk::PipelineLayout" default="{}" />
      <argument name="stageFlags_" type="vk::ShaderStageFlags" default="" />
      <argument name="offset_" type="uint32_t" default="{}" />
      <argument name="size_" type="uint32_t" default="{}" />
      <argument name="pValues_" type="const void *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PushDescriptorSetInfoKHR">
    <function name="PushDescriptorSetInfoKHR">
      <argument name="stageFlags_" type="vk::ShaderStageFlags" />
      <argument name="layout_" type="vk::PipelineLayout" />
      <argument name="set_" type="uint32_t" />
      <argument name="descriptorWrites_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::WriteDescriptorSet&gt; &amp;" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PushDescriptorSetWithTemplateInfoKHR">
    <function name="PushDescriptorSetWithTemplateInfoKHR">
      <argument name="descriptorUpdateTemplate_" type="vk::DescriptorUpdateTemplate" default="{}" />
      <argument name="layout_" type="vk::PipelineLayout" default="{}" />
      <argument name="set_" type="uint32_t" default="{}" />
      <argument name="pData_" type="const void *" default="{}" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="SetDescriptorBufferOffsetsInfoEXT">
    <function name="SetDescriptorBufferOffsetsInfoEXT">
      <argument name="stageFlags_" type="vk::ShaderStageFlags" />
      <argument name="layout_" type="vk::PipelineLayout" />
      <argument name="firstSet_" type="uint32_t" />
      <argument name="bufferIndices_" type="const vk::ArrayProxyNoTemporaries&lt;const uint32_t&gt; &amp;" />
      <argument name="offsets_" type="const vk::ArrayProxyNoTemporaries&lt;const vk::DeviceSize&gt; &amp;" default="" />
      <argument name="pNext_" type="const void *" default="nullptr" />
    </function>
  </struct>
  <struct name="PhysicalDeviceDescriptorPoolOverallocationFeaturesNV">
    <function name="PhysicalDeviceDescriptorPoolOverallocationFeaturesNV">
      <argument name="descriptorPoolOverallocation_" type="vk::Bool32" default="{}" />
      <argument name="pNext_" type="void *" default="nullptr" />
    </function>
  </struct>
  <namespace name="raii" />
</namespace>